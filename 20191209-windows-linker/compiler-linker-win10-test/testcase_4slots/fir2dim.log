
#####==========stderr_mid==========#####:
./testcase_4slots/fir2dim.c:96:1: warning: return type of 'main' is not 'int' [-Wmain-return-type]
void main()
^
./testcase_4slots/fir2dim.c:96:1: note: change return type to 'int'
void main()
^~~~
int
'' is not a recognized processor for this target (ignoring processor)
1 warning generated.

#####==========stderr_asm==========#####:
# Machine code for function pin_down: SSA
Frame Objects:
  fi#-2: size=4, align=4, fixed, at location [SP+12]
  fi#-1: size=4, align=8, fixed, at location [SP+8]
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=4, align=4, at location [SP]
  fi#5: size=4, align=4, at location [SP]
Function Live Ins: %A0 in %vreg0, %A1 in %vreg1

BB#0: derived from LLVM BB %entry
    Live Ins: %A0 %A1
	%vreg1<def> = COPY %A1; CPURegs:%vreg1
	%vreg0<def> = COPY %A0; CPURegs:%vreg0
	%vreg2<def> = LD <fi#-2>, 0; mem:LD4[FixedStack-2] CPURegs:%vreg2
	%vreg3<def> = LD <fi#-1>, 0; mem:LD4[FixedStack-1](align=8) CPURegs:%vreg3
	ST %vreg0, <fi#0>, 0; mem:ST4[%pimage.addr] CPURegs:%vreg0
	ST %vreg1, <fi#1>, 0; mem:ST4[%parray.addr] CPURegs:%vreg1
	ST %vreg3<kill>, <fi#2>, 0; mem:ST4[%pcoeff.addr] CPURegs:%vreg3
	ST %vreg2<kill>, <fi#3>, 0; mem:ST4[%poutput.addr] CPURegs:%vreg2
	%vreg4<def> = MovGR %ZERO, 0; CPURegs:%vreg4
	ST %vreg4, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg4
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#5
	%vreg5<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg5
	%vreg6<def> = LTI %vreg5<kill>, 4; CPURegs:%vreg6,%vreg5
	JNC %vreg6<kill>, <BB#6>; CPURegs:%vreg6
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#6(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	ST %vreg4, <fi#5>, 0; mem:ST4[%f] CPURegs:%vreg4
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.cond1
    Predecessors according to CFG: BB#2 BB#4
	%vreg62<def> = LD <fi#5>, 0; mem:LD4[%f] CPURegs:%vreg62
	%vreg63<def> = LTI %vreg62<kill>, 4; CPURegs:%vreg63,%vreg62
	JNC %vreg63<kill>, <BB#5>; CPURegs:%vreg63
	Jmp <BB#4>
    Successors according to CFG: BB#4(124) BB#5(4)

BB#4: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#3
	%vreg66<def> = LD <fi#0>, 0; mem:LD4[%pimage.addr] CPURegs:%vreg66
	%vreg67<def> = ADDiu %vreg66, 4; CPURegs:%vreg67,%vreg66
	ST %vreg67<kill>, <fi#0>, 0; mem:ST4[%pimage.addr] CPURegs:%vreg67
	%vreg68<def> = MovGR %ZERO, 1; CPURegs:%vreg68
	ST %vreg68<kill>, %vreg66, 0; mem:ST4[%2] CPURegs:%vreg68,%vreg66
	%vreg69<def> = LD <fi#5>, 0; mem:LD4[%f] CPURegs:%vreg69
	%vreg70<def> = ADDiu %vreg69<kill>, 1; CPURegs:%vreg70,%vreg69
	ST %vreg70<kill>, <fi#5>, 0; mem:ST4[%f] CPURegs:%vreg70
	Jmp <BB#3>
    Successors according to CFG: BB#3

BB#5: derived from LLVM BB %for.inc4
    Predecessors according to CFG: BB#3
	%vreg64<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg64
	%vreg65<def> = ADDiu %vreg64<kill>, 1; CPURegs:%vreg65,%vreg64
	ST %vreg65<kill>, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg65
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#6: derived from LLVM BB %for.end6
    Predecessors according to CFG: BB#1
	%vreg7<def> = LD <fi#0>, 0; mem:LD4[%pimage.addr] CPURegs:%vreg7
	%vreg8<def> = ADDiu %vreg7<kill>, -64; CPURegs:%vreg8,%vreg7
	ST %vreg8<kill>, <fi#0>, 0; mem:ST4[%pimage.addr] CPURegs:%vreg8
	ST %vreg4, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg4
    Successors according to CFG: BB#7

BB#7: derived from LLVM BB %for.cond7
    Predecessors according to CFG: BB#6 BB#8
	%vreg10<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg10
	%vreg11<def> = LTI %vreg10<kill>, 9; CPURegs:%vreg11,%vreg10
	JNC %vreg11<kill>, <BB#9>; CPURegs:%vreg11
	Jmp <BB#8>
    Successors according to CFG: BB#8(124) BB#9(4)

BB#8: derived from LLVM BB %for.inc11
    Predecessors according to CFG: BB#7
	%vreg56<def> = LD <fi#2>, 0; mem:LD4[%pcoeff.addr] CPURegs:%vreg56
	%vreg57<def> = ADDiu %vreg56, 4; CPURegs:%vreg57,%vreg56
	ST %vreg57<kill>, <fi#2>, 0; mem:ST4[%pcoeff.addr] CPURegs:%vreg57
	%vreg58<def> = MovGR %ZERO, 1; CPURegs:%vreg58
	ST %vreg58<kill>, %vreg56, 0; mem:ST4[%7] CPURegs:%vreg58,%vreg56
	%vreg59<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg59
	%vreg60<def> = ADDiu %vreg59<kill>, 1; CPURegs:%vreg60,%vreg59
	ST %vreg60<kill>, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg60
	Jmp <BB#7>
    Successors according to CFG: BB#7

BB#9: derived from LLVM BB %for.end13
    Predecessors according to CFG: BB#7
	ST %vreg4, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg4
    Successors according to CFG: BB#10

BB#10: derived from LLVM BB %for.cond14
    Predecessors according to CFG: BB#9 BB#11
	%vreg13<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg13
	%vreg14<def> = LTI %vreg13<kill>, 6; CPURegs:%vreg14,%vreg13
	JNC %vreg14<kill>, <BB#12>; CPURegs:%vreg14
	Jmp <BB#11>
    Successors according to CFG: BB#11(124) BB#12(4)

BB#11: derived from LLVM BB %for.inc18
    Predecessors according to CFG: BB#10
	%vreg51<def> = LD <fi#1>, 0; mem:LD4[%parray.addr] CPURegs:%vreg51
	%vreg52<def> = ADDiu %vreg51, 4; CPURegs:%vreg52,%vreg51
	ST %vreg52<kill>, <fi#1>, 0; mem:ST4[%parray.addr] CPURegs:%vreg52
	ST %vreg4, %vreg51, 0; mem:ST4[%10] CPURegs:%vreg4,%vreg51
	%vreg54<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg54
	%vreg55<def> = ADDiu %vreg54<kill>, 1; CPURegs:%vreg55,%vreg54
	ST %vreg55<kill>, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg55
	Jmp <BB#10>
    Successors according to CFG: BB#10

BB#12: derived from LLVM BB %for.end20
    Predecessors according to CFG: BB#10
	ST %vreg4, <fi#5>, 0; mem:ST4[%f] CPURegs:%vreg4
    Successors according to CFG: BB#13

BB#13: derived from LLVM BB %for.cond21
    Predecessors according to CFG: BB#12 BB#17
	%vreg16<def> = LD <fi#5>, 0; mem:LD4[%f] CPURegs:%vreg16
	%vreg17<def> = LTI %vreg16<kill>, 4; CPURegs:%vreg17,%vreg16
	JNC %vreg17<kill>, <BB#18>; CPURegs:%vreg17
	Jmp <BB#14>
    Successors according to CFG: BB#14(124) BB#18(4)

BB#14: derived from LLVM BB %for.body23
    Predecessors according to CFG: BB#13
	%vreg34<def> = LD <fi#1>, 0; mem:LD4[%parray.addr] CPURegs:%vreg34
	%vreg35<def> = ADDiu %vreg34, 4; CPURegs:%vreg35,%vreg34
	ST %vreg35<kill>, <fi#1>, 0; mem:ST4[%parray.addr] CPURegs:%vreg35
	ST %vreg4, %vreg34, 0; mem:ST4[%13] CPURegs:%vreg4,%vreg34
	ST %vreg4, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg4
    Successors according to CFG: BB#15

BB#15: derived from LLVM BB %for.cond25
    Predecessors according to CFG: BB#14 BB#16
	%vreg37<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg37
	%vreg38<def> = LTI %vreg37<kill>, 4; CPURegs:%vreg38,%vreg37
	JNC %vreg38<kill>, <BB#17>; CPURegs:%vreg38
	Jmp <BB#16>
    Successors according to CFG: BB#16(124) BB#17(4)

BB#16: derived from LLVM BB %for.inc30
    Predecessors according to CFG: BB#15
	%vreg44<def> = LD <fi#0>, 0; mem:LD4[%pimage.addr] CPURegs:%vreg44
	%vreg45<def> = ADDiu %vreg44, 4; CPURegs:%vreg45,%vreg44
	ST %vreg45<kill>, <fi#0>, 0; mem:ST4[%pimage.addr] CPURegs:%vreg45
	%vreg46<def> = LD %vreg44, 0; mem:LD4[%15] CPURegs:%vreg46,%vreg44
	%vreg47<def> = LD <fi#1>, 0; mem:LD4[%parray.addr] CPURegs:%vreg47
	%vreg48<def> = ADDiu %vreg47, 4; CPURegs:%vreg48,%vreg47
	ST %vreg48<kill>, <fi#1>, 0; mem:ST4[%parray.addr] CPURegs:%vreg48
	ST %vreg46<kill>, %vreg47, 0; mem:ST4[%17] CPURegs:%vreg46,%vreg47
	%vreg49<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg49
	%vreg50<def> = ADDiu %vreg49<kill>, 1; CPURegs:%vreg50,%vreg49
	ST %vreg50<kill>, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg50
	Jmp <BB#15>
    Successors according to CFG: BB#15

BB#17: derived from LLVM BB %for.inc34
    Predecessors according to CFG: BB#15
	%vreg39<def> = LD <fi#1>, 0; mem:LD4[%parray.addr] CPURegs:%vreg39
	%vreg40<def> = ADDiu %vreg39, 4; CPURegs:%vreg40,%vreg39
	ST %vreg40<kill>, <fi#1>, 0; mem:ST4[%parray.addr] CPURegs:%vreg40
	ST %vreg4, %vreg39, 0; mem:ST4[%19] CPURegs:%vreg4,%vreg39
	%vreg42<def> = LD <fi#5>, 0; mem:LD4[%f] CPURegs:%vreg42
	%vreg43<def> = ADDiu %vreg42<kill>, 1; CPURegs:%vreg43,%vreg42
	ST %vreg43<kill>, <fi#5>, 0; mem:ST4[%f] CPURegs:%vreg43
	Jmp <BB#13>
    Successors according to CFG: BB#13

BB#18: derived from LLVM BB %for.end36
    Predecessors according to CFG: BB#13
	ST %vreg4, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg4
    Successors according to CFG: BB#19

BB#19: derived from LLVM BB %for.cond37
    Predecessors according to CFG: BB#18 BB#20
	%vreg19<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg19
	%vreg20<def> = LTI %vreg19<kill>, 6; CPURegs:%vreg20,%vreg19
	JNC %vreg20<kill>, <BB#21>; CPURegs:%vreg20
	Jmp <BB#20>
    Successors according to CFG: BB#20(124) BB#21(4)

BB#20: derived from LLVM BB %for.inc41
    Predecessors according to CFG: BB#19
	%vreg29<def> = LD <fi#1>, 0; mem:LD4[%parray.addr] CPURegs:%vreg29
	%vreg30<def> = ADDiu %vreg29, 4; CPURegs:%vreg30,%vreg29
	ST %vreg30<kill>, <fi#1>, 0; mem:ST4[%parray.addr] CPURegs:%vreg30
	ST %vreg4, %vreg29, 0; mem:ST4[%22] CPURegs:%vreg4,%vreg29
	%vreg32<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg32
	%vreg33<def> = ADDiu %vreg32<kill>, 1; CPURegs:%vreg33,%vreg32
	ST %vreg33<kill>, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg33
	Jmp <BB#19>
    Successors according to CFG: BB#19

BB#21: derived from LLVM BB %for.end43
    Predecessors according to CFG: BB#19
	ST %vreg4, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg4
    Successors according to CFG: BB#22

BB#22: derived from LLVM BB %for.cond44
    Predecessors according to CFG: BB#21 BB#23
	%vreg22<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg22
	%vreg23<def> = LTI %vreg22<kill>, 16; CPURegs:%vreg23,%vreg22
	JNC %vreg23<kill>, <BB#24>; CPURegs:%vreg23
	Jmp <BB#23>
    Successors according to CFG: BB#23(124) BB#24(4)

BB#23: derived from LLVM BB %for.inc48
    Predecessors according to CFG: BB#22
	%vreg24<def> = LD <fi#3>, 0; mem:LD4[%poutput.addr] CPURegs:%vreg24
	%vreg25<def> = ADDiu %vreg24, 4; CPURegs:%vreg25,%vreg24
	ST %vreg25<kill>, <fi#3>, 0; mem:ST4[%poutput.addr] CPURegs:%vreg25
	ST %vreg4, %vreg24, 0; mem:ST4[%25] CPURegs:%vreg4,%vreg24
	%vreg27<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg27
	%vreg28<def> = ADDiu %vreg27<kill>, 1; CPURegs:%vreg28,%vreg27
	ST %vreg28<kill>, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg28
	Jmp <BB#22>
    Successors according to CFG: BB#22

BB#24: derived from LLVM BB %for.end50
    Predecessors according to CFG: BB#22
	RetLR

# End machine code for function pin_down.

# Machine code for function main: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=4, align=4, at location [SP]
  fi#5: size=4, align=4, at location [SP]
  fi#6: size=4, align=4, at location [SP]
  fi#7: size=4, align=4, at location [SP]
  fi#8: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovIGH %ZERO, <ga:@main.image>[TF=3]; CPURegs:%vreg0
	%vreg1<def,tied1> = MovIGL %vreg0<tied0>, <ga:@main.image>[TF=4]; CPURegs:%vreg1,%vreg0
	ST %vreg1, <fi#0>, 0; mem:ST4[%pimage] CPURegs:%vreg1
	%vreg2<def> = MovIGH %ZERO, <ga:@main.array>[TF=3]; CPURegs:%vreg2
	%vreg3<def,tied1> = MovIGL %vreg2<tied0>, <ga:@main.array>[TF=4]; CPURegs:%vreg3,%vreg2
	ST %vreg3, <fi#1>, 0; mem:ST4[%parray] CPURegs:%vreg3
	%vreg4<def> = MovIGH %ZERO, <ga:@main.coefficients>[TF=3]; CPURegs:%vreg4
	%vreg5<def,tied1> = MovIGL %vreg4<tied0>, <ga:@main.coefficients>[TF=4]; CPURegs:%vreg5,%vreg4
	ST %vreg5, <fi#4>, 0; mem:ST4[%pcoeff] CPURegs:%vreg5
	%vreg6<def> = MovIGH %ZERO, <ga:@main.output>[TF=3]; CPURegs:%vreg6
	%vreg7<def,tied1> = MovIGL %vreg6<tied0>, <ga:@main.output>[TF=4]; CPURegs:%vreg7,%vreg6
	ST %vreg7, <fi#5>, 0; mem:ST4[%poutput] CPURegs:%vreg7
	ADJCALLSTACKDOWN 16, %SP<imp-def,dead>, %SP<imp-use>
	%vreg8<def> = COPY %SP; CPURegs:%vreg8
	ST %vreg7, %vreg8, 12; mem:ST4[<unknown>] CPURegs:%vreg7,%vreg8
	ST %vreg5, %vreg8, 8; mem:ST4[<unknown>] CPURegs:%vreg5,%vreg8
	%A0<def> = COPY %vreg1; CPURegs:%vreg1
	%A1<def> = COPY %vreg3; CPURegs:%vreg3
	CALL <ga:@pin_down>, %A0, %A1, <regmask>, %SP<imp-def>
	ADJCALLSTACKUP 16, 0, %SP<imp-def,dead>, %SP<imp-use>
	ST %vreg1, <fi#0>, 0; mem:ST4[%pimage] CPURegs:%vreg1
	ST %vreg3, <fi#1>, 0; mem:ST4[%parray] CPURegs:%vreg3
	ST %vreg5, <fi#4>, 0; mem:ST4[%pcoeff] CPURegs:%vreg5
	ST %vreg7, <fi#5>, 0; mem:ST4[%poutput] CPURegs:%vreg7
	%vreg9<def> = MovGR %ZERO, 0; CPURegs:%vreg9
	ST %vreg9, <fi#6>, 0; mem:ST4[%k] CPURegs:%vreg9
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#14
	%vreg10<def> = LD <fi#6>, 0; mem:LD4[%k] CPURegs:%vreg10
	%vreg11<def> = LTI %vreg10<kill>, 4; CPURegs:%vreg11,%vreg10
	JNC %vreg11<kill>, <BB#15>; CPURegs:%vreg11
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#15(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	ST %vreg9, <fi#7>, 0; mem:ST4[%f] CPURegs:%vreg9
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.cond1
    Predecessors according to CFG: BB#2 BB#13
	%vreg22<def> = LD <fi#7>, 0; mem:LD4[%f] CPURegs:%vreg22
	%vreg23<def> = LTI %vreg22<kill>, 4; CPURegs:%vreg23,%vreg22
	JNC %vreg23<kill>, <BB#14>; CPURegs:%vreg23
	Jmp <BB#4>
    Successors according to CFG: BB#4(124) BB#14(4)

BB#4: derived from LLVM BB %for.body3
    Predecessors according to CFG: BB#3
	ST %vreg5, <fi#4>, 0; mem:ST4[%pcoeff] CPURegs:%vreg5
	%vreg28<def> = MovGR %ZERO, 6; CPURegs:%vreg28
	%vreg29<def> = LD <fi#6>, 0; mem:LD4[%k] CPURegs:%vreg29
	%vreg30<def> = MUL32 %vreg29<kill>, %vreg28<kill>; CPURegs:%vreg30,%vreg29,%vreg28
	%vreg31<def> = LD <fi#7>, 0; mem:LD4[%f] CPURegs:%vreg31
	%vreg32<def> = ADDu %vreg30<kill>, %vreg31<kill>; CPURegs:%vreg32,%vreg30,%vreg31
	%vreg33<def> = MovGR %ZERO, 2; CPURegs:%vreg33
	%vreg34<def> = SHL %vreg32<kill>, %vreg33<kill>; CPURegs:%vreg34,%vreg32,%vreg33
	%vreg37<def> = ADDu %vreg3, %vreg34<kill>; CPURegs:%vreg37,%vreg3,%vreg34
	ST %vreg37, <fi#1>, 0; mem:ST4[%parray] CPURegs:%vreg37
	%vreg38<def> = ADDiu %vreg37, 24; CPURegs:%vreg38,%vreg37
	ST %vreg38<kill>, <fi#2>, 0; mem:ST4[%parray2] CPURegs:%vreg38
	%vreg39<def> = LD <fi#1>, 0; mem:LD4[%parray] CPURegs:%vreg39
	%vreg40<def> = ADDiu %vreg39<kill>, 48; CPURegs:%vreg40,%vreg39
	ST %vreg40<kill>, <fi#3>, 0; mem:ST4[%parray3] CPURegs:%vreg40
	%vreg42<def> = LD <fi#5>, 0; mem:LD4[%poutput] CPURegs:%vreg42
	ST %vreg9, %vreg42<kill>, 0; mem:ST4[%6] CPURegs:%vreg9,%vreg42
	ST %vreg9, <fi#8>, 0; mem:ST4[%i] CPURegs:%vreg9
    Successors according to CFG: BB#5

BB#5: derived from LLVM BB %for.cond6
    Predecessors according to CFG: BB#4 BB#6
	%vreg43<def> = LD <fi#8>, 0; mem:LD4[%i] CPURegs:%vreg43
	%vreg44<def> = LTI %vreg43<kill>, 3; CPURegs:%vreg44,%vreg43
	JNC %vreg44<kill>, <BB#7>; CPURegs:%vreg44
	Jmp <BB#6>
    Successors according to CFG: BB#6(124) BB#7(4)

BB#6: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#5
	%vreg79<def> = LD <fi#4>, 0; mem:LD4[%pcoeff] CPURegs:%vreg79
	%vreg80<def> = ADDiu %vreg79, 4; CPURegs:%vreg80,%vreg79
	ST %vreg80<kill>, <fi#4>, 0; mem:ST4[%pcoeff] CPURegs:%vreg80
	%vreg81<def> = LD %vreg79, 0; mem:LD4[%8] CPURegs:%vreg81,%vreg79
	%vreg82<def> = LD <fi#1>, 0; mem:LD4[%parray] CPURegs:%vreg82
	%vreg83<def> = ADDiu %vreg82, 4; CPURegs:%vreg83,%vreg82
	ST %vreg83<kill>, <fi#1>, 0; mem:ST4[%parray] CPURegs:%vreg83
	%vreg84<def> = LD %vreg82, 0; mem:LD4[%10] CPURegs:%vreg84,%vreg82
	%vreg85<def> = MUL32 %vreg81<kill>, %vreg84<kill>; CPURegs:%vreg85,%vreg81,%vreg84
	%vreg86<def> = LD <fi#5>, 0; mem:LD4[%poutput] CPURegs:%vreg86
	%vreg87<def> = LD %vreg86, 0; mem:LD4[%12] CPURegs:%vreg87,%vreg86
	%vreg88<def> = ADDu %vreg87<kill>, %vreg85<kill>; CPURegs:%vreg88,%vreg87,%vreg85
	ST %vreg88<kill>, %vreg86, 0; mem:ST4[%12] CPURegs:%vreg88,%vreg86
	%vreg89<def> = LD <fi#8>, 0; mem:LD4[%i] CPURegs:%vreg89
	%vreg90<def> = ADDiu %vreg89<kill>, 1; CPURegs:%vreg90,%vreg89
	ST %vreg90<kill>, <fi#8>, 0; mem:ST4[%i] CPURegs:%vreg90
	Jmp <BB#5>
    Successors according to CFG: BB#5

BB#7: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#5
	ST %vreg9, <fi#8>, 0; mem:ST4[%i] CPURegs:%vreg9
    Successors according to CFG: BB#8

BB#8: derived from LLVM BB %for.cond12
    Predecessors according to CFG: BB#7 BB#9
	%vreg46<def> = LD <fi#8>, 0; mem:LD4[%i] CPURegs:%vreg46
	%vreg47<def> = LTI %vreg46<kill>, 3; CPURegs:%vreg47,%vreg46
	JNC %vreg47<kill>, <BB#10>; CPURegs:%vreg47
	Jmp <BB#9>
    Successors according to CFG: BB#9(124) BB#10(4)

BB#9: derived from LLVM BB %for.inc19
    Predecessors according to CFG: BB#8
	%vreg67<def> = LD <fi#4>, 0; mem:LD4[%pcoeff] CPURegs:%vreg67
	%vreg68<def> = ADDiu %vreg67, 4; CPURegs:%vreg68,%vreg67
	ST %vreg68<kill>, <fi#4>, 0; mem:ST4[%pcoeff] CPURegs:%vreg68
	%vreg69<def> = LD %vreg67, 0; mem:LD4[%16] CPURegs:%vreg69,%vreg67
	%vreg70<def> = LD <fi#2>, 0; mem:LD4[%parray2] CPURegs:%vreg70
	%vreg71<def> = ADDiu %vreg70, 4; CPURegs:%vreg71,%vreg70
	ST %vreg71<kill>, <fi#2>, 0; mem:ST4[%parray2] CPURegs:%vreg71
	%vreg72<def> = LD %vreg70, 0; mem:LD4[%18] CPURegs:%vreg72,%vreg70
	%vreg73<def> = MUL32 %vreg69<kill>, %vreg72<kill>; CPURegs:%vreg73,%vreg69,%vreg72
	%vreg74<def> = LD <fi#5>, 0; mem:LD4[%poutput] CPURegs:%vreg74
	%vreg75<def> = LD %vreg74, 0; mem:LD4[%20] CPURegs:%vreg75,%vreg74
	%vreg76<def> = ADDu %vreg75<kill>, %vreg73<kill>; CPURegs:%vreg76,%vreg75,%vreg73
	ST %vreg76<kill>, %vreg74, 0; mem:ST4[%20] CPURegs:%vreg76,%vreg74
	%vreg77<def> = LD <fi#8>, 0; mem:LD4[%i] CPURegs:%vreg77
	%vreg78<def> = ADDiu %vreg77<kill>, 1; CPURegs:%vreg78,%vreg77
	ST %vreg78<kill>, <fi#8>, 0; mem:ST4[%i] CPURegs:%vreg78
	Jmp <BB#8>
    Successors according to CFG: BB#8

BB#10: derived from LLVM BB %for.end21
    Predecessors according to CFG: BB#8
	ST %vreg9, <fi#8>, 0; mem:ST4[%i] CPURegs:%vreg9
    Successors according to CFG: BB#11

BB#11: derived from LLVM BB %for.cond22
    Predecessors according to CFG: BB#10 BB#12
	%vreg49<def> = LD <fi#8>, 0; mem:LD4[%i] CPURegs:%vreg49
	%vreg50<def> = LTI %vreg49<kill>, 3; CPURegs:%vreg50,%vreg49
	JNC %vreg50<kill>, <BB#13>; CPURegs:%vreg50
	Jmp <BB#12>
    Successors according to CFG: BB#12(124) BB#13(4)

BB#12: derived from LLVM BB %for.inc29
    Predecessors according to CFG: BB#11
	%vreg55<def> = LD <fi#4>, 0; mem:LD4[%pcoeff] CPURegs:%vreg55
	%vreg56<def> = ADDiu %vreg55, 4; CPURegs:%vreg56,%vreg55
	ST %vreg56<kill>, <fi#4>, 0; mem:ST4[%pcoeff] CPURegs:%vreg56
	%vreg57<def> = LD %vreg55, 0; mem:LD4[%24] CPURegs:%vreg57,%vreg55
	%vreg58<def> = LD <fi#3>, 0; mem:LD4[%parray3] CPURegs:%vreg58
	%vreg59<def> = ADDiu %vreg58, 4; CPURegs:%vreg59,%vreg58
	ST %vreg59<kill>, <fi#3>, 0; mem:ST4[%parray3] CPURegs:%vreg59
	%vreg60<def> = LD %vreg58, 0; mem:LD4[%26] CPURegs:%vreg60,%vreg58
	%vreg61<def> = MUL32 %vreg57<kill>, %vreg60<kill>; CPURegs:%vreg61,%vreg57,%vreg60
	%vreg62<def> = LD <fi#5>, 0; mem:LD4[%poutput] CPURegs:%vreg62
	%vreg63<def> = LD %vreg62, 0; mem:LD4[%28] CPURegs:%vreg63,%vreg62
	%vreg64<def> = ADDu %vreg63<kill>, %vreg61<kill>; CPURegs:%vreg64,%vreg63,%vreg61
	ST %vreg64<kill>, %vreg62, 0; mem:ST4[%28] CPURegs:%vreg64,%vreg62
	%vreg65<def> = LD <fi#8>, 0; mem:LD4[%i] CPURegs:%vreg65
	%vreg66<def> = ADDiu %vreg65<kill>, 1; CPURegs:%vreg66,%vreg65
	ST %vreg66<kill>, <fi#8>, 0; mem:ST4[%i] CPURegs:%vreg66
	Jmp <BB#11>
    Successors according to CFG: BB#11

BB#13: derived from LLVM BB %for.inc33
    Predecessors according to CFG: BB#11
	%vreg51<def> = LD <fi#5>, 0; mem:LD4[%poutput] CPURegs:%vreg51
	%vreg52<def> = ADDiu %vreg51<kill>, 4; CPURegs:%vreg52,%vreg51
	ST %vreg52<kill>, <fi#5>, 0; mem:ST4[%poutput] CPURegs:%vreg52
	%vreg53<def> = LD <fi#7>, 0; mem:LD4[%f] CPURegs:%vreg53
	%vreg54<def> = ADDiu %vreg53<kill>, 1; CPURegs:%vreg54,%vreg53
	ST %vreg54<kill>, <fi#7>, 0; mem:ST4[%f] CPURegs:%vreg54
	Jmp <BB#3>
    Successors according to CFG: BB#3

BB#14: derived from LLVM BB %for.inc36
    Predecessors according to CFG: BB#3
	%vreg24<def> = LD <fi#6>, 0; mem:LD4[%k] CPURegs:%vreg24
	%vreg25<def> = ADDiu %vreg24<kill>, 1; CPURegs:%vreg25,%vreg24
	ST %vreg25<kill>, <fi#6>, 0; mem:ST4[%k] CPURegs:%vreg25
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#15: derived from LLVM BB %for.end38
    Predecessors according to CFG: BB#1
	ADJCALLSTACKDOWN 16, %SP<imp-def,dead>, %SP<imp-use>
	%vreg14<def> = COPY %SP; CPURegs:%vreg14
	ST %vreg7, %vreg14, 12; mem:ST4[<unknown>] CPURegs:%vreg7,%vreg14
	ST %vreg5, %vreg14, 8; mem:ST4[<unknown>] CPURegs:%vreg5,%vreg14
	%A0<def> = COPY %vreg1; CPURegs:%vreg1
	%A1<def> = COPY %vreg3; CPURegs:%vreg3
	CALL <ga:@pin_down>, %A0, %A1, <regmask>, %SP<imp-def>
	ADJCALLSTACKUP 16, 0, %SP<imp-def,dead>, %SP<imp-use>
	RetLR

# End machine code for function main.


#####==========stderr_obj==========#####:
# Machine code for function pin_down: SSA
Frame Objects:
  fi#-2: size=4, align=4, fixed, at location [SP+12]
  fi#-1: size=4, align=8, fixed, at location [SP+8]
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=4, align=4, at location [SP]
  fi#5: size=4, align=4, at location [SP]
Function Live Ins: %A0 in %vreg0, %A1 in %vreg1

BB#0: derived from LLVM BB %entry
    Live Ins: %A0 %A1
	%vreg1<def> = COPY %A1; CPURegs:%vreg1
	%vreg0<def> = COPY %A0; CPURegs:%vreg0
	%vreg2<def> = LD <fi#-2>, 0; mem:LD4[FixedStack-2] CPURegs:%vreg2
	%vreg3<def> = LD <fi#-1>, 0; mem:LD4[FixedStack-1](align=8) CPURegs:%vreg3
	ST %vreg0, <fi#0>, 0; mem:ST4[%pimage.addr] CPURegs:%vreg0
	ST %vreg1, <fi#1>, 0; mem:ST4[%parray.addr] CPURegs:%vreg1
	ST %vreg3<kill>, <fi#2>, 0; mem:ST4[%pcoeff.addr] CPURegs:%vreg3
	ST %vreg2<kill>, <fi#3>, 0; mem:ST4[%poutput.addr] CPURegs:%vreg2
	%vreg4<def> = MovGR %ZERO, 0; CPURegs:%vreg4
	ST %vreg4, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg4
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#5
	%vreg5<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg5
	%vreg6<def> = LTI %vreg5<kill>, 4; CPURegs:%vreg6,%vreg5
	JNC %vreg6<kill>, <BB#6>; CPURegs:%vreg6
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#6(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	ST %vreg4, <fi#5>, 0; mem:ST4[%f] CPURegs:%vreg4
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.cond1
    Predecessors according to CFG: BB#2 BB#4
	%vreg62<def> = LD <fi#5>, 0; mem:LD4[%f] CPURegs:%vreg62
	%vreg63<def> = LTI %vreg62<kill>, 4; CPURegs:%vreg63,%vreg62
	JNC %vreg63<kill>, <BB#5>; CPURegs:%vreg63
	Jmp <BB#4>
    Successors according to CFG: BB#4(124) BB#5(4)

BB#4: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#3
	%vreg66<def> = LD <fi#0>, 0; mem:LD4[%pimage.addr] CPURegs:%vreg66
	%vreg67<def> = ADDiu %vreg66, 4; CPURegs:%vreg67,%vreg66
	ST %vreg67<kill>, <fi#0>, 0; mem:ST4[%pimage.addr] CPURegs:%vreg67
	%vreg68<def> = MovGR %ZERO, 1; CPURegs:%vreg68
	ST %vreg68<kill>, %vreg66, 0; mem:ST4[%2] CPURegs:%vreg68,%vreg66
	%vreg69<def> = LD <fi#5>, 0; mem:LD4[%f] CPURegs:%vreg69
	%vreg70<def> = ADDiu %vreg69<kill>, 1; CPURegs:%vreg70,%vreg69
	ST %vreg70<kill>, <fi#5>, 0; mem:ST4[%f] CPURegs:%vreg70
	Jmp <BB#3>
    Successors according to CFG: BB#3

BB#5: derived from LLVM BB %for.inc4
    Predecessors according to CFG: BB#3
	%vreg64<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg64
	%vreg65<def> = ADDiu %vreg64<kill>, 1; CPURegs:%vreg65,%vreg64
	ST %vreg65<kill>, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg65
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#6: derived from LLVM BB %for.end6
    Predecessors according to CFG: BB#1
	%vreg7<def> = LD <fi#0>, 0; mem:LD4[%pimage.addr] CPURegs:%vreg7
	%vreg8<def> = ADDiu %vreg7<kill>, -64; CPURegs:%vreg8,%vreg7
	ST %vreg8<kill>, <fi#0>, 0; mem:ST4[%pimage.addr] CPURegs:%vreg8
	ST %vreg4, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg4
    Successors according to CFG: BB#7

BB#7: derived from LLVM BB %for.cond7
    Predecessors according to CFG: BB#6 BB#8
	%vreg10<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg10
	%vreg11<def> = LTI %vreg10<kill>, 9; CPURegs:%vreg11,%vreg10
	JNC %vreg11<kill>, <BB#9>; CPURegs:%vreg11
	Jmp <BB#8>
    Successors according to CFG: BB#8(124) BB#9(4)

BB#8: derived from LLVM BB %for.inc11
    Predecessors according to CFG: BB#7
	%vreg56<def> = LD <fi#2>, 0; mem:LD4[%pcoeff.addr] CPURegs:%vreg56
	%vreg57<def> = ADDiu %vreg56, 4; CPURegs:%vreg57,%vreg56
	ST %vreg57<kill>, <fi#2>, 0; mem:ST4[%pcoeff.addr] CPURegs:%vreg57
	%vreg58<def> = MovGR %ZERO, 1; CPURegs:%vreg58
	ST %vreg58<kill>, %vreg56, 0; mem:ST4[%7] CPURegs:%vreg58,%vreg56
	%vreg59<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg59
	%vreg60<def> = ADDiu %vreg59<kill>, 1; CPURegs:%vreg60,%vreg59
	ST %vreg60<kill>, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg60
	Jmp <BB#7>
    Successors according to CFG: BB#7

BB#9: derived from LLVM BB %for.end13
    Predecessors according to CFG: BB#7
	ST %vreg4, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg4
    Successors according to CFG: BB#10

BB#10: derived from LLVM BB %for.cond14
    Predecessors according to CFG: BB#9 BB#11
	%vreg13<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg13
	%vreg14<def> = LTI %vreg13<kill>, 6; CPURegs:%vreg14,%vreg13
	JNC %vreg14<kill>, <BB#12>; CPURegs:%vreg14
	Jmp <BB#11>
    Successors according to CFG: BB#11(124) BB#12(4)

BB#11: derived from LLVM BB %for.inc18
    Predecessors according to CFG: BB#10
	%vreg51<def> = LD <fi#1>, 0; mem:LD4[%parray.addr] CPURegs:%vreg51
	%vreg52<def> = ADDiu %vreg51, 4; CPURegs:%vreg52,%vreg51
	ST %vreg52<kill>, <fi#1>, 0; mem:ST4[%parray.addr] CPURegs:%vreg52
	ST %vreg4, %vreg51, 0; mem:ST4[%10] CPURegs:%vreg4,%vreg51
	%vreg54<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg54
	%vreg55<def> = ADDiu %vreg54<kill>, 1; CPURegs:%vreg55,%vreg54
	ST %vreg55<kill>, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg55
	Jmp <BB#10>
    Successors according to CFG: BB#10

BB#12: derived from LLVM BB %for.end20
    Predecessors according to CFG: BB#10
	ST %vreg4, <fi#5>, 0; mem:ST4[%f] CPURegs:%vreg4
    Successors according to CFG: BB#13

BB#13: derived from LLVM BB %for.cond21
    Predecessors according to CFG: BB#12 BB#17
	%vreg16<def> = LD <fi#5>, 0; mem:LD4[%f] CPURegs:%vreg16
	%vreg17<def> = LTI %vreg16<kill>, 4; CPURegs:%vreg17,%vreg16
	JNC %vreg17<kill>, <BB#18>; CPURegs:%vreg17
	Jmp <BB#14>
    Successors according to CFG: BB#14(124) BB#18(4)

BB#14: derived from LLVM BB %for.body23
    Predecessors according to CFG: BB#13
	%vreg34<def> = LD <fi#1>, 0; mem:LD4[%parray.addr] CPURegs:%vreg34
	%vreg35<def> = ADDiu %vreg34, 4; CPURegs:%vreg35,%vreg34
	ST %vreg35<kill>, <fi#1>, 0; mem:ST4[%parray.addr] CPURegs:%vreg35
	ST %vreg4, %vreg34, 0; mem:ST4[%13] CPURegs:%vreg4,%vreg34
	ST %vreg4, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg4
    Successors according to CFG: BB#15

BB#15: derived from LLVM BB %for.cond25
    Predecessors according to CFG: BB#14 BB#16
	%vreg37<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg37
	%vreg38<def> = LTI %vreg37<kill>, 4; CPURegs:%vreg38,%vreg37
	JNC %vreg38<kill>, <BB#17>; CPURegs:%vreg38
	Jmp <BB#16>
    Successors according to CFG: BB#16(124) BB#17(4)

BB#16: derived from LLVM BB %for.inc30
    Predecessors according to CFG: BB#15
	%vreg44<def> = LD <fi#0>, 0; mem:LD4[%pimage.addr] CPURegs:%vreg44
	%vreg45<def> = ADDiu %vreg44, 4; CPURegs:%vreg45,%vreg44
	ST %vreg45<kill>, <fi#0>, 0; mem:ST4[%pimage.addr] CPURegs:%vreg45
	%vreg46<def> = LD %vreg44, 0; mem:LD4[%15] CPURegs:%vreg46,%vreg44
	%vreg47<def> = LD <fi#1>, 0; mem:LD4[%parray.addr] CPURegs:%vreg47
	%vreg48<def> = ADDiu %vreg47, 4; CPURegs:%vreg48,%vreg47
	ST %vreg48<kill>, <fi#1>, 0; mem:ST4[%parray.addr] CPURegs:%vreg48
	ST %vreg46<kill>, %vreg47, 0; mem:ST4[%17] CPURegs:%vreg46,%vreg47
	%vreg49<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg49
	%vreg50<def> = ADDiu %vreg49<kill>, 1; CPURegs:%vreg50,%vreg49
	ST %vreg50<kill>, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg50
	Jmp <BB#15>
    Successors according to CFG: BB#15

BB#17: derived from LLVM BB %for.inc34
    Predecessors according to CFG: BB#15
	%vreg39<def> = LD <fi#1>, 0; mem:LD4[%parray.addr] CPURegs:%vreg39
	%vreg40<def> = ADDiu %vreg39, 4; CPURegs:%vreg40,%vreg39
	ST %vreg40<kill>, <fi#1>, 0; mem:ST4[%parray.addr] CPURegs:%vreg40
	ST %vreg4, %vreg39, 0; mem:ST4[%19] CPURegs:%vreg4,%vreg39
	%vreg42<def> = LD <fi#5>, 0; mem:LD4[%f] CPURegs:%vreg42
	%vreg43<def> = ADDiu %vreg42<kill>, 1; CPURegs:%vreg43,%vreg42
	ST %vreg43<kill>, <fi#5>, 0; mem:ST4[%f] CPURegs:%vreg43
	Jmp <BB#13>
    Successors according to CFG: BB#13

BB#18: derived from LLVM BB %for.end36
    Predecessors according to CFG: BB#13
	ST %vreg4, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg4
    Successors according to CFG: BB#19

BB#19: derived from LLVM BB %for.cond37
    Predecessors according to CFG: BB#18 BB#20
	%vreg19<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg19
	%vreg20<def> = LTI %vreg19<kill>, 6; CPURegs:%vreg20,%vreg19
	JNC %vreg20<kill>, <BB#21>; CPURegs:%vreg20
	Jmp <BB#20>
    Successors according to CFG: BB#20(124) BB#21(4)

BB#20: derived from LLVM BB %for.inc41
    Predecessors according to CFG: BB#19
	%vreg29<def> = LD <fi#1>, 0; mem:LD4[%parray.addr] CPURegs:%vreg29
	%vreg30<def> = ADDiu %vreg29, 4; CPURegs:%vreg30,%vreg29
	ST %vreg30<kill>, <fi#1>, 0; mem:ST4[%parray.addr] CPURegs:%vreg30
	ST %vreg4, %vreg29, 0; mem:ST4[%22] CPURegs:%vreg4,%vreg29
	%vreg32<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg32
	%vreg33<def> = ADDiu %vreg32<kill>, 1; CPURegs:%vreg33,%vreg32
	ST %vreg33<kill>, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg33
	Jmp <BB#19>
    Successors according to CFG: BB#19

BB#21: derived from LLVM BB %for.end43
    Predecessors according to CFG: BB#19
	ST %vreg4, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg4
    Successors according to CFG: BB#22

BB#22: derived from LLVM BB %for.cond44
    Predecessors according to CFG: BB#21 BB#23
	%vreg22<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg22
	%vreg23<def> = LTI %vreg22<kill>, 16; CPURegs:%vreg23,%vreg22
	JNC %vreg23<kill>, <BB#24>; CPURegs:%vreg23
	Jmp <BB#23>
    Successors according to CFG: BB#23(124) BB#24(4)

BB#23: derived from LLVM BB %for.inc48
    Predecessors according to CFG: BB#22
	%vreg24<def> = LD <fi#3>, 0; mem:LD4[%poutput.addr] CPURegs:%vreg24
	%vreg25<def> = ADDiu %vreg24, 4; CPURegs:%vreg25,%vreg24
	ST %vreg25<kill>, <fi#3>, 0; mem:ST4[%poutput.addr] CPURegs:%vreg25
	ST %vreg4, %vreg24, 0; mem:ST4[%25] CPURegs:%vreg4,%vreg24
	%vreg27<def> = LD <fi#4>, 0; mem:LD4[%i] CPURegs:%vreg27
	%vreg28<def> = ADDiu %vreg27<kill>, 1; CPURegs:%vreg28,%vreg27
	ST %vreg28<kill>, <fi#4>, 0; mem:ST4[%i] CPURegs:%vreg28
	Jmp <BB#22>
    Successors according to CFG: BB#22

BB#24: derived from LLVM BB %for.end50
    Predecessors according to CFG: BB#22
	RetLR

# End machine code for function pin_down.

# Machine code for function main: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=4, align=4, at location [SP]
  fi#5: size=4, align=4, at location [SP]
  fi#6: size=4, align=4, at location [SP]
  fi#7: size=4, align=4, at location [SP]
  fi#8: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovIGH %ZERO, <ga:@main.image>[TF=3]; CPURegs:%vreg0
	%vreg1<def,tied1> = MovIGL %vreg0<tied0>, <ga:@main.image>[TF=4]; CPURegs:%vreg1,%vreg0
	ST %vreg1, <fi#0>, 0; mem:ST4[%pimage] CPURegs:%vreg1
	%vreg2<def> = MovIGH %ZERO, <ga:@main.array>[TF=3]; CPURegs:%vreg2
	%vreg3<def,tied1> = MovIGL %vreg2<tied0>, <ga:@main.array>[TF=4]; CPURegs:%vreg3,%vreg2
	ST %vreg3, <fi#1>, 0; mem:ST4[%parray] CPURegs:%vreg3
	%vreg4<def> = MovIGH %ZERO, <ga:@main.coefficients>[TF=3]; CPURegs:%vreg4
	%vreg5<def,tied1> = MovIGL %vreg4<tied0>, <ga:@main.coefficients>[TF=4]; CPURegs:%vreg5,%vreg4
	ST %vreg5, <fi#4>, 0; mem:ST4[%pcoeff] CPURegs:%vreg5
	%vreg6<def> = MovIGH %ZERO, <ga:@main.output>[TF=3]; CPURegs:%vreg6
	%vreg7<def,tied1> = MovIGL %vreg6<tied0>, <ga:@main.output>[TF=4]; CPURegs:%vreg7,%vreg6
	ST %vreg7, <fi#5>, 0; mem:ST4[%poutput] CPURegs:%vreg7
	ADJCALLSTACKDOWN 16, %SP<imp-def,dead>, %SP<imp-use>
	%vreg8<def> = COPY %SP; CPURegs:%vreg8
	ST %vreg7, %vreg8, 12; mem:ST4[<unknown>] CPURegs:%vreg7,%vreg8
	ST %vreg5, %vreg8, 8; mem:ST4[<unknown>] CPURegs:%vreg5,%vreg8
	%A0<def> = COPY %vreg1; CPURegs:%vreg1
	%A1<def> = COPY %vreg3; CPURegs:%vreg3
	CALL <ga:@pin_down>, %A0, %A1, <regmask>, %SP<imp-def>
	ADJCALLSTACKUP 16, 0, %SP<imp-def,dead>, %SP<imp-use>
	ST %vreg1, <fi#0>, 0; mem:ST4[%pimage] CPURegs:%vreg1
	ST %vreg3, <fi#1>, 0; mem:ST4[%parray] CPURegs:%vreg3
	ST %vreg5, <fi#4>, 0; mem:ST4[%pcoeff] CPURegs:%vreg5
	ST %vreg7, <fi#5>, 0; mem:ST4[%poutput] CPURegs:%vreg7
	%vreg9<def> = MovGR %ZERO, 0; CPURegs:%vreg9
	ST %vreg9, <fi#6>, 0; mem:ST4[%k] CPURegs:%vreg9
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#14
	%vreg10<def> = LD <fi#6>, 0; mem:LD4[%k] CPURegs:%vreg10
	%vreg11<def> = LTI %vreg10<kill>, 4; CPURegs:%vreg11,%vreg10
	JNC %vreg11<kill>, <BB#15>; CPURegs:%vreg11
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#15(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	ST %vreg9, <fi#7>, 0; mem:ST4[%f] CPURegs:%vreg9
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.cond1
    Predecessors according to CFG: BB#2 BB#13
	%vreg22<def> = LD <fi#7>, 0; mem:LD4[%f] CPURegs:%vreg22
	%vreg23<def> = LTI %vreg22<kill>, 4; CPURegs:%vreg23,%vreg22
	JNC %vreg23<kill>, <BB#14>; CPURegs:%vreg23
	Jmp <BB#4>
    Successors according to CFG: BB#4(124) BB#14(4)

BB#4: derived from LLVM BB %for.body3
    Predecessors according to CFG: BB#3
	ST %vreg5, <fi#4>, 0; mem:ST4[%pcoeff] CPURegs:%vreg5
	%vreg28<def> = MovGR %ZERO, 6; CPURegs:%vreg28
	%vreg29<def> = LD <fi#6>, 0; mem:LD4[%k] CPURegs:%vreg29
	%vreg30<def> = MUL32 %vreg29<kill>, %vreg28<kill>; CPURegs:%vreg30,%vreg29,%vreg28
	%vreg31<def> = LD <fi#7>, 0; mem:LD4[%f] CPURegs:%vreg31
	%vreg32<def> = ADDu %vreg30<kill>, %vreg31<kill>; CPURegs:%vreg32,%vreg30,%vreg31
	%vreg33<def> = MovGR %ZERO, 2; CPURegs:%vreg33
	%vreg34<def> = SHL %vreg32<kill>, %vreg33<kill>; CPURegs:%vreg34,%vreg32,%vreg33
	%vreg37<def> = ADDu %vreg3, %vreg34<kill>; CPURegs:%vreg37,%vreg3,%vreg34
	ST %vreg37, <fi#1>, 0; mem:ST4[%parray] CPURegs:%vreg37
	%vreg38<def> = ADDiu %vreg37, 24; CPURegs:%vreg38,%vreg37
	ST %vreg38<kill>, <fi#2>, 0; mem:ST4[%parray2] CPURegs:%vreg38
	%vreg39<def> = LD <fi#1>, 0; mem:LD4[%parray] CPURegs:%vreg39
	%vreg40<def> = ADDiu %vreg39<kill>, 48; CPURegs:%vreg40,%vreg39
	ST %vreg40<kill>, <fi#3>, 0; mem:ST4[%parray3] CPURegs:%vreg40
	%vreg42<def> = LD <fi#5>, 0; mem:LD4[%poutput] CPURegs:%vreg42
	ST %vreg9, %vreg42<kill>, 0; mem:ST4[%6] CPURegs:%vreg9,%vreg42
	ST %vreg9, <fi#8>, 0; mem:ST4[%i] CPURegs:%vreg9
    Successors according to CFG: BB#5

BB#5: derived from LLVM BB %for.cond6
    Predecessors according to CFG: BB#4 BB#6
	%vreg43<def> = LD <fi#8>, 0; mem:LD4[%i] CPURegs:%vreg43
	%vreg44<def> = LTI %vreg43<kill>, 3; CPURegs:%vreg44,%vreg43
	JNC %vreg44<kill>, <BB#7>; CPURegs:%vreg44
	Jmp <BB#6>
    Successors according to CFG: BB#6(124) BB#7(4)

BB#6: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#5
	%vreg79<def> = LD <fi#4>, 0; mem:LD4[%pcoeff] CPURegs:%vreg79
	%vreg80<def> = ADDiu %vreg79, 4; CPURegs:%vreg80,%vreg79
	ST %vreg80<kill>, <fi#4>, 0; mem:ST4[%pcoeff] CPURegs:%vreg80
	%vreg81<def> = LD %vreg79, 0; mem:LD4[%8] CPURegs:%vreg81,%vreg79
	%vreg82<def> = LD <fi#1>, 0; mem:LD4[%parray] CPURegs:%vreg82
	%vreg83<def> = ADDiu %vreg82, 4; CPURegs:%vreg83,%vreg82
	ST %vreg83<kill>, <fi#1>, 0; mem:ST4[%parray] CPURegs:%vreg83
	%vreg84<def> = LD %vreg82, 0; mem:LD4[%10] CPURegs:%vreg84,%vreg82
	%vreg85<def> = MUL32 %vreg81<kill>, %vreg84<kill>; CPURegs:%vreg85,%vreg81,%vreg84
	%vreg86<def> = LD <fi#5>, 0; mem:LD4[%poutput] CPURegs:%vreg86
	%vreg87<def> = LD %vreg86, 0; mem:LD4[%12] CPURegs:%vreg87,%vreg86
	%vreg88<def> = ADDu %vreg87<kill>, %vreg85<kill>; CPURegs:%vreg88,%vreg87,%vreg85
	ST %vreg88<kill>, %vreg86, 0; mem:ST4[%12] CPURegs:%vreg88,%vreg86
	%vreg89<def> = LD <fi#8>, 0; mem:LD4[%i] CPURegs:%vreg89
	%vreg90<def> = ADDiu %vreg89<kill>, 1; CPURegs:%vreg90,%vreg89
	ST %vreg90<kill>, <fi#8>, 0; mem:ST4[%i] CPURegs:%vreg90
	Jmp <BB#5>
    Successors according to CFG: BB#5

BB#7: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#5
	ST %vreg9, <fi#8>, 0; mem:ST4[%i] CPURegs:%vreg9
    Successors according to CFG: BB#8

BB#8: derived from LLVM BB %for.cond12
    Predecessors according to CFG: BB#7 BB#9
	%vreg46<def> = LD <fi#8>, 0; mem:LD4[%i] CPURegs:%vreg46
	%vreg47<def> = LTI %vreg46<kill>, 3; CPURegs:%vreg47,%vreg46
	JNC %vreg47<kill>, <BB#10>; CPURegs:%vreg47
	Jmp <BB#9>
    Successors according to CFG: BB#9(124) BB#10(4)

BB#9: derived from LLVM BB %for.inc19
    Predecessors according to CFG: BB#8
	%vreg67<def> = LD <fi#4>, 0; mem:LD4[%pcoeff] CPURegs:%vreg67
	%vreg68<def> = ADDiu %vreg67, 4; CPURegs:%vreg68,%vreg67
	ST %vreg68<kill>, <fi#4>, 0; mem:ST4[%pcoeff] CPURegs:%vreg68
	%vreg69<def> = LD %vreg67, 0; mem:LD4[%16] CPURegs:%vreg69,%vreg67
	%vreg70<def> = LD <fi#2>, 0; mem:LD4[%parray2] CPURegs:%vreg70
	%vreg71<def> = ADDiu %vreg70, 4; CPURegs:%vreg71,%vreg70
	ST %vreg71<kill>, <fi#2>, 0; mem:ST4[%parray2] CPURegs:%vreg71
	%vreg72<def> = LD %vreg70, 0; mem:LD4[%18] CPURegs:%vreg72,%vreg70
	%vreg73<def> = MUL32 %vreg69<kill>, %vreg72<kill>; CPURegs:%vreg73,%vreg69,%vreg72
	%vreg74<def> = LD <fi#5>, 0; mem:LD4[%poutput] CPURegs:%vreg74
	%vreg75<def> = LD %vreg74, 0; mem:LD4[%20] CPURegs:%vreg75,%vreg74
	%vreg76<def> = ADDu %vreg75<kill>, %vreg73<kill>; CPURegs:%vreg76,%vreg75,%vreg73
	ST %vreg76<kill>, %vreg74, 0; mem:ST4[%20] CPURegs:%vreg76,%vreg74
	%vreg77<def> = LD <fi#8>, 0; mem:LD4[%i] CPURegs:%vreg77
	%vreg78<def> = ADDiu %vreg77<kill>, 1; CPURegs:%vreg78,%vreg77
	ST %vreg78<kill>, <fi#8>, 0; mem:ST4[%i] CPURegs:%vreg78
	Jmp <BB#8>
    Successors according to CFG: BB#8

BB#10: derived from LLVM BB %for.end21
    Predecessors according to CFG: BB#8
	ST %vreg9, <fi#8>, 0; mem:ST4[%i] CPURegs:%vreg9
    Successors according to CFG: BB#11

BB#11: derived from LLVM BB %for.cond22
    Predecessors according to CFG: BB#10 BB#12
	%vreg49<def> = LD <fi#8>, 0; mem:LD4[%i] CPURegs:%vreg49
	%vreg50<def> = LTI %vreg49<kill>, 3; CPURegs:%vreg50,%vreg49
	JNC %vreg50<kill>, <BB#13>; CPURegs:%vreg50
	Jmp <BB#12>
    Successors according to CFG: BB#12(124) BB#13(4)

BB#12: derived from LLVM BB %for.inc29
    Predecessors according to CFG: BB#11
	%vreg55<def> = LD <fi#4>, 0; mem:LD4[%pcoeff] CPURegs:%vreg55
	%vreg56<def> = ADDiu %vreg55, 4; CPURegs:%vreg56,%vreg55
	ST %vreg56<kill>, <fi#4>, 0; mem:ST4[%pcoeff] CPURegs:%vreg56
	%vreg57<def> = LD %vreg55, 0; mem:LD4[%24] CPURegs:%vreg57,%vreg55
	%vreg58<def> = LD <fi#3>, 0; mem:LD4[%parray3] CPURegs:%vreg58
	%vreg59<def> = ADDiu %vreg58, 4; CPURegs:%vreg59,%vreg58
	ST %vreg59<kill>, <fi#3>, 0; mem:ST4[%parray3] CPURegs:%vreg59
	%vreg60<def> = LD %vreg58, 0; mem:LD4[%26] CPURegs:%vreg60,%vreg58
	%vreg61<def> = MUL32 %vreg57<kill>, %vreg60<kill>; CPURegs:%vreg61,%vreg57,%vreg60
	%vreg62<def> = LD <fi#5>, 0; mem:LD4[%poutput] CPURegs:%vreg62
	%vreg63<def> = LD %vreg62, 0; mem:LD4[%28] CPURegs:%vreg63,%vreg62
	%vreg64<def> = ADDu %vreg63<kill>, %vreg61<kill>; CPURegs:%vreg64,%vreg63,%vreg61
	ST %vreg64<kill>, %vreg62, 0; mem:ST4[%28] CPURegs:%vreg64,%vreg62
	%vreg65<def> = LD <fi#8>, 0; mem:LD4[%i] CPURegs:%vreg65
	%vreg66<def> = ADDiu %vreg65<kill>, 1; CPURegs:%vreg66,%vreg65
	ST %vreg66<kill>, <fi#8>, 0; mem:ST4[%i] CPURegs:%vreg66
	Jmp <BB#11>
    Successors according to CFG: BB#11

BB#13: derived from LLVM BB %for.inc33
    Predecessors according to CFG: BB#11
	%vreg51<def> = LD <fi#5>, 0; mem:LD4[%poutput] CPURegs:%vreg51
	%vreg52<def> = ADDiu %vreg51<kill>, 4; CPURegs:%vreg52,%vreg51
	ST %vreg52<kill>, <fi#5>, 0; mem:ST4[%poutput] CPURegs:%vreg52
	%vreg53<def> = LD <fi#7>, 0; mem:LD4[%f] CPURegs:%vreg53
	%vreg54<def> = ADDiu %vreg53<kill>, 1; CPURegs:%vreg54,%vreg53
	ST %vreg54<kill>, <fi#7>, 0; mem:ST4[%f] CPURegs:%vreg54
	Jmp <BB#3>
    Successors according to CFG: BB#3

BB#14: derived from LLVM BB %for.inc36
    Predecessors according to CFG: BB#3
	%vreg24<def> = LD <fi#6>, 0; mem:LD4[%k] CPURegs:%vreg24
	%vreg25<def> = ADDiu %vreg24<kill>, 1; CPURegs:%vreg25,%vreg24
	ST %vreg25<kill>, <fi#6>, 0; mem:ST4[%k] CPURegs:%vreg25
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#15: derived from LLVM BB %for.end38
    Predecessors according to CFG: BB#1
	ADJCALLSTACKDOWN 16, %SP<imp-def,dead>, %SP<imp-use>
	%vreg14<def> = COPY %SP; CPURegs:%vreg14
	ST %vreg7, %vreg14, 12; mem:ST4[<unknown>] CPURegs:%vreg7,%vreg14
	ST %vreg5, %vreg14, 8; mem:ST4[<unknown>] CPURegs:%vreg5,%vreg14
	%A0<def> = COPY %vreg1; CPURegs:%vreg1
	%A1<def> = COPY %vreg3; CPURegs:%vreg3
	CALL <ga:@pin_down>, %A0, %A1, <regmask>, %SP<imp-def>
	ADJCALLSTACKUP 16, 0, %SP<imp-def,dead>, %SP<imp-use>
	RetLR

# End machine code for function main.

