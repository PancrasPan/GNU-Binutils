
#####==========stderr_mid==========#####:
'' is not a recognized processor for this target (ignoring processor)

#####==========stderr_asm==========#####:
# Machine code for function fir: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovIGH %ZERO, <ga:@nSamples>[TF=3]; CPURegs:%vreg0
	%vreg1<def,tied1> = MovIGL %vreg0<tied0>, <ga:@nSamples>[TF=4]; CPURegs:%vreg1,%vreg0
	%vreg2<def> = LD %vreg1, 0; mem:LD4[@nSamples] CPURegs:%vreg2,%vreg1
	%vreg3<def> = ADDiu %vreg2<kill>, -1; CPURegs:%vreg3,%vreg2
	ST %vreg3<kill>, <fi#0>, 0; mem:ST4[%n] CPURegs:%vreg3
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %while.cond
    Predecessors according to CFG: BB#0 BB#5
	%vreg4<def> = MovGR %ZERO, 0; CPURegs:%vreg4
	%vreg5<def> = LD <fi#0>, 0; mem:LD4[%n] CPURegs:%vreg5
	%vreg6<def> = LT %vreg5<kill>, %vreg4; CPURegs:%vreg6,%vreg5,%vreg4
	JC %vreg6<kill>, <BB#6>; CPURegs:%vreg6
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#6(4)

BB#2: derived from LLVM BB %while.body
    Predecessors according to CFG: BB#1
	ST %vreg4, <fi#1>, 0; mem:ST4[%m] CPURegs:%vreg4
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %while.cond1
    Predecessors according to CFG: BB#2 BB#4
	%vreg44<def> = MovIGH %ZERO, <ga:@nTaps>[TF=3]; CPURegs:%vreg44
	%vreg45<def,tied1> = MovIGL %vreg44<tied0>, <ga:@nTaps>[TF=4]; CPURegs:%vreg45,%vreg44
	%vreg46<def> = LD %vreg45<kill>, 0; mem:LD4[@nTaps] CPURegs:%vreg46,%vreg45
	%vreg47<def> = LD <fi#1>, 0; mem:LD4[%m] CPURegs:%vreg47
	%vreg48<def> = GE %vreg47<kill>, %vreg46<kill>; CPURegs:%vreg48,%vreg47,%vreg46
	JC %vreg48<kill>, <BB#5>; CPURegs:%vreg48
	Jmp <BB#4>
    Successors according to CFG: BB#4(124) BB#5(4)

BB#4: derived from LLVM BB %while.body3
    Predecessors according to CFG: BB#3
	%vreg51<def> = LD <fi#1>, 0; mem:LD4[%m] CPURegs:%vreg51
	%vreg52<def> = LD <fi#0>, 0; mem:LD4[%n] CPURegs:%vreg52
	%vreg53<def> = SUBu %vreg52, %vreg51; CPURegs:%vreg53,%vreg52,%vreg51
	%vreg54<def> = MovGR %ZERO, 2; CPURegs:%vreg54
	%vreg55<def> = SHL %vreg53<kill>, %vreg54; CPURegs:%vreg55,%vreg53,%vreg54
	%vreg56<def> = MovIGH %ZERO, <ga:@x>[TF=3]; CPURegs:%vreg56
	%vreg57<def,tied1> = MovIGL %vreg56<tied0>, <ga:@x>[TF=4]; CPURegs:%vreg57,%vreg56
	%vreg58<def> = ADDu %vreg57<kill>, %vreg55<kill>; CPURegs:%vreg58,%vreg57,%vreg55
	%vreg59<def> = SHL %vreg51, %vreg54; CPURegs:%vreg59,%vreg51,%vreg54
	%vreg60<def> = MovIGH %ZERO, <ga:@h>[TF=3]; CPURegs:%vreg60
	%vreg61<def,tied1> = MovIGL %vreg60<tied0>, <ga:@h>[TF=4]; CPURegs:%vreg61,%vreg60
	%vreg62<def> = ADDu %vreg61<kill>, %vreg59<kill>; CPURegs:%vreg62,%vreg61,%vreg59
	%vreg63<def> = LD %vreg62<kill>, 0; mem:LD4[%arrayidx] CPURegs:%vreg63,%vreg62
	%vreg64<def> = LD %vreg58<kill>, 0; mem:LD4[%arrayidx5] CPURegs:%vreg64,%vreg58
	%vreg65<def> = MUL32 %vreg63<kill>, %vreg64<kill>; CPURegs:%vreg65,%vreg63,%vreg64
	%vreg66<def> = SHL %vreg52, %vreg54; CPURegs:%vreg66,%vreg52,%vreg54
	%vreg67<def> = MovIGH %ZERO, <ga:@y>[TF=3]; CPURegs:%vreg67
	%vreg68<def,tied1> = MovIGL %vreg67<tied0>, <ga:@y>[TF=4]; CPURegs:%vreg68,%vreg67
	%vreg69<def> = ADDu %vreg68, %vreg66<kill>; CPURegs:%vreg69,%vreg68,%vreg66
	%vreg70<def> = LD %vreg69, 0; mem:LD4[%arrayidx6] CPURegs:%vreg70,%vreg69
	%vreg71<def> = ADDu %vreg70<kill>, %vreg65<kill>; CPURegs:%vreg71,%vreg70,%vreg65
	ST %vreg71<kill>, %vreg69, 0; mem:ST4[%arrayidx6] CPURegs:%vreg71,%vreg69
	%vreg72<def> = LD <fi#0>, 0; mem:LD4[%n] CPURegs:%vreg72
	%vreg73<def> = SHL %vreg72<kill>, %vreg54; CPURegs:%vreg73,%vreg72,%vreg54
	%vreg74<def> = ADDu %vreg68, %vreg73<kill>; CPURegs:%vreg74,%vreg68,%vreg73
	%vreg75<def> = LD %vreg74<kill>, 0; mem:LD4[%arrayidx7] CPURegs:%vreg75,%vreg74
	%vreg76<def> = LD <fi#2>, 0; mem:LD4[%accum] CPURegs:%vreg76
	%vreg77<def> = ADDu %vreg76<kill>, %vreg75<kill>; CPURegs:%vreg77,%vreg76,%vreg75
	ST %vreg77<kill>, <fi#2>, 0; mem:ST4[%accum] CPURegs:%vreg77
	%vreg78<def> = LD <fi#1>, 0; mem:LD4[%m] CPURegs:%vreg78
	%vreg79<def> = ADDiu %vreg78<kill>, 1; CPURegs:%vreg79,%vreg78
	ST %vreg79<kill>, <fi#1>, 0; mem:ST4[%m] CPURegs:%vreg79
	Jmp <BB#3>
    Successors according to CFG: BB#3

BB#5: derived from LLVM BB %while.end
    Predecessors according to CFG: BB#3
	%vreg49<def> = LD <fi#0>, 0; mem:LD4[%n] CPURegs:%vreg49
	%vreg50<def> = ADDiu %vreg49<kill>, -1; CPURegs:%vreg50,%vreg49
	ST %vreg50<kill>, <fi#0>, 0; mem:ST4[%n] CPURegs:%vreg50
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#6: derived from LLVM BB %while.end9
    Predecessors according to CFG: BB#1
	%vreg9<def> = LD %vreg1, 0; mem:LD4[@nSamples] CPURegs:%vreg9,%vreg1
	%vreg10<def> = ADDiu %vreg9<kill>, -1; CPURegs:%vreg10,%vreg9
	ST %vreg10<kill>, <fi#0>, 0; mem:ST4[%n] CPURegs:%vreg10
	%vreg11<def> = MovGR %ZERO, 2; CPURegs:%vreg11
	ST %vreg11, <fi#3>, 0; mem:ST4[%mu] CPURegs:%vreg11
	ST %vreg4, <fi#4>, 0; mem:ST4[%j] CPURegs:%vreg4
    Successors according to CFG: BB#7

BB#7: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#6 BB#9
	%vreg13<def> = MovIGH %ZERO, <ga:@nTaps>[TF=3]; CPURegs:%vreg13
	%vreg14<def,tied1> = MovIGL %vreg13<tied0>, <ga:@nTaps>[TF=4]; CPURegs:%vreg14,%vreg13
	%vreg15<def> = LD %vreg14<kill>, 0; mem:LD4[@nTaps] CPURegs:%vreg15,%vreg14
	%vreg16<def> = LD <fi#4>, 0; mem:LD4[%j] CPURegs:%vreg16
	%vreg17<def> = GE %vreg16<kill>, %vreg15<kill>; CPURegs:%vreg17,%vreg16,%vreg15
	JC %vreg17<kill>, <BB#10>; CPURegs:%vreg17
	Jmp <BB#8>
    Successors according to CFG: BB#8(124) BB#10(4)

BB#8: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#7
	%vreg18<def> = MovIGH %ZERO, <ga:@x>[TF=3]; CPURegs:%vreg18
	%vreg19<def,tied1> = MovIGL %vreg18<tied0>, <ga:@x>[TF=4]; CPURegs:%vreg19,%vreg18
	%vreg21<def> = LD <fi#0>, 0; mem:LD4[%n] CPURegs:%vreg21
	%vreg22<def> = SHL %vreg21, %vreg11; CPURegs:%vreg22,%vreg21,%vreg11
	%vreg23<def> = ADDu %vreg19, %vreg22<kill>; CPURegs:%vreg23,%vreg19,%vreg22
	%vreg24<def> = LD %vreg23<kill>, 0; mem:LD4[%arrayidx12] CPURegs:%vreg24,%vreg23
	%vreg25<def> = LD <fi#2>, 0; mem:LD4[%accum] CPURegs:%vreg25
	%vreg26<def> = SUBu %vreg24<kill>, %vreg25<kill>; CPURegs:%vreg26,%vreg24,%vreg25
	%vreg27<def> = LD <fi#3>, 0; mem:LD4[%mu] CPURegs:%vreg27
	%vreg28<def> = MUL32 %vreg27<kill>, %vreg26<kill>; CPURegs:%vreg28,%vreg27,%vreg26
	%vreg29<def> = LD <fi#4>, 0; mem:LD4[%j] CPURegs:%vreg29
	%vreg30<def> = SUBu %vreg21, %vreg29; CPURegs:%vreg30,%vreg21,%vreg29
	%vreg31<def> = SHL %vreg30<kill>, %vreg11; CPURegs:%vreg31,%vreg30,%vreg11
	%vreg32<def> = ADDu %vreg19, %vreg31<kill>; CPURegs:%vreg32,%vreg19,%vreg31
	%vreg33<def> = LD %vreg32<kill>, 0; mem:LD4[%arrayidx16] CPURegs:%vreg33,%vreg32
	%vreg34<def> = MUL32 %vreg28<kill>, %vreg33<kill>; CPURegs:%vreg34,%vreg28,%vreg33
	%vreg35<def> = SHL %vreg29, %vreg11; CPURegs:%vreg35,%vreg29,%vreg11
	%vreg36<def> = MovIGH %ZERO, <ga:@w>[TF=3]; CPURegs:%vreg36
	%vreg37<def,tied1> = MovIGL %vreg36<tied0>, <ga:@w>[TF=4]; CPURegs:%vreg37,%vreg36
	%vreg38<def> = ADDu %vreg37<kill>, %vreg35<kill>; CPURegs:%vreg38,%vreg37,%vreg35
	%vreg39<def> = LD %vreg38, 0; mem:LD4[%arrayidx18] CPURegs:%vreg39,%vreg38
	%vreg40<def> = ADDu %vreg39<kill>, %vreg34<kill>; CPURegs:%vreg40,%vreg39,%vreg34
	ST %vreg40<kill>, %vreg38, 0; mem:ST4[%arrayidx18] CPURegs:%vreg40,%vreg38
    Successors according to CFG: BB#9

BB#9: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#8
	%vreg41<def> = LD <fi#4>, 0; mem:LD4[%j] CPURegs:%vreg41
	%vreg42<def> = ADDiu %vreg41<kill>, 1; CPURegs:%vreg42,%vreg41
	ST %vreg42<kill>, <fi#4>, 0; mem:ST4[%j] CPURegs:%vreg42
	Jmp <BB#7>
    Successors according to CFG: BB#7

BB#10: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#7
	RetLR

# End machine code for function fir.


#####==========stderr_obj==========#####:
# Machine code for function fir: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovIGH %ZERO, <ga:@nSamples>[TF=3]; CPURegs:%vreg0
	%vreg1<def,tied1> = MovIGL %vreg0<tied0>, <ga:@nSamples>[TF=4]; CPURegs:%vreg1,%vreg0
	%vreg2<def> = LD %vreg1, 0; mem:LD4[@nSamples] CPURegs:%vreg2,%vreg1
	%vreg3<def> = ADDiu %vreg2<kill>, -1; CPURegs:%vreg3,%vreg2
	ST %vreg3<kill>, <fi#0>, 0; mem:ST4[%n] CPURegs:%vreg3
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %while.cond
    Predecessors according to CFG: BB#0 BB#5
	%vreg4<def> = MovGR %ZERO, 0; CPURegs:%vreg4
	%vreg5<def> = LD <fi#0>, 0; mem:LD4[%n] CPURegs:%vreg5
	%vreg6<def> = LT %vreg5<kill>, %vreg4; CPURegs:%vreg6,%vreg5,%vreg4
	JC %vreg6<kill>, <BB#6>; CPURegs:%vreg6
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#6(4)

BB#2: derived from LLVM BB %while.body
    Predecessors according to CFG: BB#1
	ST %vreg4, <fi#1>, 0; mem:ST4[%m] CPURegs:%vreg4
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %while.cond1
    Predecessors according to CFG: BB#2 BB#4
	%vreg44<def> = MovIGH %ZERO, <ga:@nTaps>[TF=3]; CPURegs:%vreg44
	%vreg45<def,tied1> = MovIGL %vreg44<tied0>, <ga:@nTaps>[TF=4]; CPURegs:%vreg45,%vreg44
	%vreg46<def> = LD %vreg45<kill>, 0; mem:LD4[@nTaps] CPURegs:%vreg46,%vreg45
	%vreg47<def> = LD <fi#1>, 0; mem:LD4[%m] CPURegs:%vreg47
	%vreg48<def> = GE %vreg47<kill>, %vreg46<kill>; CPURegs:%vreg48,%vreg47,%vreg46
	JC %vreg48<kill>, <BB#5>; CPURegs:%vreg48
	Jmp <BB#4>
    Successors according to CFG: BB#4(124) BB#5(4)

BB#4: derived from LLVM BB %while.body3
    Predecessors according to CFG: BB#3
	%vreg51<def> = LD <fi#1>, 0; mem:LD4[%m] CPURegs:%vreg51
	%vreg52<def> = LD <fi#0>, 0; mem:LD4[%n] CPURegs:%vreg52
	%vreg53<def> = SUBu %vreg52, %vreg51; CPURegs:%vreg53,%vreg52,%vreg51
	%vreg54<def> = MovGR %ZERO, 2; CPURegs:%vreg54
	%vreg55<def> = SHL %vreg53<kill>, %vreg54; CPURegs:%vreg55,%vreg53,%vreg54
	%vreg56<def> = MovIGH %ZERO, <ga:@x>[TF=3]; CPURegs:%vreg56
	%vreg57<def,tied1> = MovIGL %vreg56<tied0>, <ga:@x>[TF=4]; CPURegs:%vreg57,%vreg56
	%vreg58<def> = ADDu %vreg57<kill>, %vreg55<kill>; CPURegs:%vreg58,%vreg57,%vreg55
	%vreg59<def> = SHL %vreg51, %vreg54; CPURegs:%vreg59,%vreg51,%vreg54
	%vreg60<def> = MovIGH %ZERO, <ga:@h>[TF=3]; CPURegs:%vreg60
	%vreg61<def,tied1> = MovIGL %vreg60<tied0>, <ga:@h>[TF=4]; CPURegs:%vreg61,%vreg60
	%vreg62<def> = ADDu %vreg61<kill>, %vreg59<kill>; CPURegs:%vreg62,%vreg61,%vreg59
	%vreg63<def> = LD %vreg62<kill>, 0; mem:LD4[%arrayidx] CPURegs:%vreg63,%vreg62
	%vreg64<def> = LD %vreg58<kill>, 0; mem:LD4[%arrayidx5] CPURegs:%vreg64,%vreg58
	%vreg65<def> = MUL32 %vreg63<kill>, %vreg64<kill>; CPURegs:%vreg65,%vreg63,%vreg64
	%vreg66<def> = SHL %vreg52, %vreg54; CPURegs:%vreg66,%vreg52,%vreg54
	%vreg67<def> = MovIGH %ZERO, <ga:@y>[TF=3]; CPURegs:%vreg67
	%vreg68<def,tied1> = MovIGL %vreg67<tied0>, <ga:@y>[TF=4]; CPURegs:%vreg68,%vreg67
	%vreg69<def> = ADDu %vreg68, %vreg66<kill>; CPURegs:%vreg69,%vreg68,%vreg66
	%vreg70<def> = LD %vreg69, 0; mem:LD4[%arrayidx6] CPURegs:%vreg70,%vreg69
	%vreg71<def> = ADDu %vreg70<kill>, %vreg65<kill>; CPURegs:%vreg71,%vreg70,%vreg65
	ST %vreg71<kill>, %vreg69, 0; mem:ST4[%arrayidx6] CPURegs:%vreg71,%vreg69
	%vreg72<def> = LD <fi#0>, 0; mem:LD4[%n] CPURegs:%vreg72
	%vreg73<def> = SHL %vreg72<kill>, %vreg54; CPURegs:%vreg73,%vreg72,%vreg54
	%vreg74<def> = ADDu %vreg68, %vreg73<kill>; CPURegs:%vreg74,%vreg68,%vreg73
	%vreg75<def> = LD %vreg74<kill>, 0; mem:LD4[%arrayidx7] CPURegs:%vreg75,%vreg74
	%vreg76<def> = LD <fi#2>, 0; mem:LD4[%accum] CPURegs:%vreg76
	%vreg77<def> = ADDu %vreg76<kill>, %vreg75<kill>; CPURegs:%vreg77,%vreg76,%vreg75
	ST %vreg77<kill>, <fi#2>, 0; mem:ST4[%accum] CPURegs:%vreg77
	%vreg78<def> = LD <fi#1>, 0; mem:LD4[%m] CPURegs:%vreg78
	%vreg79<def> = ADDiu %vreg78<kill>, 1; CPURegs:%vreg79,%vreg78
	ST %vreg79<kill>, <fi#1>, 0; mem:ST4[%m] CPURegs:%vreg79
	Jmp <BB#3>
    Successors according to CFG: BB#3

BB#5: derived from LLVM BB %while.end
    Predecessors according to CFG: BB#3
	%vreg49<def> = LD <fi#0>, 0; mem:LD4[%n] CPURegs:%vreg49
	%vreg50<def> = ADDiu %vreg49<kill>, -1; CPURegs:%vreg50,%vreg49
	ST %vreg50<kill>, <fi#0>, 0; mem:ST4[%n] CPURegs:%vreg50
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#6: derived from LLVM BB %while.end9
    Predecessors according to CFG: BB#1
	%vreg9<def> = LD %vreg1, 0; mem:LD4[@nSamples] CPURegs:%vreg9,%vreg1
	%vreg10<def> = ADDiu %vreg9<kill>, -1; CPURegs:%vreg10,%vreg9
	ST %vreg10<kill>, <fi#0>, 0; mem:ST4[%n] CPURegs:%vreg10
	%vreg11<def> = MovGR %ZERO, 2; CPURegs:%vreg11
	ST %vreg11, <fi#3>, 0; mem:ST4[%mu] CPURegs:%vreg11
	ST %vreg4, <fi#4>, 0; mem:ST4[%j] CPURegs:%vreg4
    Successors according to CFG: BB#7

BB#7: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#6 BB#9
	%vreg13<def> = MovIGH %ZERO, <ga:@nTaps>[TF=3]; CPURegs:%vreg13
	%vreg14<def,tied1> = MovIGL %vreg13<tied0>, <ga:@nTaps>[TF=4]; CPURegs:%vreg14,%vreg13
	%vreg15<def> = LD %vreg14<kill>, 0; mem:LD4[@nTaps] CPURegs:%vreg15,%vreg14
	%vreg16<def> = LD <fi#4>, 0; mem:LD4[%j] CPURegs:%vreg16
	%vreg17<def> = GE %vreg16<kill>, %vreg15<kill>; CPURegs:%vreg17,%vreg16,%vreg15
	JC %vreg17<kill>, <BB#10>; CPURegs:%vreg17
	Jmp <BB#8>
    Successors according to CFG: BB#8(124) BB#10(4)

BB#8: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#7
	%vreg18<def> = MovIGH %ZERO, <ga:@x>[TF=3]; CPURegs:%vreg18
	%vreg19<def,tied1> = MovIGL %vreg18<tied0>, <ga:@x>[TF=4]; CPURegs:%vreg19,%vreg18
	%vreg21<def> = LD <fi#0>, 0; mem:LD4[%n] CPURegs:%vreg21
	%vreg22<def> = SHL %vreg21, %vreg11; CPURegs:%vreg22,%vreg21,%vreg11
	%vreg23<def> = ADDu %vreg19, %vreg22<kill>; CPURegs:%vreg23,%vreg19,%vreg22
	%vreg24<def> = LD %vreg23<kill>, 0; mem:LD4[%arrayidx12] CPURegs:%vreg24,%vreg23
	%vreg25<def> = LD <fi#2>, 0; mem:LD4[%accum] CPURegs:%vreg25
	%vreg26<def> = SUBu %vreg24<kill>, %vreg25<kill>; CPURegs:%vreg26,%vreg24,%vreg25
	%vreg27<def> = LD <fi#3>, 0; mem:LD4[%mu] CPURegs:%vreg27
	%vreg28<def> = MUL32 %vreg27<kill>, %vreg26<kill>; CPURegs:%vreg28,%vreg27,%vreg26
	%vreg29<def> = LD <fi#4>, 0; mem:LD4[%j] CPURegs:%vreg29
	%vreg30<def> = SUBu %vreg21, %vreg29; CPURegs:%vreg30,%vreg21,%vreg29
	%vreg31<def> = SHL %vreg30<kill>, %vreg11; CPURegs:%vreg31,%vreg30,%vreg11
	%vreg32<def> = ADDu %vreg19, %vreg31<kill>; CPURegs:%vreg32,%vreg19,%vreg31
	%vreg33<def> = LD %vreg32<kill>, 0; mem:LD4[%arrayidx16] CPURegs:%vreg33,%vreg32
	%vreg34<def> = MUL32 %vreg28<kill>, %vreg33<kill>; CPURegs:%vreg34,%vreg28,%vreg33
	%vreg35<def> = SHL %vreg29, %vreg11; CPURegs:%vreg35,%vreg29,%vreg11
	%vreg36<def> = MovIGH %ZERO, <ga:@w>[TF=3]; CPURegs:%vreg36
	%vreg37<def,tied1> = MovIGL %vreg36<tied0>, <ga:@w>[TF=4]; CPURegs:%vreg37,%vreg36
	%vreg38<def> = ADDu %vreg37<kill>, %vreg35<kill>; CPURegs:%vreg38,%vreg37,%vreg35
	%vreg39<def> = LD %vreg38, 0; mem:LD4[%arrayidx18] CPURegs:%vreg39,%vreg38
	%vreg40<def> = ADDu %vreg39<kill>, %vreg34<kill>; CPURegs:%vreg40,%vreg39,%vreg34
	ST %vreg40<kill>, %vreg38, 0; mem:ST4[%arrayidx18] CPURegs:%vreg40,%vreg38
    Successors according to CFG: BB#9

BB#9: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#8
	%vreg41<def> = LD <fi#4>, 0; mem:LD4[%j] CPURegs:%vreg41
	%vreg42<def> = ADDiu %vreg41<kill>, 1; CPURegs:%vreg42,%vreg41
	ST %vreg42<kill>, <fi#4>, 0; mem:ST4[%j] CPURegs:%vreg42
	Jmp <BB#7>
    Successors according to CFG: BB#7

BB#10: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#7
	RetLR

# End machine code for function fir.

