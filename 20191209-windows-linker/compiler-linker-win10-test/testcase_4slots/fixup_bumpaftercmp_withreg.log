
#####==========stderr_mid==========#####:
'' is not a recognized processor for this target (ignoring processor)

#####==========stderr_asm==========#####:
# Machine code for function add: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 0; CPURegs:%vreg0
	ST %vreg0<kill>, <fi#0>, 0; mem:ST4[%i] CPURegs:%vreg0
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %do.body
    Predecessors according to CFG: BB#0 BB#2
	%vreg1<def> = MovGR %ZERO, 2; CPURegs:%vreg1
	%vreg2<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg2
	%vreg3<def> = SHL %vreg2<kill>, %vreg1<kill>; CPURegs:%vreg3,%vreg2,%vreg1
	%vreg4<def> = MovIGH %ZERO, <ga:@a>[TF=3]; CPURegs:%vreg4
	%vreg5<def,tied1> = MovIGL %vreg4<tied0>, <ga:@a>[TF=4]; CPURegs:%vreg5,%vreg4
	%vreg6<def> = ADDu %vreg5<kill>, %vreg3<kill>; CPURegs:%vreg6,%vreg5,%vreg3
	%vreg7<def> = LD %vreg6<kill>, 0; mem:LD4[%arrayidx] CPURegs:%vreg7,%vreg6
	%vreg8<def> = MovIGH %ZERO, <ga:@sum>[TF=3]; CPURegs:%vreg8
	%vreg9<def,tied1> = MovIGL %vreg8<tied0>, <ga:@sum>[TF=4]; CPURegs:%vreg9,%vreg8
	%vreg10<def> = LD %vreg9, 0; mem:LD4[@sum] CPURegs:%vreg10,%vreg9
	%vreg11<def> = ADDu %vreg10<kill>, %vreg7<kill>; CPURegs:%vreg11,%vreg10,%vreg7
	ST %vreg11<kill>, %vreg9, 0; mem:ST4[@sum] CPURegs:%vreg11,%vreg9
    Successors according to CFG: BB#2

BB#2: derived from LLVM BB %do.cond
    Predecessors according to CFG: BB#1
	%vreg12<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg12
	%vreg13<def> = ADDiu %vreg12, 1; CPURegs:%vreg13,%vreg12
	ST %vreg13<kill>, <fi#0>, 0; mem:ST4[%i] CPURegs:%vreg13
	%vreg14<def> = MovIGH %ZERO, <ga:@bound>[TF=3]; CPURegs:%vreg14
	%vreg15<def,tied1> = MovIGL %vreg14<tied0>, <ga:@bound>[TF=4]; CPURegs:%vreg15,%vreg14
	%vreg16<def> = LD %vreg15<kill>, 0; mem:LD4[@bound] CPURegs:%vreg16,%vreg15
	%vreg17<def> = LT %vreg12, %vreg16<kill>; CPURegs:%vreg17,%vreg12,%vreg16
	JC %vreg17<kill>, <BB#1>; CPURegs:%vreg17
	Jmp <BB#3>
    Successors according to CFG: BB#1(124) BB#3(4)

BB#3: derived from LLVM BB %do.end
    Predecessors according to CFG: BB#2
	%vreg20<def> = LD %vreg9, 0; mem:LD4[@sum] CPURegs:%vreg20,%vreg9
	%V0<def> = COPY %vreg20; CPURegs:%vreg20
	RetLR %V0<imp-use>

# End machine code for function add.


#####==========stderr_obj==========#####:
# Machine code for function add: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 0; CPURegs:%vreg0
	ST %vreg0<kill>, <fi#0>, 0; mem:ST4[%i] CPURegs:%vreg0
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %do.body
    Predecessors according to CFG: BB#0 BB#2
	%vreg1<def> = MovGR %ZERO, 2; CPURegs:%vreg1
	%vreg2<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg2
	%vreg3<def> = SHL %vreg2<kill>, %vreg1<kill>; CPURegs:%vreg3,%vreg2,%vreg1
	%vreg4<def> = MovIGH %ZERO, <ga:@a>[TF=3]; CPURegs:%vreg4
	%vreg5<def,tied1> = MovIGL %vreg4<tied0>, <ga:@a>[TF=4]; CPURegs:%vreg5,%vreg4
	%vreg6<def> = ADDu %vreg5<kill>, %vreg3<kill>; CPURegs:%vreg6,%vreg5,%vreg3
	%vreg7<def> = LD %vreg6<kill>, 0; mem:LD4[%arrayidx] CPURegs:%vreg7,%vreg6
	%vreg8<def> = MovIGH %ZERO, <ga:@sum>[TF=3]; CPURegs:%vreg8
	%vreg9<def,tied1> = MovIGL %vreg8<tied0>, <ga:@sum>[TF=4]; CPURegs:%vreg9,%vreg8
	%vreg10<def> = LD %vreg9, 0; mem:LD4[@sum] CPURegs:%vreg10,%vreg9
	%vreg11<def> = ADDu %vreg10<kill>, %vreg7<kill>; CPURegs:%vreg11,%vreg10,%vreg7
	ST %vreg11<kill>, %vreg9, 0; mem:ST4[@sum] CPURegs:%vreg11,%vreg9
    Successors according to CFG: BB#2

BB#2: derived from LLVM BB %do.cond
    Predecessors according to CFG: BB#1
	%vreg12<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg12
	%vreg13<def> = ADDiu %vreg12, 1; CPURegs:%vreg13,%vreg12
	ST %vreg13<kill>, <fi#0>, 0; mem:ST4[%i] CPURegs:%vreg13
	%vreg14<def> = MovIGH %ZERO, <ga:@bound>[TF=3]; CPURegs:%vreg14
	%vreg15<def,tied1> = MovIGL %vreg14<tied0>, <ga:@bound>[TF=4]; CPURegs:%vreg15,%vreg14
	%vreg16<def> = LD %vreg15<kill>, 0; mem:LD4[@bound] CPURegs:%vreg16,%vreg15
	%vreg17<def> = LT %vreg12, %vreg16<kill>; CPURegs:%vreg17,%vreg12,%vreg16
	JC %vreg17<kill>, <BB#1>; CPURegs:%vreg17
	Jmp <BB#3>
    Successors according to CFG: BB#1(124) BB#3(4)

BB#3: derived from LLVM BB %do.end
    Predecessors according to CFG: BB#2
	%vreg20<def> = LD %vreg9, 0; mem:LD4[@sum] CPURegs:%vreg20,%vreg9
	%V0<def> = COPY %vreg20; CPURegs:%vreg20
	RetLR %V0<imp-use>

# End machine code for function add.

