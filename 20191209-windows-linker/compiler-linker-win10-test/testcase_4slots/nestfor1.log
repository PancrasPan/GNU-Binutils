
#####==========stderr_mid==========#####:
'' is not a recognized processor for this target (ignoring processor)

#####==========stderr_asm==========#####:
# Machine code for function main: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 0; CPURegs:%vreg0
	ST %vreg0, <fi#0>, 0; mem:ST4[%retval] CPURegs:%vreg0
	ST %vreg0, <fi#2>, 0; mem:ST4[%i] CPURegs:%vreg0
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#3
	%vreg1<def> = LD <fi#2>, 0; mem:LD4[%i] CPURegs:%vreg1
	%vreg2<def> = LTI %vreg1<kill>, 3; CPURegs:%vreg2,%vreg1
	JNC %vreg2<kill>, <BB#4>; CPURegs:%vreg2
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#4(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	%vreg12<def> = LD <fi#1>, 0; mem:LD4[%retval1] CPURegs:%vreg12
	%vreg13<def> = ADDiu %vreg12<kill>, 1; CPURegs:%vreg13,%vreg12
	ST %vreg13<kill>, <fi#1>, 0; mem:ST4[%retval1] CPURegs:%vreg13
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#2
	%vreg14<def> = LD <fi#2>, 0; mem:LD4[%i] CPURegs:%vreg14
	%vreg15<def> = ADDiu %vreg14<kill>, 1; CPURegs:%vreg15,%vreg14
	ST %vreg15<kill>, <fi#2>, 0; mem:ST4[%i] CPURegs:%vreg15
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#4: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#1
	%vreg3<def> = MovGR %ZERO, 5; CPURegs:%vreg3
	ST %vreg3<kill>, <fi#3>, 0; mem:ST4[%j] CPURegs:%vreg3
    Successors according to CFG: BB#5

BB#5: derived from LLVM BB %for.cond3
    Predecessors according to CFG: BB#4 BB#7
	%vreg4<def> = MovGR %ZERO, 4; CPURegs:%vreg4
	%vreg5<def> = LD <fi#3>, 0; mem:LD4[%j] CPURegs:%vreg5
	%vreg6<def> = LT %vreg5<kill>, %vreg4<kill>; CPURegs:%vreg6,%vreg5,%vreg4
	JC %vreg6<kill>, <BB#8>; CPURegs:%vreg6
	Jmp <BB#6>
    Successors according to CFG: BB#6(124) BB#8(4)

BB#6: derived from LLVM BB %for.body5
    Predecessors according to CFG: BB#5
	%vreg8<def> = LD <fi#1>, 0; mem:LD4[%retval1] CPURegs:%vreg8
	%vreg9<def> = ADDiu %vreg8<kill>, -1; CPURegs:%vreg9,%vreg8
	ST %vreg9<kill>, <fi#1>, 0; mem:ST4[%retval1] CPURegs:%vreg9
    Successors according to CFG: BB#7

BB#7: derived from LLVM BB %for.inc6
    Predecessors according to CFG: BB#6
	%vreg10<def> = LD <fi#3>, 0; mem:LD4[%j] CPURegs:%vreg10
	%vreg11<def> = ADDiu %vreg10<kill>, -1; CPURegs:%vreg11,%vreg10
	ST %vreg11<kill>, <fi#3>, 0; mem:ST4[%j] CPURegs:%vreg11
	Jmp <BB#5>
    Successors according to CFG: BB#5

BB#8: derived from LLVM BB %for.end8
    Predecessors according to CFG: BB#5
	%vreg7<def> = LD <fi#1>, 0; mem:LD4[%retval1] CPURegs:%vreg7
	%V0<def> = COPY %vreg7; CPURegs:%vreg7
	RetLR %V0<imp-use>

# End machine code for function main.


#####==========stderr_obj==========#####:
# Machine code for function main: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 0; CPURegs:%vreg0
	ST %vreg0, <fi#0>, 0; mem:ST4[%retval] CPURegs:%vreg0
	ST %vreg0, <fi#2>, 0; mem:ST4[%i] CPURegs:%vreg0
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#3
	%vreg1<def> = LD <fi#2>, 0; mem:LD4[%i] CPURegs:%vreg1
	%vreg2<def> = LTI %vreg1<kill>, 3; CPURegs:%vreg2,%vreg1
	JNC %vreg2<kill>, <BB#4>; CPURegs:%vreg2
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#4(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	%vreg12<def> = LD <fi#1>, 0; mem:LD4[%retval1] CPURegs:%vreg12
	%vreg13<def> = ADDiu %vreg12<kill>, 1; CPURegs:%vreg13,%vreg12
	ST %vreg13<kill>, <fi#1>, 0; mem:ST4[%retval1] CPURegs:%vreg13
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#2
	%vreg14<def> = LD <fi#2>, 0; mem:LD4[%i] CPURegs:%vreg14
	%vreg15<def> = ADDiu %vreg14<kill>, 1; CPURegs:%vreg15,%vreg14
	ST %vreg15<kill>, <fi#2>, 0; mem:ST4[%i] CPURegs:%vreg15
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#4: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#1
	%vreg3<def> = MovGR %ZERO, 5; CPURegs:%vreg3
	ST %vreg3<kill>, <fi#3>, 0; mem:ST4[%j] CPURegs:%vreg3
    Successors according to CFG: BB#5

BB#5: derived from LLVM BB %for.cond3
    Predecessors according to CFG: BB#4 BB#7
	%vreg4<def> = MovGR %ZERO, 4; CPURegs:%vreg4
	%vreg5<def> = LD <fi#3>, 0; mem:LD4[%j] CPURegs:%vreg5
	%vreg6<def> = LT %vreg5<kill>, %vreg4<kill>; CPURegs:%vreg6,%vreg5,%vreg4
	JC %vreg6<kill>, <BB#8>; CPURegs:%vreg6
	Jmp <BB#6>
    Successors according to CFG: BB#6(124) BB#8(4)

BB#6: derived from LLVM BB %for.body5
    Predecessors according to CFG: BB#5
	%vreg8<def> = LD <fi#1>, 0; mem:LD4[%retval1] CPURegs:%vreg8
	%vreg9<def> = ADDiu %vreg8<kill>, -1; CPURegs:%vreg9,%vreg8
	ST %vreg9<kill>, <fi#1>, 0; mem:ST4[%retval1] CPURegs:%vreg9
    Successors according to CFG: BB#7

BB#7: derived from LLVM BB %for.inc6
    Predecessors according to CFG: BB#6
	%vreg10<def> = LD <fi#3>, 0; mem:LD4[%j] CPURegs:%vreg10
	%vreg11<def> = ADDiu %vreg10<kill>, -1; CPURegs:%vreg11,%vreg10
	ST %vreg11<kill>, <fi#3>, 0; mem:ST4[%j] CPURegs:%vreg11
	Jmp <BB#5>
    Successors according to CFG: BB#5

BB#8: derived from LLVM BB %for.end8
    Predecessors according to CFG: BB#5
	%vreg7<def> = LD <fi#1>, 0; mem:LD4[%retval1] CPURegs:%vreg7
	%V0<def> = COPY %vreg7; CPURegs:%vreg7
	RetLR %V0<imp-use>

# End machine code for function main.

