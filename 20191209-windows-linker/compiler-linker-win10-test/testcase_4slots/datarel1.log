
#####==========stderr_mid==========#####:
'' is not a recognized processor for this target (ignoring processor)

#####==========stderr_asm==========#####:
# Machine code for function main: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 0; CPURegs:%vreg0
	ST %vreg0, <fi#0>, 0; mem:ST4[%retval] CPURegs:%vreg0
	%vreg1<def> = MovIGH %ZERO, <ga:@pa>[TF=3]; CPURegs:%vreg1
	%vreg2<def,tied1> = MovIGL %vreg1<tied0>, <ga:@pa>[TF=4]; CPURegs:%vreg2,%vreg1
	%vreg3<def> = LD %vreg2, 0; mem:LD4[@pa] CPURegs:%vreg3,%vreg2
	%vreg4<def> = LD %vreg3, 0; mem:LD4[%0] CPURegs:%vreg4,%vreg3
	%vreg5<def> = ADDiu %vreg4<kill>, 1; CPURegs:%vreg5,%vreg4
	ST %vreg5<kill>, %vreg3, 0; mem:ST4[%0] CPURegs:%vreg5,%vreg3
	%vreg6<def> = MovIGH %ZERO, <ga:@pb>[TF=3]; CPURegs:%vreg6
	%vreg7<def,tied1> = MovIGL %vreg6<tied0>, <ga:@pb>[TF=4]; CPURegs:%vreg7,%vreg6
	%vreg8<def> = LD %vreg7<kill>, 0; mem:LD4[@pb] CPURegs:%vreg8,%vreg7
	%vreg9<def> = LD %vreg8, 0; mem:LD4[%2] CPURegs:%vreg9,%vreg8
	%vreg10<def> = ADDiu %vreg9<kill>, -1; CPURegs:%vreg10,%vreg9
	ST %vreg10<kill>, %vreg8, 0; mem:ST4[%2] CPURegs:%vreg10,%vreg8
	%vreg11<def> = MovIGH %ZERO, <ga:@pg2>[TF=3]; CPURegs:%vreg11
	%vreg12<def,tied1> = MovIGL %vreg11<tied0>, <ga:@pg2>[TF=4]; CPURegs:%vreg12,%vreg11
	%vreg13<def> = LD %vreg12<kill>, 0; mem:LD4[@pg2] CPURegs:%vreg13,%vreg12
	%vreg14<def> = LD %vreg2, 0; mem:LD4[@pa] CPURegs:%vreg14,%vreg2
	%vreg15<def> = LD %vreg14<kill>, 0; mem:LD4[%4] CPURegs:%vreg15,%vreg14
	%vreg16<def> = ADDiu %vreg15<kill>, 1; CPURegs:%vreg16,%vreg15
	ST %vreg16<kill>, %vreg13<kill>, 0; mem:ST4[%6] CPURegs:%vreg16,%vreg13
	%V0<def> = COPY %vreg0; CPURegs:%vreg0
	RetLR %V0<imp-use>

# End machine code for function main.


#####==========stderr_obj==========#####:
# Machine code for function main: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 0; CPURegs:%vreg0
	ST %vreg0, <fi#0>, 0; mem:ST4[%retval] CPURegs:%vreg0
	%vreg1<def> = MovIGH %ZERO, <ga:@pa>[TF=3]; CPURegs:%vreg1
	%vreg2<def,tied1> = MovIGL %vreg1<tied0>, <ga:@pa>[TF=4]; CPURegs:%vreg2,%vreg1
	%vreg3<def> = LD %vreg2, 0; mem:LD4[@pa] CPURegs:%vreg3,%vreg2
	%vreg4<def> = LD %vreg3, 0; mem:LD4[%0] CPURegs:%vreg4,%vreg3
	%vreg5<def> = ADDiu %vreg4<kill>, 1; CPURegs:%vreg5,%vreg4
	ST %vreg5<kill>, %vreg3, 0; mem:ST4[%0] CPURegs:%vreg5,%vreg3
	%vreg6<def> = MovIGH %ZERO, <ga:@pb>[TF=3]; CPURegs:%vreg6
	%vreg7<def,tied1> = MovIGL %vreg6<tied0>, <ga:@pb>[TF=4]; CPURegs:%vreg7,%vreg6
	%vreg8<def> = LD %vreg7<kill>, 0; mem:LD4[@pb] CPURegs:%vreg8,%vreg7
	%vreg9<def> = LD %vreg8, 0; mem:LD4[%2] CPURegs:%vreg9,%vreg8
	%vreg10<def> = ADDiu %vreg9<kill>, -1; CPURegs:%vreg10,%vreg9
	ST %vreg10<kill>, %vreg8, 0; mem:ST4[%2] CPURegs:%vreg10,%vreg8
	%vreg11<def> = MovIGH %ZERO, <ga:@pg2>[TF=3]; CPURegs:%vreg11
	%vreg12<def,tied1> = MovIGL %vreg11<tied0>, <ga:@pg2>[TF=4]; CPURegs:%vreg12,%vreg11
	%vreg13<def> = LD %vreg12<kill>, 0; mem:LD4[@pg2] CPURegs:%vreg13,%vreg12
	%vreg14<def> = LD %vreg2, 0; mem:LD4[@pa] CPURegs:%vreg14,%vreg2
	%vreg15<def> = LD %vreg14<kill>, 0; mem:LD4[%4] CPURegs:%vreg15,%vreg14
	%vreg16<def> = ADDiu %vreg15<kill>, 1; CPURegs:%vreg16,%vreg15
	ST %vreg16<kill>, %vreg13<kill>, 0; mem:ST4[%6] CPURegs:%vreg16,%vreg13
	%V0<def> = COPY %vreg0; CPURegs:%vreg0
	RetLR %V0<imp-use>

# End machine code for function main.

