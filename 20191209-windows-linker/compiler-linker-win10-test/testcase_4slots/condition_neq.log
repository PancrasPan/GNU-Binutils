
#####==========stderr_mid==========#####:
'' is not a recognized processor for this target (ignoring processor)

#####==========stderr_asm==========#####:
# Machine code for function add: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 0; CPURegs:%vreg0
	ST %vreg0<kill>, <fi#0>, 0; mem:ST4[%i] CPURegs:%vreg0
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#3
	%vreg1<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg1
	%vreg2<def> = EQI %vreg1<kill>, 256; CPURegs:%vreg2,%vreg1
	JC %vreg2<kill>, <BB#4>; CPURegs:%vreg2
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#4(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	%vreg6<def> = MovGR %ZERO, 2; CPURegs:%vreg6
	%vreg7<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg7
	%vreg8<def> = SHL %vreg7<kill>, %vreg6<kill>; CPURegs:%vreg8,%vreg7,%vreg6
	%vreg9<def> = MovIGH %ZERO, <ga:@a>[TF=3]; CPURegs:%vreg9
	%vreg10<def,tied1> = MovIGL %vreg9<tied0>, <ga:@a>[TF=4]; CPURegs:%vreg10,%vreg9
	%vreg11<def> = ADDu %vreg10<kill>, %vreg8<kill>; CPURegs:%vreg11,%vreg10,%vreg8
	%vreg12<def> = LD %vreg11<kill>, 0; mem:LD4[%arrayidx] CPURegs:%vreg12,%vreg11
	%vreg13<def> = MovIGH %ZERO, <ga:@sum>[TF=3]; CPURegs:%vreg13
	%vreg14<def,tied1> = MovIGL %vreg13<tied0>, <ga:@sum>[TF=4]; CPURegs:%vreg14,%vreg13
	%vreg15<def> = LD %vreg14, 0; mem:LD4[@sum] CPURegs:%vreg15,%vreg14
	%vreg16<def> = ADDu %vreg15<kill>, %vreg12<kill>; CPURegs:%vreg16,%vreg15,%vreg12
	ST %vreg16<kill>, %vreg14, 0; mem:ST4[@sum] CPURegs:%vreg16,%vreg14
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#2
	%vreg17<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg17
	%vreg18<def> = ADDiu %vreg17<kill>, 2; CPURegs:%vreg18,%vreg17
	ST %vreg18<kill>, <fi#0>, 0; mem:ST4[%i] CPURegs:%vreg18
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#4: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#1
	%vreg3<def> = MovIGH %ZERO, <ga:@sum>[TF=3]; CPURegs:%vreg3
	%vreg4<def,tied1> = MovIGL %vreg3<tied0>, <ga:@sum>[TF=4]; CPURegs:%vreg4,%vreg3
	%vreg5<def> = LD %vreg4<kill>, 0; mem:LD4[@sum] CPURegs:%vreg5,%vreg4
	%V0<def> = COPY %vreg5; CPURegs:%vreg5
	RetLR %V0<imp-use>

# End machine code for function add.


#####==========stderr_obj==========#####:
# Machine code for function add: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 0; CPURegs:%vreg0
	ST %vreg0<kill>, <fi#0>, 0; mem:ST4[%i] CPURegs:%vreg0
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#3
	%vreg1<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg1
	%vreg2<def> = EQI %vreg1<kill>, 256; CPURegs:%vreg2,%vreg1
	JC %vreg2<kill>, <BB#4>; CPURegs:%vreg2
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#4(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	%vreg6<def> = MovGR %ZERO, 2; CPURegs:%vreg6
	%vreg7<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg7
	%vreg8<def> = SHL %vreg7<kill>, %vreg6<kill>; CPURegs:%vreg8,%vreg7,%vreg6
	%vreg9<def> = MovIGH %ZERO, <ga:@a>[TF=3]; CPURegs:%vreg9
	%vreg10<def,tied1> = MovIGL %vreg9<tied0>, <ga:@a>[TF=4]; CPURegs:%vreg10,%vreg9
	%vreg11<def> = ADDu %vreg10<kill>, %vreg8<kill>; CPURegs:%vreg11,%vreg10,%vreg8
	%vreg12<def> = LD %vreg11<kill>, 0; mem:LD4[%arrayidx] CPURegs:%vreg12,%vreg11
	%vreg13<def> = MovIGH %ZERO, <ga:@sum>[TF=3]; CPURegs:%vreg13
	%vreg14<def,tied1> = MovIGL %vreg13<tied0>, <ga:@sum>[TF=4]; CPURegs:%vreg14,%vreg13
	%vreg15<def> = LD %vreg14, 0; mem:LD4[@sum] CPURegs:%vreg15,%vreg14
	%vreg16<def> = ADDu %vreg15<kill>, %vreg12<kill>; CPURegs:%vreg16,%vreg15,%vreg12
	ST %vreg16<kill>, %vreg14, 0; mem:ST4[@sum] CPURegs:%vreg16,%vreg14
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#2
	%vreg17<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg17
	%vreg18<def> = ADDiu %vreg17<kill>, 2; CPURegs:%vreg18,%vreg17
	ST %vreg18<kill>, <fi#0>, 0; mem:ST4[%i] CPURegs:%vreg18
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#4: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#1
	%vreg3<def> = MovIGH %ZERO, <ga:@sum>[TF=3]; CPURegs:%vreg3
	%vreg4<def,tied1> = MovIGL %vreg3<tied0>, <ga:@sum>[TF=4]; CPURegs:%vreg4,%vreg3
	%vreg5<def> = LD %vreg4<kill>, 0; mem:LD4[@sum] CPURegs:%vreg5,%vreg4
	%V0<def> = COPY %vreg5; CPURegs:%vreg5
	RetLR %V0<imp-use>

# End machine code for function add.

