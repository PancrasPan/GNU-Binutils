
#####==========stderr_mid==========#####:
'' is not a recognized processor for this target (ignoring processor)

#####==========stderr_asm==========#####:
# Machine code for function add: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 255; CPURegs:%vreg0
	ST %vreg0<kill>, <fi#0>, 0; mem:ST4[%i] CPURegs:%vreg0
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#3
	%vreg1<def> = MovGR %ZERO, 1; CPURegs:%vreg1
	%vreg2<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg2
	%vreg3<def> = LT %vreg2<kill>, %vreg1<kill>; CPURegs:%vreg3,%vreg2,%vreg1
	JC %vreg3<kill>, <BB#4>; CPURegs:%vreg3
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#4(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	%vreg7<def> = MovGR %ZERO, 2; CPURegs:%vreg7
	%vreg8<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg8
	%vreg9<def> = SHL %vreg8<kill>, %vreg7<kill>; CPURegs:%vreg9,%vreg8,%vreg7
	%vreg10<def> = MovIGH %ZERO, <ga:@a>[TF=3]; CPURegs:%vreg10
	%vreg11<def,tied1> = MovIGL %vreg10<tied0>, <ga:@a>[TF=4]; CPURegs:%vreg11,%vreg10
	%vreg12<def> = ADDu %vreg11<kill>, %vreg9<kill>; CPURegs:%vreg12,%vreg11,%vreg9
	%vreg13<def> = LD %vreg12<kill>, 0; mem:LD4[%arrayidx] CPURegs:%vreg13,%vreg12
	%vreg14<def> = MovIGH %ZERO, <ga:@sum>[TF=3]; CPURegs:%vreg14
	%vreg15<def,tied1> = MovIGL %vreg14<tied0>, <ga:@sum>[TF=4]; CPURegs:%vreg15,%vreg14
	%vreg16<def> = LD %vreg15, 0; mem:LD4[@sum] CPURegs:%vreg16,%vreg15
	%vreg17<def> = ADDu %vreg16<kill>, %vreg13<kill>; CPURegs:%vreg17,%vreg16,%vreg13
	ST %vreg17<kill>, %vreg15, 0; mem:ST4[@sum] CPURegs:%vreg17,%vreg15
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#2
	%vreg18<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg18
	%vreg19<def> = ADDiu %vreg18<kill>, -2; CPURegs:%vreg19,%vreg18
	ST %vreg19<kill>, <fi#0>, 0; mem:ST4[%i] CPURegs:%vreg19
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#4: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#1
	%vreg4<def> = MovIGH %ZERO, <ga:@sum>[TF=3]; CPURegs:%vreg4
	%vreg5<def,tied1> = MovIGL %vreg4<tied0>, <ga:@sum>[TF=4]; CPURegs:%vreg5,%vreg4
	%vreg6<def> = LD %vreg5<kill>, 0; mem:LD4[@sum] CPURegs:%vreg6,%vreg5
	%V0<def> = COPY %vreg6; CPURegs:%vreg6
	RetLR %V0<imp-use>

# End machine code for function add.


#####==========stderr_obj==========#####:
# Machine code for function add: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 255; CPURegs:%vreg0
	ST %vreg0<kill>, <fi#0>, 0; mem:ST4[%i] CPURegs:%vreg0
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#3
	%vreg1<def> = MovGR %ZERO, 1; CPURegs:%vreg1
	%vreg2<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg2
	%vreg3<def> = LT %vreg2<kill>, %vreg1<kill>; CPURegs:%vreg3,%vreg2,%vreg1
	JC %vreg3<kill>, <BB#4>; CPURegs:%vreg3
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#4(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	%vreg7<def> = MovGR %ZERO, 2; CPURegs:%vreg7
	%vreg8<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg8
	%vreg9<def> = SHL %vreg8<kill>, %vreg7<kill>; CPURegs:%vreg9,%vreg8,%vreg7
	%vreg10<def> = MovIGH %ZERO, <ga:@a>[TF=3]; CPURegs:%vreg10
	%vreg11<def,tied1> = MovIGL %vreg10<tied0>, <ga:@a>[TF=4]; CPURegs:%vreg11,%vreg10
	%vreg12<def> = ADDu %vreg11<kill>, %vreg9<kill>; CPURegs:%vreg12,%vreg11,%vreg9
	%vreg13<def> = LD %vreg12<kill>, 0; mem:LD4[%arrayidx] CPURegs:%vreg13,%vreg12
	%vreg14<def> = MovIGH %ZERO, <ga:@sum>[TF=3]; CPURegs:%vreg14
	%vreg15<def,tied1> = MovIGL %vreg14<tied0>, <ga:@sum>[TF=4]; CPURegs:%vreg15,%vreg14
	%vreg16<def> = LD %vreg15, 0; mem:LD4[@sum] CPURegs:%vreg16,%vreg15
	%vreg17<def> = ADDu %vreg16<kill>, %vreg13<kill>; CPURegs:%vreg17,%vreg16,%vreg13
	ST %vreg17<kill>, %vreg15, 0; mem:ST4[@sum] CPURegs:%vreg17,%vreg15
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#2
	%vreg18<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg18
	%vreg19<def> = ADDiu %vreg18<kill>, -2; CPURegs:%vreg19,%vreg18
	ST %vreg19<kill>, <fi#0>, 0; mem:ST4[%i] CPURegs:%vreg19
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#4: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#1
	%vreg4<def> = MovIGH %ZERO, <ga:@sum>[TF=3]; CPURegs:%vreg4
	%vreg5<def,tied1> = MovIGL %vreg4<tied0>, <ga:@sum>[TF=4]; CPURegs:%vreg5,%vreg4
	%vreg6<def> = LD %vreg5<kill>, 0; mem:LD4[@sum] CPURegs:%vreg6,%vreg5
	%V0<def> = COPY %vreg6; CPURegs:%vreg6
	RetLR %V0<imp-use>

# End machine code for function add.

