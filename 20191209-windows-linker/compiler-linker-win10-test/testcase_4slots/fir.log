
#####==========stderr_mid==========#####:
'' is not a recognized processor for this target (ignoring processor)

#####==========stderr_asm==========#####:
# Machine code for function pin_down: SSA
Frame Objects:
  fi#-1: size=4, align=8, fixed, at location [SP+8]
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
Function Live Ins: %A0 in %vreg0, %A1 in %vreg1

BB#0: derived from LLVM BB %entry
    Live Ins: %A0 %A1
	%vreg1<def> = COPY %A1; CPURegs:%vreg1
	%vreg0<def> = COPY %A0; CPURegs:%vreg0
	%vreg2<def> = LD <fi#-1>, 0; mem:LD4[FixedStack-1](align=8) CPURegs:%vreg2
	ST %vreg0, <fi#0>, 0; mem:ST4[%px.addr] CPURegs:%vreg0
	ST %vreg1, <fi#1>, 0; mem:ST4[%ph.addr] CPURegs:%vreg1
	ST %vreg2<kill>, <fi#2>, 0; mem:ST4[%y.addr] CPURegs:%vreg2
	%vreg3<def> = MovGR %ZERO, 1; CPURegs:%vreg3
	ST %vreg3<kill>, <fi#3>, 0; mem:ST4[%i] CPURegs:%vreg3
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#3
	%vreg4<def> = LD <fi#3>, 0; mem:LD4[%i] CPURegs:%vreg4
	%vreg5<def> = LTI %vreg4<kill>, 17; CPURegs:%vreg5,%vreg4
	JNC %vreg5<kill>, <BB#4>; CPURegs:%vreg5
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#4(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	%vreg6<def> = LD <fi#0>, 0; mem:LD4[%px.addr] CPURegs:%vreg6
	%vreg7<def> = ADDiu %vreg6, 4; CPURegs:%vreg7,%vreg6
	%vreg8<def> = LD <fi#3>, 0; mem:LD4[%i] CPURegs:%vreg8
	ST %vreg7<kill>, <fi#0>, 0; mem:ST4[%px.addr] CPURegs:%vreg7
	ST %vreg8<kill>, %vreg6, 0; mem:ST4[%2] CPURegs:%vreg8,%vreg6
	%vreg9<def> = LD <fi#1>, 0; mem:LD4[%ph.addr] CPURegs:%vreg9
	%vreg10<def> = ADDiu %vreg9, 4; CPURegs:%vreg10,%vreg9
	%vreg11<def> = LD <fi#3>, 0; mem:LD4[%i] CPURegs:%vreg11
	ST %vreg10<kill>, <fi#1>, 0; mem:ST4[%ph.addr] CPURegs:%vreg10
	ST %vreg11<kill>, %vreg9, 0; mem:ST4[%4] CPURegs:%vreg11,%vreg9
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#2
	%vreg12<def> = LD <fi#3>, 0; mem:LD4[%i] CPURegs:%vreg12
	%vreg13<def> = ADDiu %vreg12<kill>, 1; CPURegs:%vreg13,%vreg12
	ST %vreg13<kill>, <fi#3>, 0; mem:ST4[%i] CPURegs:%vreg13
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#4: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#1
	RetLR

# End machine code for function pin_down.

# Machine code for function main: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=4, align=4, at location [SP]
  fi#5: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 0; CPURegs:%vreg0
	ST %vreg0, <fi#0>, 0; mem:ST4[%retval] CPURegs:%vreg0
	%vreg1<def> = LD <fi#5>, 0; mem:LD4[%y] CPURegs:%vreg1
	ADJCALLSTACKDOWN 16, %SP<imp-def,dead>, %SP<imp-use>
	%vreg2<def> = COPY %SP; CPURegs:%vreg2
	ST %vreg1<kill>, %vreg2, 8; mem:ST4[<unknown>] CPURegs:%vreg1,%vreg2
	%vreg3<def> = MovIGH %ZERO, <ga:@main.x>[TF=3]; CPURegs:%vreg3
	%vreg4<def,tied1> = MovIGL %vreg3<tied0>, <ga:@main.x>[TF=4]; CPURegs:%vreg4,%vreg3
	%vreg5<def> = MovIGH %ZERO, <ga:@main.h>[TF=3]; CPURegs:%vreg5
	%vreg6<def,tied1> = MovIGL %vreg5<tied0>, <ga:@main.h>[TF=4]; CPURegs:%vreg6,%vreg5
	%A0<def> = COPY %vreg4; CPURegs:%vreg4
	%A1<def> = COPY %vreg6; CPURegs:%vreg6
	CALL <ga:@pin_down>, %A0, %A1, <regmask>, %SP<imp-def>
	ADJCALLSTACKUP 16, 0, %SP<imp-def,dead>, %SP<imp-use>
	%vreg7<def> = ADDiu %vreg6, 60; CPURegs:%vreg7,%vreg6
	ST %vreg7<kill>, <fi#4>, 0; mem:ST4[%ph] CPURegs:%vreg7
	%vreg8<def> = ADDiu %vreg4, 60; CPURegs:%vreg8,%vreg4
	ST %vreg8<kill>, <fi#2>, 0; mem:ST4[%px] CPURegs:%vreg8
	%vreg9<def> = ADDiu %vreg4, 56; CPURegs:%vreg9,%vreg4
	ST %vreg9<kill>, <fi#3>, 0; mem:ST4[%px2] CPURegs:%vreg9
	ST %vreg0, <fi#5>, 0; mem:ST4[%y] CPURegs:%vreg0
	ST %vreg0, <fi#1>, 0; mem:ST4[%i] CPURegs:%vreg0
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#3
	%vreg10<def> = LD <fi#1>, 0; mem:LD4[%i] CPURegs:%vreg10
	%vreg11<def> = LTI %vreg10<kill>, 15; CPURegs:%vreg11,%vreg10
	JNC %vreg11<kill>, <BB#4>; CPURegs:%vreg11
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#4(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	%vreg30<def> = LD <fi#4>, 0; mem:LD4[%ph] CPURegs:%vreg30
	%vreg31<def> = ADDiu %vreg30, -4; CPURegs:%vreg31,%vreg30
	ST %vreg31<kill>, <fi#4>, 0; mem:ST4[%ph] CPURegs:%vreg31
	%vreg32<def> = LD %vreg30, 0; mem:LD4[%2] CPURegs:%vreg32,%vreg30
	%vreg33<def> = LD <fi#2>, 0; mem:LD4[%px] CPURegs:%vreg33
	%vreg34<def> = LD %vreg33<kill>, 0; mem:LD4[%4] CPURegs:%vreg34,%vreg33
	%vreg35<def> = MUL32 %vreg32<kill>, %vreg34<kill>; CPURegs:%vreg35,%vreg32,%vreg34
	%vreg36<def> = LD <fi#5>, 0; mem:LD4[%y] CPURegs:%vreg36
	%vreg37<def> = ADDu %vreg36<kill>, %vreg35<kill>; CPURegs:%vreg37,%vreg36,%vreg35
	ST %vreg37<kill>, <fi#5>, 0; mem:ST4[%y] CPURegs:%vreg37
	%vreg38<def> = LD <fi#3>, 0; mem:LD4[%px2] CPURegs:%vreg38
	%vreg39<def> = ADDiu %vreg38, -4; CPURegs:%vreg39,%vreg38
	ST %vreg39<kill>, <fi#3>, 0; mem:ST4[%px2] CPURegs:%vreg39
	%vreg40<def> = LD %vreg38, 0; mem:LD4[%7] CPURegs:%vreg40,%vreg38
	%vreg41<def> = LD <fi#2>, 0; mem:LD4[%px] CPURegs:%vreg41
	%vreg42<def> = ADDiu %vreg41, -4; CPURegs:%vreg42,%vreg41
	ST %vreg42<kill>, <fi#2>, 0; mem:ST4[%px] CPURegs:%vreg42
	ST %vreg40<kill>, %vreg41, 0; mem:ST4[%9] CPURegs:%vreg40,%vreg41
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#2
	%vreg43<def> = LD <fi#1>, 0; mem:LD4[%i] CPURegs:%vreg43
	%vreg44<def> = ADDiu %vreg43<kill>, 1; CPURegs:%vreg44,%vreg43
	ST %vreg44<kill>, <fi#1>, 0; mem:ST4[%i] CPURegs:%vreg44
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#4: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#1
	%vreg12<def> = LD <fi#2>, 0; mem:LD4[%px] CPURegs:%vreg12
	%vreg13<def> = LD %vreg12<kill>, 0; mem:LD4[%13] CPURegs:%vreg13,%vreg12
	%vreg14<def> = LD <fi#4>, 0; mem:LD4[%ph] CPURegs:%vreg14
	%vreg15<def> = LD %vreg14<kill>, 0; mem:LD4[%11] CPURegs:%vreg15,%vreg14
	%vreg16<def> = MUL32 %vreg15<kill>, %vreg13<kill>; CPURegs:%vreg16,%vreg15,%vreg13
	%vreg17<def> = LD <fi#5>, 0; mem:LD4[%y] CPURegs:%vreg17
	%vreg18<def> = ADDu %vreg17<kill>, %vreg16<kill>; CPURegs:%vreg18,%vreg17,%vreg16
	ST %vreg18<kill>, <fi#5>, 0; mem:ST4[%y] CPURegs:%vreg18
	%vreg19<def> = MovIGH %ZERO, <ga:@main.x0>[TF=3]; CPURegs:%vreg19
	%vreg20<def,tied1> = MovIGL %vreg19<tied0>, <ga:@main.x0>[TF=4]; CPURegs:%vreg20,%vreg19
	%vreg21<def> = LD %vreg20<kill>, 0; mem:LD4[@main.x0] CPURegs:%vreg21,%vreg20
	%vreg22<def> = LD <fi#2>, 0; mem:LD4[%px] CPURegs:%vreg22
	ST %vreg21<kill>, %vreg22<kill>, 0; mem:ST4[%17] CPURegs:%vreg21,%vreg22
	%vreg23<def> = LD <fi#5>, 0; mem:LD4[%y] CPURegs:%vreg23
	ADJCALLSTACKDOWN 16, %SP<imp-def,dead>, %SP<imp-use>
	%vreg24<def> = COPY %SP; CPURegs:%vreg24
	ST %vreg23<kill>, %vreg24, 8; mem:ST4[<unknown>] CPURegs:%vreg23,%vreg24
	%A0<def> = COPY %vreg4; CPURegs:%vreg4
	%A1<def> = COPY %vreg6; CPURegs:%vreg6
	CALL <ga:@pin_down>, %A0, %A1, <regmask>, %SP<imp-def>
	ADJCALLSTACKUP 16, 0, %SP<imp-def,dead>, %SP<imp-use>
	%vreg29<def> = LD <fi#5>, 0; mem:LD4[%y] CPURegs:%vreg29
	%V0<def> = COPY %vreg29; CPURegs:%vreg29
	RetLR %V0<imp-use>

# End machine code for function main.


#####==========stderr_obj==========#####:
# Machine code for function pin_down: SSA
Frame Objects:
  fi#-1: size=4, align=8, fixed, at location [SP+8]
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
Function Live Ins: %A0 in %vreg0, %A1 in %vreg1

BB#0: derived from LLVM BB %entry
    Live Ins: %A0 %A1
	%vreg1<def> = COPY %A1; CPURegs:%vreg1
	%vreg0<def> = COPY %A0; CPURegs:%vreg0
	%vreg2<def> = LD <fi#-1>, 0; mem:LD4[FixedStack-1](align=8) CPURegs:%vreg2
	ST %vreg0, <fi#0>, 0; mem:ST4[%px.addr] CPURegs:%vreg0
	ST %vreg1, <fi#1>, 0; mem:ST4[%ph.addr] CPURegs:%vreg1
	ST %vreg2<kill>, <fi#2>, 0; mem:ST4[%y.addr] CPURegs:%vreg2
	%vreg3<def> = MovGR %ZERO, 1; CPURegs:%vreg3
	ST %vreg3<kill>, <fi#3>, 0; mem:ST4[%i] CPURegs:%vreg3
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#3
	%vreg4<def> = LD <fi#3>, 0; mem:LD4[%i] CPURegs:%vreg4
	%vreg5<def> = LTI %vreg4<kill>, 17; CPURegs:%vreg5,%vreg4
	JNC %vreg5<kill>, <BB#4>; CPURegs:%vreg5
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#4(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	%vreg6<def> = LD <fi#0>, 0; mem:LD4[%px.addr] CPURegs:%vreg6
	%vreg7<def> = ADDiu %vreg6, 4; CPURegs:%vreg7,%vreg6
	%vreg8<def> = LD <fi#3>, 0; mem:LD4[%i] CPURegs:%vreg8
	ST %vreg7<kill>, <fi#0>, 0; mem:ST4[%px.addr] CPURegs:%vreg7
	ST %vreg8<kill>, %vreg6, 0; mem:ST4[%2] CPURegs:%vreg8,%vreg6
	%vreg9<def> = LD <fi#1>, 0; mem:LD4[%ph.addr] CPURegs:%vreg9
	%vreg10<def> = ADDiu %vreg9, 4; CPURegs:%vreg10,%vreg9
	%vreg11<def> = LD <fi#3>, 0; mem:LD4[%i] CPURegs:%vreg11
	ST %vreg10<kill>, <fi#1>, 0; mem:ST4[%ph.addr] CPURegs:%vreg10
	ST %vreg11<kill>, %vreg9, 0; mem:ST4[%4] CPURegs:%vreg11,%vreg9
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#2
	%vreg12<def> = LD <fi#3>, 0; mem:LD4[%i] CPURegs:%vreg12
	%vreg13<def> = ADDiu %vreg12<kill>, 1; CPURegs:%vreg13,%vreg12
	ST %vreg13<kill>, <fi#3>, 0; mem:ST4[%i] CPURegs:%vreg13
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#4: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#1
	RetLR

# End machine code for function pin_down.

# Machine code for function main: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=4, align=4, at location [SP]
  fi#5: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 0; CPURegs:%vreg0
	ST %vreg0, <fi#0>, 0; mem:ST4[%retval] CPURegs:%vreg0
	%vreg1<def> = LD <fi#5>, 0; mem:LD4[%y] CPURegs:%vreg1
	ADJCALLSTACKDOWN 16, %SP<imp-def,dead>, %SP<imp-use>
	%vreg2<def> = COPY %SP; CPURegs:%vreg2
	ST %vreg1<kill>, %vreg2, 8; mem:ST4[<unknown>] CPURegs:%vreg1,%vreg2
	%vreg3<def> = MovIGH %ZERO, <ga:@main.x>[TF=3]; CPURegs:%vreg3
	%vreg4<def,tied1> = MovIGL %vreg3<tied0>, <ga:@main.x>[TF=4]; CPURegs:%vreg4,%vreg3
	%vreg5<def> = MovIGH %ZERO, <ga:@main.h>[TF=3]; CPURegs:%vreg5
	%vreg6<def,tied1> = MovIGL %vreg5<tied0>, <ga:@main.h>[TF=4]; CPURegs:%vreg6,%vreg5
	%A0<def> = COPY %vreg4; CPURegs:%vreg4
	%A1<def> = COPY %vreg6; CPURegs:%vreg6
	CALL <ga:@pin_down>, %A0, %A1, <regmask>, %SP<imp-def>
	ADJCALLSTACKUP 16, 0, %SP<imp-def,dead>, %SP<imp-use>
	%vreg7<def> = ADDiu %vreg6, 60; CPURegs:%vreg7,%vreg6
	ST %vreg7<kill>, <fi#4>, 0; mem:ST4[%ph] CPURegs:%vreg7
	%vreg8<def> = ADDiu %vreg4, 60; CPURegs:%vreg8,%vreg4
	ST %vreg8<kill>, <fi#2>, 0; mem:ST4[%px] CPURegs:%vreg8
	%vreg9<def> = ADDiu %vreg4, 56; CPURegs:%vreg9,%vreg4
	ST %vreg9<kill>, <fi#3>, 0; mem:ST4[%px2] CPURegs:%vreg9
	ST %vreg0, <fi#5>, 0; mem:ST4[%y] CPURegs:%vreg0
	ST %vreg0, <fi#1>, 0; mem:ST4[%i] CPURegs:%vreg0
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#3
	%vreg10<def> = LD <fi#1>, 0; mem:LD4[%i] CPURegs:%vreg10
	%vreg11<def> = LTI %vreg10<kill>, 15; CPURegs:%vreg11,%vreg10
	JNC %vreg11<kill>, <BB#4>; CPURegs:%vreg11
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#4(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	%vreg30<def> = LD <fi#4>, 0; mem:LD4[%ph] CPURegs:%vreg30
	%vreg31<def> = ADDiu %vreg30, -4; CPURegs:%vreg31,%vreg30
	ST %vreg31<kill>, <fi#4>, 0; mem:ST4[%ph] CPURegs:%vreg31
	%vreg32<def> = LD %vreg30, 0; mem:LD4[%2] CPURegs:%vreg32,%vreg30
	%vreg33<def> = LD <fi#2>, 0; mem:LD4[%px] CPURegs:%vreg33
	%vreg34<def> = LD %vreg33<kill>, 0; mem:LD4[%4] CPURegs:%vreg34,%vreg33
	%vreg35<def> = MUL32 %vreg32<kill>, %vreg34<kill>; CPURegs:%vreg35,%vreg32,%vreg34
	%vreg36<def> = LD <fi#5>, 0; mem:LD4[%y] CPURegs:%vreg36
	%vreg37<def> = ADDu %vreg36<kill>, %vreg35<kill>; CPURegs:%vreg37,%vreg36,%vreg35
	ST %vreg37<kill>, <fi#5>, 0; mem:ST4[%y] CPURegs:%vreg37
	%vreg38<def> = LD <fi#3>, 0; mem:LD4[%px2] CPURegs:%vreg38
	%vreg39<def> = ADDiu %vreg38, -4; CPURegs:%vreg39,%vreg38
	ST %vreg39<kill>, <fi#3>, 0; mem:ST4[%px2] CPURegs:%vreg39
	%vreg40<def> = LD %vreg38, 0; mem:LD4[%7] CPURegs:%vreg40,%vreg38
	%vreg41<def> = LD <fi#2>, 0; mem:LD4[%px] CPURegs:%vreg41
	%vreg42<def> = ADDiu %vreg41, -4; CPURegs:%vreg42,%vreg41
	ST %vreg42<kill>, <fi#2>, 0; mem:ST4[%px] CPURegs:%vreg42
	ST %vreg40<kill>, %vreg41, 0; mem:ST4[%9] CPURegs:%vreg40,%vreg41
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#2
	%vreg43<def> = LD <fi#1>, 0; mem:LD4[%i] CPURegs:%vreg43
	%vreg44<def> = ADDiu %vreg43<kill>, 1; CPURegs:%vreg44,%vreg43
	ST %vreg44<kill>, <fi#1>, 0; mem:ST4[%i] CPURegs:%vreg44
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#4: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#1
	%vreg12<def> = LD <fi#2>, 0; mem:LD4[%px] CPURegs:%vreg12
	%vreg13<def> = LD %vreg12<kill>, 0; mem:LD4[%13] CPURegs:%vreg13,%vreg12
	%vreg14<def> = LD <fi#4>, 0; mem:LD4[%ph] CPURegs:%vreg14
	%vreg15<def> = LD %vreg14<kill>, 0; mem:LD4[%11] CPURegs:%vreg15,%vreg14
	%vreg16<def> = MUL32 %vreg15<kill>, %vreg13<kill>; CPURegs:%vreg16,%vreg15,%vreg13
	%vreg17<def> = LD <fi#5>, 0; mem:LD4[%y] CPURegs:%vreg17
	%vreg18<def> = ADDu %vreg17<kill>, %vreg16<kill>; CPURegs:%vreg18,%vreg17,%vreg16
	ST %vreg18<kill>, <fi#5>, 0; mem:ST4[%y] CPURegs:%vreg18
	%vreg19<def> = MovIGH %ZERO, <ga:@main.x0>[TF=3]; CPURegs:%vreg19
	%vreg20<def,tied1> = MovIGL %vreg19<tied0>, <ga:@main.x0>[TF=4]; CPURegs:%vreg20,%vreg19
	%vreg21<def> = LD %vreg20<kill>, 0; mem:LD4[@main.x0] CPURegs:%vreg21,%vreg20
	%vreg22<def> = LD <fi#2>, 0; mem:LD4[%px] CPURegs:%vreg22
	ST %vreg21<kill>, %vreg22<kill>, 0; mem:ST4[%17] CPURegs:%vreg21,%vreg22
	%vreg23<def> = LD <fi#5>, 0; mem:LD4[%y] CPURegs:%vreg23
	ADJCALLSTACKDOWN 16, %SP<imp-def,dead>, %SP<imp-use>
	%vreg24<def> = COPY %SP; CPURegs:%vreg24
	ST %vreg23<kill>, %vreg24, 8; mem:ST4[<unknown>] CPURegs:%vreg23,%vreg24
	%A0<def> = COPY %vreg4; CPURegs:%vreg4
	%A1<def> = COPY %vreg6; CPURegs:%vreg6
	CALL <ga:@pin_down>, %A0, %A1, <regmask>, %SP<imp-def>
	ADJCALLSTACKUP 16, 0, %SP<imp-def,dead>, %SP<imp-use>
	%vreg29<def> = LD <fi#5>, 0; mem:LD4[%y] CPURegs:%vreg29
	%V0<def> = COPY %vreg29; CPURegs:%vreg29
	RetLR %V0<imp-use>

# End machine code for function main.

