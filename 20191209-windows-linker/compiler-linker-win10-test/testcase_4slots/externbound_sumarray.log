
#####==========stderr_mid==========#####:
'' is not a recognized processor for this target (ignoring processor)

#####==========stderr_asm==========#####:
# Machine code for function main: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 0; CPURegs:%vreg0
	ST %vreg0, <fi#0>, 0; mem:ST4[%retval] CPURegs:%vreg0
	ST %vreg0, <fi#1>, 0; mem:ST4[%m] CPURegs:%vreg0
	ST %vreg0, <fi#2>, 0; mem:ST4[%sum] CPURegs:%vreg0
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %while.cond
    Predecessors according to CFG: BB#0 BB#2
	%vreg1<def> = MovIGH %ZERO, <ga:@nTaps>[TF=3]; CPURegs:%vreg1
	%vreg2<def,tied1> = MovIGL %vreg1<tied0>, <ga:@nTaps>[TF=4]; CPURegs:%vreg2,%vreg1
	%vreg3<def> = LD %vreg2<kill>, 0; mem:LD4[@nTaps] CPURegs:%vreg3,%vreg2
	%vreg4<def> = LD <fi#1>, 0; mem:LD4[%m] CPURegs:%vreg4
	%vreg5<def> = GE %vreg4<kill>, %vreg3<kill>; CPURegs:%vreg5,%vreg4,%vreg3
	JC %vreg5<kill>, <BB#3>; CPURegs:%vreg5
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#3(4)

BB#2: derived from LLVM BB %while.body
    Predecessors according to CFG: BB#1
	%vreg7<def> = MovGR %ZERO, 2; CPURegs:%vreg7
	%vreg8<def> = LD <fi#1>, 0; mem:LD4[%m] CPURegs:%vreg8
	%vreg9<def> = SHL %vreg8<kill>, %vreg7; CPURegs:%vreg9,%vreg8,%vreg7
	%vreg10<def> = MovIGH %ZERO, <ga:@x>[TF=3]; CPURegs:%vreg10
	%vreg11<def,tied1> = MovIGL %vreg10<tied0>, <ga:@x>[TF=4]; CPURegs:%vreg11,%vreg10
	%vreg12<def> = ADDu %vreg11, %vreg9; CPURegs:%vreg12,%vreg11,%vreg9
	%vreg13<def> = LD %vreg12<kill>, 0; mem:LD4[%arrayidx] CPURegs:%vreg13,%vreg12
	%vreg14<def> = MovIGH %ZERO, <ga:@y>[TF=3]; CPURegs:%vreg14
	%vreg15<def,tied1> = MovIGL %vreg14<tied0>, <ga:@y>[TF=4]; CPURegs:%vreg15,%vreg14
	%vreg16<def> = ADDu %vreg15, %vreg9; CPURegs:%vreg16,%vreg15,%vreg9
	%vreg17<def> = LD %vreg16, 0; mem:LD4[%arrayidx1] CPURegs:%vreg17,%vreg16
	%vreg18<def> = ADDu %vreg17<kill>, %vreg13<kill>; CPURegs:%vreg18,%vreg17,%vreg13
	ST %vreg18<kill>, %vreg16, 0; mem:ST4[%arrayidx1] CPURegs:%vreg18,%vreg16
	%vreg19<def> = LD <fi#1>, 0; mem:LD4[%m] CPURegs:%vreg19
	%vreg20<def> = SHL %vreg19<kill>, %vreg7; CPURegs:%vreg20,%vreg19,%vreg7
	%vreg21<def> = ADDu %vreg11, %vreg20; CPURegs:%vreg21,%vreg11,%vreg20
	%vreg22<def> = ADDu %vreg15, %vreg20; CPURegs:%vreg22,%vreg15,%vreg20
	%vreg23<def> = LD %vreg22<kill>, 0; mem:LD4[%arrayidx3] CPURegs:%vreg23,%vreg22
	%vreg24<def> = LD %vreg21<kill>, 0; mem:LD4[%arrayidx2] CPURegs:%vreg24,%vreg21
	%vreg25<def> = MUL32 %vreg24<kill>, %vreg23<kill>; CPURegs:%vreg25,%vreg24,%vreg23
	%vreg26<def> = LD <fi#2>, 0; mem:LD4[%sum] CPURegs:%vreg26
	%vreg27<def> = ADDu %vreg26<kill>, %vreg25<kill>; CPURegs:%vreg27,%vreg26,%vreg25
	ST %vreg27<kill>, <fi#2>, 0; mem:ST4[%sum] CPURegs:%vreg27
	%vreg28<def> = LD <fi#1>, 0; mem:LD4[%m] CPURegs:%vreg28
	%vreg29<def> = ADDiu %vreg28<kill>, 1; CPURegs:%vreg29,%vreg28
	ST %vreg29<kill>, <fi#1>, 0; mem:ST4[%m] CPURegs:%vreg29
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#3: derived from LLVM BB %while.end
    Predecessors according to CFG: BB#1
	%vreg6<def> = LD <fi#2>, 0; mem:LD4[%sum] CPURegs:%vreg6
	%V0<def> = COPY %vreg6; CPURegs:%vreg6
	RetLR %V0<imp-use>

# End machine code for function main.


#####==========stderr_obj==========#####:
# Machine code for function main: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 0; CPURegs:%vreg0
	ST %vreg0, <fi#0>, 0; mem:ST4[%retval] CPURegs:%vreg0
	ST %vreg0, <fi#1>, 0; mem:ST4[%m] CPURegs:%vreg0
	ST %vreg0, <fi#2>, 0; mem:ST4[%sum] CPURegs:%vreg0
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %while.cond
    Predecessors according to CFG: BB#0 BB#2
	%vreg1<def> = MovIGH %ZERO, <ga:@nTaps>[TF=3]; CPURegs:%vreg1
	%vreg2<def,tied1> = MovIGL %vreg1<tied0>, <ga:@nTaps>[TF=4]; CPURegs:%vreg2,%vreg1
	%vreg3<def> = LD %vreg2<kill>, 0; mem:LD4[@nTaps] CPURegs:%vreg3,%vreg2
	%vreg4<def> = LD <fi#1>, 0; mem:LD4[%m] CPURegs:%vreg4
	%vreg5<def> = GE %vreg4<kill>, %vreg3<kill>; CPURegs:%vreg5,%vreg4,%vreg3
	JC %vreg5<kill>, <BB#3>; CPURegs:%vreg5
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#3(4)

BB#2: derived from LLVM BB %while.body
    Predecessors according to CFG: BB#1
	%vreg7<def> = MovGR %ZERO, 2; CPURegs:%vreg7
	%vreg8<def> = LD <fi#1>, 0; mem:LD4[%m] CPURegs:%vreg8
	%vreg9<def> = SHL %vreg8<kill>, %vreg7; CPURegs:%vreg9,%vreg8,%vreg7
	%vreg10<def> = MovIGH %ZERO, <ga:@x>[TF=3]; CPURegs:%vreg10
	%vreg11<def,tied1> = MovIGL %vreg10<tied0>, <ga:@x>[TF=4]; CPURegs:%vreg11,%vreg10
	%vreg12<def> = ADDu %vreg11, %vreg9; CPURegs:%vreg12,%vreg11,%vreg9
	%vreg13<def> = LD %vreg12<kill>, 0; mem:LD4[%arrayidx] CPURegs:%vreg13,%vreg12
	%vreg14<def> = MovIGH %ZERO, <ga:@y>[TF=3]; CPURegs:%vreg14
	%vreg15<def,tied1> = MovIGL %vreg14<tied0>, <ga:@y>[TF=4]; CPURegs:%vreg15,%vreg14
	%vreg16<def> = ADDu %vreg15, %vreg9; CPURegs:%vreg16,%vreg15,%vreg9
	%vreg17<def> = LD %vreg16, 0; mem:LD4[%arrayidx1] CPURegs:%vreg17,%vreg16
	%vreg18<def> = ADDu %vreg17<kill>, %vreg13<kill>; CPURegs:%vreg18,%vreg17,%vreg13
	ST %vreg18<kill>, %vreg16, 0; mem:ST4[%arrayidx1] CPURegs:%vreg18,%vreg16
	%vreg19<def> = LD <fi#1>, 0; mem:LD4[%m] CPURegs:%vreg19
	%vreg20<def> = SHL %vreg19<kill>, %vreg7; CPURegs:%vreg20,%vreg19,%vreg7
	%vreg21<def> = ADDu %vreg11, %vreg20; CPURegs:%vreg21,%vreg11,%vreg20
	%vreg22<def> = ADDu %vreg15, %vreg20; CPURegs:%vreg22,%vreg15,%vreg20
	%vreg23<def> = LD %vreg22<kill>, 0; mem:LD4[%arrayidx3] CPURegs:%vreg23,%vreg22
	%vreg24<def> = LD %vreg21<kill>, 0; mem:LD4[%arrayidx2] CPURegs:%vreg24,%vreg21
	%vreg25<def> = MUL32 %vreg24<kill>, %vreg23<kill>; CPURegs:%vreg25,%vreg24,%vreg23
	%vreg26<def> = LD <fi#2>, 0; mem:LD4[%sum] CPURegs:%vreg26
	%vreg27<def> = ADDu %vreg26<kill>, %vreg25<kill>; CPURegs:%vreg27,%vreg26,%vreg25
	ST %vreg27<kill>, <fi#2>, 0; mem:ST4[%sum] CPURegs:%vreg27
	%vreg28<def> = LD <fi#1>, 0; mem:LD4[%m] CPURegs:%vreg28
	%vreg29<def> = ADDiu %vreg28<kill>, 1; CPURegs:%vreg29,%vreg28
	ST %vreg29<kill>, <fi#1>, 0; mem:ST4[%m] CPURegs:%vreg29
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#3: derived from LLVM BB %while.end
    Predecessors according to CFG: BB#1
	%vreg6<def> = LD <fi#2>, 0; mem:LD4[%sum] CPURegs:%vreg6
	%V0<def> = COPY %vreg6; CPURegs:%vreg6
	RetLR %V0<imp-use>

# End machine code for function main.

