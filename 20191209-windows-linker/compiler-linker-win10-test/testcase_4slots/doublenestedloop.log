
#####==========stderr_mid==========#####:
'' is not a recognized processor for this target (ignoring processor)

#####==========stderr_asm==========#####:
# Machine code for function add: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 0; CPURegs:%vreg0
	ST %vreg0<kill>, <fi#0>, 0; mem:ST4[%i] CPURegs:%vreg0
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#5
	%vreg1<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg1
	%vreg2<def> = LTI %vreg1<kill>, 256; CPURegs:%vreg2,%vreg1
	JNC %vreg2<kill>, <BB#6>; CPURegs:%vreg2
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#6(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	%vreg6<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg6
	ST %vreg6<kill>, <fi#1>, 0; mem:ST4[%j] CPURegs:%vreg6
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.cond1
    Predecessors according to CFG: BB#2 BB#4
	%vreg7<def> = LD <fi#1>, 0; mem:LD4[%j] CPURegs:%vreg7
	%vreg8<def> = LTI %vreg7<kill>, 256; CPURegs:%vreg8,%vreg7
	JNC %vreg8<kill>, <BB#5>; CPURegs:%vreg8
	Jmp <BB#4>
    Successors according to CFG: BB#4(124) BB#5(4)

BB#4: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#3
	%vreg11<def> = MovGR %ZERO, 2; CPURegs:%vreg11
	%vreg12<def> = LD <fi#1>, 0; mem:LD4[%j] CPURegs:%vreg12
	%vreg13<def> = SHL %vreg12<kill>, %vreg11<kill>; CPURegs:%vreg13,%vreg12,%vreg11
	%vreg14<def> = MovGR %ZERO, 10; CPURegs:%vreg14
	%vreg15<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg15
	%vreg16<def> = SHL %vreg15<kill>, %vreg14<kill>; CPURegs:%vreg16,%vreg15,%vreg14
	%vreg17<def> = MovIGH %ZERO, <ga:@a>[TF=3]; CPURegs:%vreg17
	%vreg18<def,tied1> = MovIGL %vreg17<tied0>, <ga:@a>[TF=4]; CPURegs:%vreg18,%vreg17
	%vreg19<def> = ADDu %vreg18<kill>, %vreg16<kill>; CPURegs:%vreg19,%vreg18,%vreg16
	%vreg20<def> = ADDu %vreg19<kill>, %vreg13<kill>; CPURegs:%vreg20,%vreg19,%vreg13
	%vreg21<def> = LD %vreg20<kill>, 0; mem:LD4[%arrayidx4] CPURegs:%vreg21,%vreg20
	%vreg22<def> = MovIGH %ZERO, <ga:@sum>[TF=3]; CPURegs:%vreg22
	%vreg23<def,tied1> = MovIGL %vreg22<tied0>, <ga:@sum>[TF=4]; CPURegs:%vreg23,%vreg22
	%vreg24<def> = LD %vreg23, 0; mem:LD4[@sum] CPURegs:%vreg24,%vreg23
	%vreg25<def> = ADDu %vreg24<kill>, %vreg21<kill>; CPURegs:%vreg25,%vreg24,%vreg21
	ST %vreg25<kill>, %vreg23, 0; mem:ST4[@sum] CPURegs:%vreg25,%vreg23
	%vreg26<def> = LD <fi#1>, 0; mem:LD4[%j] CPURegs:%vreg26
	%vreg27<def> = ADDiu %vreg26<kill>, 1; CPURegs:%vreg27,%vreg26
	ST %vreg27<kill>, <fi#1>, 0; mem:ST4[%j] CPURegs:%vreg27
	Jmp <BB#3>
    Successors according to CFG: BB#3

BB#5: derived from LLVM BB %for.inc5
    Predecessors according to CFG: BB#3
	%vreg9<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg9
	%vreg10<def> = ADDiu %vreg9<kill>, 2; CPURegs:%vreg10,%vreg9
	ST %vreg10<kill>, <fi#0>, 0; mem:ST4[%i] CPURegs:%vreg10
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#6: derived from LLVM BB %for.end7
    Predecessors according to CFG: BB#1
	%vreg3<def> = MovIGH %ZERO, <ga:@sum>[TF=3]; CPURegs:%vreg3
	%vreg4<def,tied1> = MovIGL %vreg3<tied0>, <ga:@sum>[TF=4]; CPURegs:%vreg4,%vreg3
	%vreg5<def> = LD %vreg4<kill>, 0; mem:LD4[@sum] CPURegs:%vreg5,%vreg4
	%V0<def> = COPY %vreg5; CPURegs:%vreg5
	RetLR %V0<imp-use>

# End machine code for function add.


#####==========stderr_obj==========#####:
# Machine code for function add: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 0; CPURegs:%vreg0
	ST %vreg0<kill>, <fi#0>, 0; mem:ST4[%i] CPURegs:%vreg0
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#5
	%vreg1<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg1
	%vreg2<def> = LTI %vreg1<kill>, 256; CPURegs:%vreg2,%vreg1
	JNC %vreg2<kill>, <BB#6>; CPURegs:%vreg2
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#6(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	%vreg6<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg6
	ST %vreg6<kill>, <fi#1>, 0; mem:ST4[%j] CPURegs:%vreg6
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.cond1
    Predecessors according to CFG: BB#2 BB#4
	%vreg7<def> = LD <fi#1>, 0; mem:LD4[%j] CPURegs:%vreg7
	%vreg8<def> = LTI %vreg7<kill>, 256; CPURegs:%vreg8,%vreg7
	JNC %vreg8<kill>, <BB#5>; CPURegs:%vreg8
	Jmp <BB#4>
    Successors according to CFG: BB#4(124) BB#5(4)

BB#4: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#3
	%vreg11<def> = MovGR %ZERO, 2; CPURegs:%vreg11
	%vreg12<def> = LD <fi#1>, 0; mem:LD4[%j] CPURegs:%vreg12
	%vreg13<def> = SHL %vreg12<kill>, %vreg11<kill>; CPURegs:%vreg13,%vreg12,%vreg11
	%vreg14<def> = MovGR %ZERO, 10; CPURegs:%vreg14
	%vreg15<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg15
	%vreg16<def> = SHL %vreg15<kill>, %vreg14<kill>; CPURegs:%vreg16,%vreg15,%vreg14
	%vreg17<def> = MovIGH %ZERO, <ga:@a>[TF=3]; CPURegs:%vreg17
	%vreg18<def,tied1> = MovIGL %vreg17<tied0>, <ga:@a>[TF=4]; CPURegs:%vreg18,%vreg17
	%vreg19<def> = ADDu %vreg18<kill>, %vreg16<kill>; CPURegs:%vreg19,%vreg18,%vreg16
	%vreg20<def> = ADDu %vreg19<kill>, %vreg13<kill>; CPURegs:%vreg20,%vreg19,%vreg13
	%vreg21<def> = LD %vreg20<kill>, 0; mem:LD4[%arrayidx4] CPURegs:%vreg21,%vreg20
	%vreg22<def> = MovIGH %ZERO, <ga:@sum>[TF=3]; CPURegs:%vreg22
	%vreg23<def,tied1> = MovIGL %vreg22<tied0>, <ga:@sum>[TF=4]; CPURegs:%vreg23,%vreg22
	%vreg24<def> = LD %vreg23, 0; mem:LD4[@sum] CPURegs:%vreg24,%vreg23
	%vreg25<def> = ADDu %vreg24<kill>, %vreg21<kill>; CPURegs:%vreg25,%vreg24,%vreg21
	ST %vreg25<kill>, %vreg23, 0; mem:ST4[@sum] CPURegs:%vreg25,%vreg23
	%vreg26<def> = LD <fi#1>, 0; mem:LD4[%j] CPURegs:%vreg26
	%vreg27<def> = ADDiu %vreg26<kill>, 1; CPURegs:%vreg27,%vreg26
	ST %vreg27<kill>, <fi#1>, 0; mem:ST4[%j] CPURegs:%vreg27
	Jmp <BB#3>
    Successors according to CFG: BB#3

BB#5: derived from LLVM BB %for.inc5
    Predecessors according to CFG: BB#3
	%vreg9<def> = LD <fi#0>, 0; mem:LD4[%i] CPURegs:%vreg9
	%vreg10<def> = ADDiu %vreg9<kill>, 2; CPURegs:%vreg10,%vreg9
	ST %vreg10<kill>, <fi#0>, 0; mem:ST4[%i] CPURegs:%vreg10
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#6: derived from LLVM BB %for.end7
    Predecessors according to CFG: BB#1
	%vreg3<def> = MovIGH %ZERO, <ga:@sum>[TF=3]; CPURegs:%vreg3
	%vreg4<def,tied1> = MovIGL %vreg3<tied0>, <ga:@sum>[TF=4]; CPURegs:%vreg4,%vreg3
	%vreg5<def> = LD %vreg4<kill>, 0; mem:LD4[@sum] CPURegs:%vreg5,%vreg4
	%V0<def> = COPY %vreg5; CPURegs:%vreg5
	RetLR %V0<imp-use>

# End machine code for function add.

