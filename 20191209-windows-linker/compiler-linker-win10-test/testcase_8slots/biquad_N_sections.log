
#####==========stderr_mid==========#####:
clang version 3.5.0 (tags/RELEASE_350/final)
Target: dsp
Thread model: posix
 "D:\ppp\lee_han-dsp_compiler-master\dsp_compiler_old\build-x64\Debug\bin\clang.exe" -cc1 -triple dsp -emit-llvm -disable-free -main-file-name biquad_N_sections.c -mrelocation-model static -mdisable-fp-elim -fmath-errno -no-integrated-as -mconstructor-aliases -v -dwarf-column-info -coverage-file "D:\\ppp\\Linker PPP\\20191209-windows-linker\\compiler-linker-win10-test\\./testcase_8slots/biquad_N_sections.ll" -resource-dir "D:\\ppp\\lee_han-dsp_compiler-master\\dsp_compiler_old\\build-x64\\Debug\\bin\\..\\lib\\clang\\3.5.0" -I ./include -O1 -fno-dwarf-directory-asm -fdebug-compilation-dir "D:\\ppp\\Linker PPP\\20191209-windows-linker\\compiler-linker-win10-test" -ferror-limit 19 -fmessage-length 0 -mstackrealign -fobjc-runtime=gcc -fdiagnostics-show-option -o ./testcase_8slots/biquad_N_sections.ll -x c ./testcase_8slots/biquad_N_sections.c
clang -cc1 version 3.5.0 based upon LLVM 3.5.0svn default target x86_64-pc-windows-msvc
ignoring nonexistent directory "/usr/local/include"
ignoring nonexistent directory "/usr/include"
#include "..." search starts here:
#include <...> search starts here:
 ./include
 D:\ppp\lee_han-dsp_compiler-master\dsp_compiler_old\build-x64\Debug\bin\..\lib\clang\3.5.0\include
End of search list.
'' is not a recognized processor for this target (ignoring processor)

#####==========stderr_asm==========#####:
# Machine code for function pin_down: SSA
Frame Objects:
  fi#-1: size=4, align=8, fixed, at location [SP+8]
Function Live Ins: %A1 in %vreg3

BB#0: derived from LLVM BB %entry
    Live Ins: %A1
	%vreg3<def> = COPY %A1; CPURegs:%vreg3
	%vreg4<def> = COPY %vreg3; CPURegs:%vreg4,%vreg3
	%vreg6<def> = MovGR %ZERO, 0; CPURegs:%vreg6
	%vreg5<def> = LD <fi#-1>, 0; mem:LD4[FixedStack-1](align=8) CPURegs:%vreg5
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#0 BB#1
	%vreg0<def> = PHI %vreg6, <BB#0>, %vreg1, <BB#1>; CPURegs:%vreg0,%vreg6,%vreg1
	%vreg7<def> = MovGR %ZERO, 2; CPURegs:%vreg7
	%vreg8<def> = SHL %vreg0, %vreg7<kill>; CPURegs:%vreg8,%vreg0,%vreg7
	%vreg9<def> = ADDu %vreg4, %vreg8<kill>; CPURegs:%vreg9,%vreg4,%vreg8
	%vreg10<def> = MovGR %ZERO, 7; CPURegs:%vreg10
	ST %vreg10<kill>, %vreg9<kill>, 0; mem:ST4[%arrayidx](tbaa=<badref>) CPURegs:%vreg10,%vreg9
	%vreg1<def> = ADDiu %vreg0, 1; CPURegs:%vreg1,%vreg0
	%vreg11<def> = NEQI %vreg1, 20; CPURegs:%vreg11,%vreg1
	JC %vreg11<kill>, <BB#1>; CPURegs:%vreg11
	Jmp <BB#2>
    Successors according to CFG: BB#2(4) BB#1(124)

BB#2: derived from LLVM BB %for.end7
    Predecessors according to CFG: BB#1
	%vreg12<def> = MovGR %ZERO, 0; CPURegs:%vreg12
	ST %vreg12, %vreg5, 28; mem:ST4[%wi15+28] CPURegs:%vreg12,%vreg5
	ST %vreg12, %vreg5, 24; mem:ST4[%wi15+24] CPURegs:%vreg12,%vreg5
	ST %vreg12, %vreg5, 20; mem:ST4[%wi15+20] CPURegs:%vreg12,%vreg5
	ST %vreg12, %vreg5, 16; mem:ST4[%wi15+16] CPURegs:%vreg12,%vreg5
	ST %vreg12, %vreg5, 12; mem:ST4[%wi15+12] CPURegs:%vreg12,%vreg5
	ST %vreg12, %vreg5, 8; mem:ST4[%wi15+8] CPURegs:%vreg12,%vreg5
	ST %vreg12, %vreg5, 4; mem:ST4[%wi15+4] CPURegs:%vreg12,%vreg5
	ST %vreg12, %vreg5, 0; mem:ST4[%wi15] CPURegs:%vreg12,%vreg5
	%vreg13<def> = MovGR %ZERO, 1; CPURegs:%vreg13
	%V0<def> = COPY %vreg13; CPURegs:%vreg13
	RetLR %V0<imp-use>

# End machine code for function pin_down.

# Machine code for function main: SSA
Frame Objects:
  fi#0: size=32, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	ADJCALLSTACKDOWN 16, %SP<imp-def,dead>, %SP<imp-use>
	%vreg15<def> = COPY %SP; CPURegs:%vreg15
	%vreg0<def> = LEA <fi#0>, 0; CPURegs:%vreg0
	ST %vreg0, %vreg15, 8; mem:ST4[<unknown>] CPURegs:%vreg0,%vreg15
	%vreg16<def> = MovIGH %ZERO, <ga:@main.coefficients>[TF=3]; CPURegs:%vreg16
	%vreg12<def,tied1> = MovIGL %vreg16<tied0>, <ga:@main.coefficients>[TF=4]; CPURegs:%vreg12,%vreg16
	%vreg17<def> = IMPLICIT_DEF; CPURegs:%vreg17
	%A0<def> = COPY %vreg17; CPURegs:%vreg17
	%A1<def> = COPY %vreg12; CPURegs:%vreg12
	CALL <ga:@pin_down>, %A0, %A1, <regmask>, %SP<imp-def>, %V0<imp-def>
	ADJCALLSTACKUP 16, 0, %SP<imp-def,dead>, %SP<imp-use>
	%vreg18<def> = COPY %V0; CPURegs:%vreg18
	%vreg14<def> = MovGR %ZERO, 1; CPURegs:%vreg14
	%vreg13<def> = MovGR %ZERO, 0; CPURegs:%vreg13
	%vreg1<def> = ADDiu %vreg0, 4; CPURegs:%vreg1,%vreg0
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#0 BB#1
	%vreg2<def> = PHI %vreg1, <BB#0>, %vreg9, <BB#1>; CPURegs:%vreg2,%vreg1,%vreg9
	%vreg3<def> = PHI %vreg0, <BB#0>, %vreg10, <BB#1>; CPURegs:%vreg3,%vreg0,%vreg10
	%vreg4<def> = PHI %vreg12, <BB#0>, %vreg7, <BB#1>; CPURegs:%vreg4,%vreg12,%vreg7
	%vreg5<def> = PHI %vreg13, <BB#0>, %vreg11, <BB#1>; CPURegs:%vreg5,%vreg13,%vreg11
	%vreg6<def> = PHI %vreg14, <BB#0>, %vreg8, <BB#1>; CPURegs:%vreg6,%vreg14,%vreg8
	%vreg19<def> = LD %vreg4, 0; mem:LD4[%ptr_coeff.034](tbaa=<badref>) CPURegs:%vreg19,%vreg4
	%vreg20<def> = LD %vreg3, 0; mem:LD4[%ptr_wi1.035](tbaa=<badref>) CPURegs:%vreg20,%vreg3
	%vreg21<def> = MUL32 %vreg20, %vreg19<kill>; CPURegs:%vreg21,%vreg20,%vreg19
	%vreg22<def> = SUBu %vreg6, %vreg21<kill>; CPURegs:%vreg22,%vreg6,%vreg21
	%vreg23<def> = LD %vreg4, 4; mem:LD4[%incdec.ptr](tbaa=<badref>) CPURegs:%vreg23,%vreg4
	%vreg24<def> = LD %vreg2, 0; mem:LD4[%ptr_wi2.036](tbaa=<badref>) CPURegs:%vreg24,%vreg2
	%vreg25<def> = MUL32 %vreg24, %vreg23<kill>; CPURegs:%vreg25,%vreg24,%vreg23
	%vreg26<def> = SUBu %vreg22<kill>, %vreg25<kill>; CPURegs:%vreg26,%vreg22,%vreg25
	%vreg27<def> = LD %vreg4, 16; mem:LD4[%incdec.ptr7](tbaa=<badref>) CPURegs:%vreg27,%vreg4
	%vreg28<def> = LD %vreg4, 8; mem:LD4[%incdec.ptr2](tbaa=<badref>) CPURegs:%vreg28,%vreg4
	%vreg29<def> = LD %vreg4, 12; mem:LD4[%incdec.ptr5](tbaa=<badref>) CPURegs:%vreg29,%vreg4
	ST %vreg20, %vreg2, 0; mem:ST4[%ptr_wi2.036](tbaa=<badref>) CPURegs:%vreg20,%vreg2
	%vreg30<def> = MUL32 %vreg29<kill>, %vreg20; CPURegs:%vreg30,%vreg29,%vreg20
	%vreg31<def> = MUL32 %vreg26, %vreg28<kill>; CPURegs:%vreg31,%vreg26,%vreg28
	%vreg32<def> = ADDu %vreg31<kill>, %vreg30<kill>; CPURegs:%vreg32,%vreg31,%vreg30
	%vreg33<def> = MUL32 %vreg27<kill>, %vreg24; CPURegs:%vreg33,%vreg27,%vreg24
	ST %vreg26, %vreg3, 0; mem:ST4[%ptr_wi1.035](tbaa=<badref>) CPURegs:%vreg26,%vreg3
	%vreg8<def> = ADDu %vreg32<kill>, %vreg33<kill>; CPURegs:%vreg8,%vreg32,%vreg33
	%vreg10<def> = ADDiu %vreg3, 8; CPURegs:%vreg10,%vreg3
	%vreg9<def> = ADDiu %vreg2, 8; CPURegs:%vreg9,%vreg2
	%vreg7<def> = ADDiu %vreg4, 20; CPURegs:%vreg7,%vreg4
	%vreg11<def> = ADDiu %vreg5, 1; CPURegs:%vreg11,%vreg5
	%vreg34<def> = NEQI %vreg11, 4; CPURegs:%vreg34,%vreg11
	JC %vreg34<kill>, <BB#1>; CPURegs:%vreg34
	Jmp <BB#2>
    Successors according to CFG: BB#2(4) BB#1(124)

BB#2: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#1
	ADJCALLSTACKDOWN 16, %SP<imp-def,dead>, %SP<imp-use>
	%vreg35<def> = COPY %SP; CPURegs:%vreg35
	ST %vreg0, %vreg35, 8; mem:ST4[<unknown>] CPURegs:%vreg0,%vreg35
	%vreg36<def> = MovIGH %ZERO, <ga:@main.coefficients>[TF=3]; CPURegs:%vreg36
	%vreg37<def,tied1> = MovIGL %vreg36<tied0>, <ga:@main.coefficients>[TF=4]; CPURegs:%vreg37,%vreg36
	%vreg38<def> = IMPLICIT_DEF; CPURegs:%vreg38
	%A0<def> = COPY %vreg38; CPURegs:%vreg38
	%A1<def> = COPY %vreg37; CPURegs:%vreg37
	CALL <ga:@pin_down>, %A0, %A1, <regmask>, %SP<imp-def>, %V0<imp-def>
	ADJCALLSTACKUP 16, 0, %SP<imp-def,dead>, %SP<imp-use>
	%vreg39<def> = COPY %V0; CPURegs:%vreg39
	%V0<def> = COPY %vreg8; CPURegs:%vreg8
	RetLR %V0<imp-use>

# End machine code for function main.


#####==========stderr_obj==========#####:
# Machine code for function pin_down: SSA
Frame Objects:
  fi#-1: size=4, align=8, fixed, at location [SP+8]
Function Live Ins: %A1 in %vreg3

BB#0: derived from LLVM BB %entry
    Live Ins: %A1
	%vreg3<def> = COPY %A1; CPURegs:%vreg3
	%vreg4<def> = COPY %vreg3; CPURegs:%vreg4,%vreg3
	%vreg6<def> = MovGR %ZERO, 0; CPURegs:%vreg6
	%vreg5<def> = LD <fi#-1>, 0; mem:LD4[FixedStack-1](align=8) CPURegs:%vreg5
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#0 BB#1
	%vreg0<def> = PHI %vreg6, <BB#0>, %vreg1, <BB#1>; CPURegs:%vreg0,%vreg6,%vreg1
	%vreg7<def> = MovGR %ZERO, 2; CPURegs:%vreg7
	%vreg8<def> = SHL %vreg0, %vreg7<kill>; CPURegs:%vreg8,%vreg0,%vreg7
	%vreg9<def> = ADDu %vreg4, %vreg8<kill>; CPURegs:%vreg9,%vreg4,%vreg8
	%vreg10<def> = MovGR %ZERO, 7; CPURegs:%vreg10
	ST %vreg10<kill>, %vreg9<kill>, 0; mem:ST4[%arrayidx](tbaa=<badref>) CPURegs:%vreg10,%vreg9
	%vreg1<def> = ADDiu %vreg0, 1; CPURegs:%vreg1,%vreg0
	%vreg11<def> = NEQI %vreg1, 20; CPURegs:%vreg11,%vreg1
	JC %vreg11<kill>, <BB#1>; CPURegs:%vreg11
	Jmp <BB#2>
    Successors according to CFG: BB#2(4) BB#1(124)

BB#2: derived from LLVM BB %for.end7
    Predecessors according to CFG: BB#1
	%vreg12<def> = MovGR %ZERO, 0; CPURegs:%vreg12
	ST %vreg12, %vreg5, 28; mem:ST4[%wi15+28] CPURegs:%vreg12,%vreg5
	ST %vreg12, %vreg5, 24; mem:ST4[%wi15+24] CPURegs:%vreg12,%vreg5
	ST %vreg12, %vreg5, 20; mem:ST4[%wi15+20] CPURegs:%vreg12,%vreg5
	ST %vreg12, %vreg5, 16; mem:ST4[%wi15+16] CPURegs:%vreg12,%vreg5
	ST %vreg12, %vreg5, 12; mem:ST4[%wi15+12] CPURegs:%vreg12,%vreg5
	ST %vreg12, %vreg5, 8; mem:ST4[%wi15+8] CPURegs:%vreg12,%vreg5
	ST %vreg12, %vreg5, 4; mem:ST4[%wi15+4] CPURegs:%vreg12,%vreg5
	ST %vreg12, %vreg5, 0; mem:ST4[%wi15] CPURegs:%vreg12,%vreg5
	%vreg13<def> = MovGR %ZERO, 1; CPURegs:%vreg13
	%V0<def> = COPY %vreg13; CPURegs:%vreg13
	RetLR %V0<imp-use>

# End machine code for function pin_down.

# Machine code for function main: SSA
Frame Objects:
  fi#0: size=32, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	ADJCALLSTACKDOWN 16, %SP<imp-def,dead>, %SP<imp-use>
	%vreg15<def> = COPY %SP; CPURegs:%vreg15
	%vreg0<def> = LEA <fi#0>, 0; CPURegs:%vreg0
	ST %vreg0, %vreg15, 8; mem:ST4[<unknown>] CPURegs:%vreg0,%vreg15
	%vreg16<def> = MovIGH %ZERO, <ga:@main.coefficients>[TF=3]; CPURegs:%vreg16
	%vreg12<def,tied1> = MovIGL %vreg16<tied0>, <ga:@main.coefficients>[TF=4]; CPURegs:%vreg12,%vreg16
	%vreg17<def> = IMPLICIT_DEF; CPURegs:%vreg17
	%A0<def> = COPY %vreg17; CPURegs:%vreg17
	%A1<def> = COPY %vreg12; CPURegs:%vreg12
	CALL <ga:@pin_down>, %A0, %A1, <regmask>, %SP<imp-def>, %V0<imp-def>
	ADJCALLSTACKUP 16, 0, %SP<imp-def,dead>, %SP<imp-use>
	%vreg18<def> = COPY %V0; CPURegs:%vreg18
	%vreg14<def> = MovGR %ZERO, 1; CPURegs:%vreg14
	%vreg13<def> = MovGR %ZERO, 0; CPURegs:%vreg13
	%vreg1<def> = ADDiu %vreg0, 4; CPURegs:%vreg1,%vreg0
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#0 BB#1
	%vreg2<def> = PHI %vreg1, <BB#0>, %vreg9, <BB#1>; CPURegs:%vreg2,%vreg1,%vreg9
	%vreg3<def> = PHI %vreg0, <BB#0>, %vreg10, <BB#1>; CPURegs:%vreg3,%vreg0,%vreg10
	%vreg4<def> = PHI %vreg12, <BB#0>, %vreg7, <BB#1>; CPURegs:%vreg4,%vreg12,%vreg7
	%vreg5<def> = PHI %vreg13, <BB#0>, %vreg11, <BB#1>; CPURegs:%vreg5,%vreg13,%vreg11
	%vreg6<def> = PHI %vreg14, <BB#0>, %vreg8, <BB#1>; CPURegs:%vreg6,%vreg14,%vreg8
	%vreg19<def> = LD %vreg4, 0; mem:LD4[%ptr_coeff.034](tbaa=<badref>) CPURegs:%vreg19,%vreg4
	%vreg20<def> = LD %vreg3, 0; mem:LD4[%ptr_wi1.035](tbaa=<badref>) CPURegs:%vreg20,%vreg3
	%vreg21<def> = MUL32 %vreg20, %vreg19<kill>; CPURegs:%vreg21,%vreg20,%vreg19
	%vreg22<def> = SUBu %vreg6, %vreg21<kill>; CPURegs:%vreg22,%vreg6,%vreg21
	%vreg23<def> = LD %vreg4, 4; mem:LD4[%incdec.ptr](tbaa=<badref>) CPURegs:%vreg23,%vreg4
	%vreg24<def> = LD %vreg2, 0; mem:LD4[%ptr_wi2.036](tbaa=<badref>) CPURegs:%vreg24,%vreg2
	%vreg25<def> = MUL32 %vreg24, %vreg23<kill>; CPURegs:%vreg25,%vreg24,%vreg23
	%vreg26<def> = SUBu %vreg22<kill>, %vreg25<kill>; CPURegs:%vreg26,%vreg22,%vreg25
	%vreg27<def> = LD %vreg4, 16; mem:LD4[%incdec.ptr7](tbaa=<badref>) CPURegs:%vreg27,%vreg4
	%vreg28<def> = LD %vreg4, 8; mem:LD4[%incdec.ptr2](tbaa=<badref>) CPURegs:%vreg28,%vreg4
	%vreg29<def> = LD %vreg4, 12; mem:LD4[%incdec.ptr5](tbaa=<badref>) CPURegs:%vreg29,%vreg4
	ST %vreg20, %vreg2, 0; mem:ST4[%ptr_wi2.036](tbaa=<badref>) CPURegs:%vreg20,%vreg2
	%vreg30<def> = MUL32 %vreg29<kill>, %vreg20; CPURegs:%vreg30,%vreg29,%vreg20
	%vreg31<def> = MUL32 %vreg26, %vreg28<kill>; CPURegs:%vreg31,%vreg26,%vreg28
	%vreg32<def> = ADDu %vreg31<kill>, %vreg30<kill>; CPURegs:%vreg32,%vreg31,%vreg30
	%vreg33<def> = MUL32 %vreg27<kill>, %vreg24; CPURegs:%vreg33,%vreg27,%vreg24
	ST %vreg26, %vreg3, 0; mem:ST4[%ptr_wi1.035](tbaa=<badref>) CPURegs:%vreg26,%vreg3
	%vreg8<def> = ADDu %vreg32<kill>, %vreg33<kill>; CPURegs:%vreg8,%vreg32,%vreg33
	%vreg10<def> = ADDiu %vreg3, 8; CPURegs:%vreg10,%vreg3
	%vreg9<def> = ADDiu %vreg2, 8; CPURegs:%vreg9,%vreg2
	%vreg7<def> = ADDiu %vreg4, 20; CPURegs:%vreg7,%vreg4
	%vreg11<def> = ADDiu %vreg5, 1; CPURegs:%vreg11,%vreg5
	%vreg34<def> = NEQI %vreg11, 4; CPURegs:%vreg34,%vreg11
	JC %vreg34<kill>, <BB#1>; CPURegs:%vreg34
	Jmp <BB#2>
    Successors according to CFG: BB#2(4) BB#1(124)

BB#2: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#1
	ADJCALLSTACKDOWN 16, %SP<imp-def,dead>, %SP<imp-use>
	%vreg35<def> = COPY %SP; CPURegs:%vreg35
	ST %vreg0, %vreg35, 8; mem:ST4[<unknown>] CPURegs:%vreg0,%vreg35
	%vreg36<def> = MovIGH %ZERO, <ga:@main.coefficients>[TF=3]; CPURegs:%vreg36
	%vreg37<def,tied1> = MovIGL %vreg36<tied0>, <ga:@main.coefficients>[TF=4]; CPURegs:%vreg37,%vreg36
	%vreg38<def> = IMPLICIT_DEF; CPURegs:%vreg38
	%A0<def> = COPY %vreg38; CPURegs:%vreg38
	%A1<def> = COPY %vreg37; CPURegs:%vreg37
	CALL <ga:@pin_down>, %A0, %A1, <regmask>, %SP<imp-def>, %V0<imp-def>
	ADJCALLSTACKUP 16, 0, %SP<imp-def,dead>, %SP<imp-use>
	%vreg39<def> = COPY %V0; CPURegs:%vreg39
	%V0<def> = COPY %vreg8; CPURegs:%vreg8
	RetLR %V0<imp-use>

# End machine code for function main.

