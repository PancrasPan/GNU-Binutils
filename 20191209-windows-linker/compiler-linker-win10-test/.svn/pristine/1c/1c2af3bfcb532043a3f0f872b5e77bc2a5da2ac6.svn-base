
#####==========stderr_mid==========#####:
'' is not a recognized processor for this target (ignoring processor)

#####==========stderr_asm==========#####:
# Machine code for function part: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
Function Live Ins: %A0 in %vreg2, %A1 in %vreg3

BB#0: derived from LLVM BB %entry
    Live Ins: %A0 %A1
	%vreg3<def> = COPY %A1; CPURegs:%vreg3
	%vreg2<def> = COPY %A0; CPURegs:%vreg2
	ST %vreg2, <fi#0>, 0; mem:ST4[%beg.addr] CPURegs:%vreg2
	ST %vreg3, <fi#1>, 0; mem:ST4[%end.addr] CPURegs:%vreg3
	%vreg4<def> = LD <fi#0>, 0; mem:LD4[%beg.addr] CPURegs:%vreg4
	ST %vreg4<kill>, <fi#2>, 0; mem:ST4[%i] CPURegs:%vreg4
	%vreg5<def> = LD <fi#1>, 0; mem:LD4[%end.addr] CPURegs:%vreg5
	ST %vreg5<kill>, <fi#3>, 0; mem:ST4[%j] CPURegs:%vreg5
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %while.cond
    Predecessors according to CFG: BB#0 BB#4
	%vreg7<def> = LD <fi#3>, 0; mem:LD4[%j] CPURegs:%vreg7
	%vreg8<def> = LD <fi#2>, 0; mem:LD4[%i] CPURegs:%vreg8
	%vreg9<def> = GE %vreg8<kill>, %vreg7<kill>; CPURegs:%vreg9,%vreg8,%vreg7
	JNC %vreg9, <BB#2>; CPURegs:%vreg9
    Successors according to CFG: BB#2(16) BB#6(16)

BB#6: 
    Predecessors according to CFG: BB#1
	%vreg6<def> = MovGR %ZERO, 0; CPURegs:%vreg6
	Jmp <BB#3>
    Successors according to CFG: BB#3

BB#7: 
    Predecessors according to CFG: BB#2
	%vreg28<def> = MovGR %ZERO, 1; CPURegs:%vreg28
	Jmp <BB#3>
    Successors according to CFG: BB#3

BB#2: derived from LLVM BB %land.rhs
    Predecessors according to CFG: BB#1
	%vreg10<def> = MovGR %ZERO, 2; CPURegs:%vreg10
	%vreg11<def> = LD <fi#0>, 0; mem:LD4[%beg.addr] CPURegs:%vreg11
	%vreg12<def> = SHL %vreg11<kill>, %vreg10; CPURegs:%vreg12,%vreg11,%vreg10
	%vreg13<def> = LD <fi#3>, 0; mem:LD4[%j] CPURegs:%vreg13
	%vreg14<def> = SHL %vreg13<kill>, %vreg10; CPURegs:%vreg14,%vreg13,%vreg10
	%vreg15<def> = MovIGH %ZERO, <ga:@array>[TF=3]; CPURegs:%vreg15
	%vreg16<def,tied1> = MovIGL %vreg15<tied0>, <ga:@array>[TF=4]; CPURegs:%vreg16,%vreg15
	%vreg17<def> = ADDu %vreg16, %vreg14<kill>; CPURegs:%vreg17,%vreg16,%vreg14
	%vreg18<def> = ADDu %vreg16, %vreg12<kill>; CPURegs:%vreg18,%vreg16,%vreg12
	%vreg19<def> = LD %vreg18<kill>, 0; mem:LD4[%arrayidx1] CPURegs:%vreg19,%vreg18
	%vreg20<def> = LD %vreg17<kill>, 0; mem:LD4[%arrayidx] CPURegs:%vreg20,%vreg17
	%vreg0<def> = GT %vreg20<kill>, %vreg19<kill>; CPURegs:%vreg0,%vreg20,%vreg19
	%vreg27<def> = MovGR %ZERO, 0; CPURegs:%vreg27
	JNC %vreg20<kill>, <BB#3>; CPURegs:%vreg20
	Jmp <BB#7>
    Successors according to CFG: BB#3 BB#7

BB#3: derived from LLVM BB %land.end
    Predecessors according to CFG: BB#2 BB#6 BB#7
	%vreg1<def> = PHI %vreg6, <BB#6>, %vreg27, <BB#2>, %vreg28, <BB#7>; CPURegs:%vreg1,%vreg6,%vreg27,%vreg28
	%vreg21<def> = EQI %vreg1, 0; CPURegs:%vreg21,%vreg1
	JC %vreg21<kill>, <BB#5>; CPURegs:%vreg21
	Jmp <BB#4>
    Successors according to CFG: BB#4(124) BB#5(4)

BB#4: derived from LLVM BB %while.body
    Predecessors according to CFG: BB#3
	%vreg25<def> = LD <fi#3>, 0; mem:LD4[%j] CPURegs:%vreg25
	%vreg26<def> = ADDiu %vreg25<kill>, -1; CPURegs:%vreg26,%vreg25
	ST %vreg26<kill>, <fi#3>, 0; mem:ST4[%j] CPURegs:%vreg26
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#5: derived from LLVM BB %while.end
    Predecessors according to CFG: BB#3
	%vreg22<def> = LD <fi#2>, 0; mem:LD4[%i] CPURegs:%vreg22
	%vreg23<def> = LD <fi#3>, 0; mem:LD4[%j] CPURegs:%vreg23
	%vreg24<def> = SUBu %vreg23<kill>, %vreg22<kill>; CPURegs:%vreg24,%vreg23,%vreg22
	%V0<def> = COPY %vreg24; CPURegs:%vreg24
	RetLR %V0<imp-use>

# End machine code for function part.


#####==========stderr_obj==========#####:
# Machine code for function part: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
Function Live Ins: %A0 in %vreg2, %A1 in %vreg3

BB#0: derived from LLVM BB %entry
    Live Ins: %A0 %A1
	%vreg3<def> = COPY %A1; CPURegs:%vreg3
	%vreg2<def> = COPY %A0; CPURegs:%vreg2
	ST %vreg2, <fi#0>, 0; mem:ST4[%beg.addr] CPURegs:%vreg2
	ST %vreg3, <fi#1>, 0; mem:ST4[%end.addr] CPURegs:%vreg3
	%vreg4<def> = LD <fi#0>, 0; mem:LD4[%beg.addr] CPURegs:%vreg4
	ST %vreg4<kill>, <fi#2>, 0; mem:ST4[%i] CPURegs:%vreg4
	%vreg5<def> = LD <fi#1>, 0; mem:LD4[%end.addr] CPURegs:%vreg5
	ST %vreg5<kill>, <fi#3>, 0; mem:ST4[%j] CPURegs:%vreg5
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %while.cond
    Predecessors according to CFG: BB#0 BB#4
	%vreg7<def> = LD <fi#3>, 0; mem:LD4[%j] CPURegs:%vreg7
	%vreg8<def> = LD <fi#2>, 0; mem:LD4[%i] CPURegs:%vreg8
	%vreg9<def> = GE %vreg8<kill>, %vreg7<kill>; CPURegs:%vreg9,%vreg8,%vreg7
	JNC %vreg9, <BB#2>; CPURegs:%vreg9
    Successors according to CFG: BB#2(16) BB#6(16)

BB#6: 
    Predecessors according to CFG: BB#1
	%vreg6<def> = MovGR %ZERO, 0; CPURegs:%vreg6
	Jmp <BB#3>
    Successors according to CFG: BB#3

BB#7: 
    Predecessors according to CFG: BB#2
	%vreg28<def> = MovGR %ZERO, 1; CPURegs:%vreg28
	Jmp <BB#3>
    Successors according to CFG: BB#3

BB#2: derived from LLVM BB %land.rhs
    Predecessors according to CFG: BB#1
	%vreg10<def> = MovGR %ZERO, 2; CPURegs:%vreg10
	%vreg11<def> = LD <fi#0>, 0; mem:LD4[%beg.addr] CPURegs:%vreg11
	%vreg12<def> = SHL %vreg11<kill>, %vreg10; CPURegs:%vreg12,%vreg11,%vreg10
	%vreg13<def> = LD <fi#3>, 0; mem:LD4[%j] CPURegs:%vreg13
	%vreg14<def> = SHL %vreg13<kill>, %vreg10; CPURegs:%vreg14,%vreg13,%vreg10
	%vreg15<def> = MovIGH %ZERO, <ga:@array>[TF=3]; CPURegs:%vreg15
	%vreg16<def,tied1> = MovIGL %vreg15<tied0>, <ga:@array>[TF=4]; CPURegs:%vreg16,%vreg15
	%vreg17<def> = ADDu %vreg16, %vreg14<kill>; CPURegs:%vreg17,%vreg16,%vreg14
	%vreg18<def> = ADDu %vreg16, %vreg12<kill>; CPURegs:%vreg18,%vreg16,%vreg12
	%vreg19<def> = LD %vreg18<kill>, 0; mem:LD4[%arrayidx1] CPURegs:%vreg19,%vreg18
	%vreg20<def> = LD %vreg17<kill>, 0; mem:LD4[%arrayidx] CPURegs:%vreg20,%vreg17
	%vreg0<def> = GT %vreg20<kill>, %vreg19<kill>; CPURegs:%vreg0,%vreg20,%vreg19
	%vreg27<def> = MovGR %ZERO, 0; CPURegs:%vreg27
	JNC %vreg20<kill>, <BB#3>; CPURegs:%vreg20
	Jmp <BB#7>
    Successors according to CFG: BB#3 BB#7

BB#3: derived from LLVM BB %land.end
    Predecessors according to CFG: BB#2 BB#6 BB#7
	%vreg1<def> = PHI %vreg6, <BB#6>, %vreg27, <BB#2>, %vreg28, <BB#7>; CPURegs:%vreg1,%vreg6,%vreg27,%vreg28
	%vreg21<def> = EQI %vreg1, 0; CPURegs:%vreg21,%vreg1
	JC %vreg21<kill>, <BB#5>; CPURegs:%vreg21
	Jmp <BB#4>
    Successors according to CFG: BB#4(124) BB#5(4)

BB#4: derived from LLVM BB %while.body
    Predecessors according to CFG: BB#3
	%vreg25<def> = LD <fi#3>, 0; mem:LD4[%j] CPURegs:%vreg25
	%vreg26<def> = ADDiu %vreg25<kill>, -1; CPURegs:%vreg26,%vreg25
	ST %vreg26<kill>, <fi#3>, 0; mem:ST4[%j] CPURegs:%vreg26
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#5: derived from LLVM BB %while.end
    Predecessors according to CFG: BB#3
	%vreg22<def> = LD <fi#2>, 0; mem:LD4[%i] CPURegs:%vreg22
	%vreg23<def> = LD <fi#3>, 0; mem:LD4[%j] CPURegs:%vreg23
	%vreg24<def> = SUBu %vreg23<kill>, %vreg22<kill>; CPURegs:%vreg24,%vreg23,%vreg22
	%V0<def> = COPY %vreg24; CPURegs:%vreg24
	RetLR %V0<imp-use>

# End machine code for function part.

