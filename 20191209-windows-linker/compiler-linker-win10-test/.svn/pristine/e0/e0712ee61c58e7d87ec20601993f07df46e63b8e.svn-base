
#####==========stderr_mid==========#####:
'' is not a recognized processor for this target (ignoring processor)

#####==========stderr_asm==========#####:
# Machine code for function main: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 0; CPURegs:%vreg0
	ST %vreg0, <fi#0>, 0; mem:ST4[%retval] CPURegs:%vreg0
	%vreg1<def> = MovGR %ZERO, 1; CPURegs:%vreg1
	ST %vreg1<kill>, <fi#1>, 0; mem:ST4[%a] CPURegs:%vreg1
	ST %vreg0, <fi#2>, 0; mem:ST4[%i] CPURegs:%vreg0
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#3
	%vreg2<def> = LD <fi#2>, 0; mem:LD4[%i] CPURegs:%vreg2
	%vreg3<def> = LTI %vreg2<kill>, 64; CPURegs:%vreg3,%vreg2
	JNC %vreg3<kill>, <BB#4>; CPURegs:%vreg3
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#4(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	%vreg5<def> = LD <fi#2>, 0; mem:LD4[%i] CPURegs:%vreg5
	%vreg6<def> = LD <fi#1>, 0; mem:LD4[%a] CPURegs:%vreg6
	%vreg7<def> = ADDu %vreg6<kill>, %vreg5<kill>; CPURegs:%vreg7,%vreg6,%vreg5
	ST %vreg7<kill>, <fi#1>, 0; mem:ST4[%a] CPURegs:%vreg7
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#2
	%vreg8<def> = LD <fi#2>, 0; mem:LD4[%i] CPURegs:%vreg8
	%vreg9<def> = ADDiu %vreg8<kill>, 1; CPURegs:%vreg9,%vreg8
	ST %vreg9<kill>, <fi#2>, 0; mem:ST4[%i] CPURegs:%vreg9
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#4: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#1
	%vreg4<def> = MovGR %ZERO, 0; CPURegs:%vreg4
	%V0<def> = COPY %vreg4; CPURegs:%vreg4
	RetLR %V0<imp-use>

# End machine code for function main.


#####==========stderr_obj==========#####:
# Machine code for function main: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 0; CPURegs:%vreg0
	ST %vreg0, <fi#0>, 0; mem:ST4[%retval] CPURegs:%vreg0
	%vreg1<def> = MovGR %ZERO, 1; CPURegs:%vreg1
	ST %vreg1<kill>, <fi#1>, 0; mem:ST4[%a] CPURegs:%vreg1
	ST %vreg0, <fi#2>, 0; mem:ST4[%i] CPURegs:%vreg0
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#3
	%vreg2<def> = LD <fi#2>, 0; mem:LD4[%i] CPURegs:%vreg2
	%vreg3<def> = LTI %vreg2<kill>, 64; CPURegs:%vreg3,%vreg2
	JNC %vreg3<kill>, <BB#4>; CPURegs:%vreg3
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#4(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	%vreg5<def> = LD <fi#2>, 0; mem:LD4[%i] CPURegs:%vreg5
	%vreg6<def> = LD <fi#1>, 0; mem:LD4[%a] CPURegs:%vreg6
	%vreg7<def> = ADDu %vreg6<kill>, %vreg5<kill>; CPURegs:%vreg7,%vreg6,%vreg5
	ST %vreg7<kill>, <fi#1>, 0; mem:ST4[%a] CPURegs:%vreg7
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#2
	%vreg8<def> = LD <fi#2>, 0; mem:LD4[%i] CPURegs:%vreg8
	%vreg9<def> = ADDiu %vreg8<kill>, 1; CPURegs:%vreg9,%vreg8
	ST %vreg9<kill>, <fi#2>, 0; mem:ST4[%i] CPURegs:%vreg9
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#4: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#1
	%vreg4<def> = MovGR %ZERO, 0; CPURegs:%vreg4
	%V0<def> = COPY %vreg4; CPURegs:%vreg4
	RetLR %V0<imp-use>

# End machine code for function main.

