
#####==========stderr_mid==========#####:
'' is not a recognized processor for this target (ignoring processor)

#####==========stderr_asm==========#####:
# Machine code for function max: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
Function Live Ins: %A0 in %vreg3, %A1 in %vreg4

BB#0: derived from LLVM BB %entry
    Live Ins: %A0 %A1
	%vreg4<def> = COPY %A1; CPURegs:%vreg4
	%vreg3<def> = COPY %A0; CPURegs:%vreg3
	ST %vreg3, <fi#0>, 0; mem:ST4[%a.addr] CPURegs:%vreg3
	ST %vreg4, <fi#1>, 0; mem:ST4[%b.addr] CPURegs:%vreg4
	%vreg5<def> = MovIGH %ZERO, <ga:@g2>[TF=3]; CPURegs:%vreg5
	%vreg6<def,tied1> = MovIGL %vreg5<tied0>, <ga:@g2>[TF=4]; CPURegs:%vreg6,%vreg5
	%vreg7<def> = LD %vreg6, 0; mem:LD4[@g2] CPURegs:%vreg7,%vreg6
	%vreg8<def> = ADDiu %vreg7<kill>, 1; CPURegs:%vreg8,%vreg7
	ST %vreg8<kill>, %vreg6, 0; mem:ST4[@g2] CPURegs:%vreg8,%vreg6
	%vreg9<def> = LD <fi#0>, 0; mem:LD4[%a.addr] CPURegs:%vreg9
	%vreg10<def> = LD %vreg9<kill>, 0; mem:LD4[%1] CPURegs:%vreg10,%vreg9
	%vreg11<def> = LD <fi#1>, 0; mem:LD4[%b.addr] CPURegs:%vreg11
	%vreg12<def> = LE %vreg10<kill>, %vreg11<kill>; CPURegs:%vreg12,%vreg10,%vreg11
	JC %vreg12<kill>, <BB#2>; CPURegs:%vreg12
	Jmp <BB#1>
    Successors according to CFG: BB#1(16) BB#2(16)

BB#1: derived from LLVM BB %cond.true
    Predecessors according to CFG: BB#0
	%vreg13<def> = LD <fi#0>, 0; mem:LD4[%a.addr] CPURegs:%vreg13
	%vreg0<def> = LD %vreg13<kill>, 0; mem:LD4[%4] CPURegs:%vreg0,%vreg13
	Jmp <BB#3>
    Successors according to CFG: BB#3

BB#2: derived from LLVM BB %cond.false
    Predecessors according to CFG: BB#0
	%vreg1<def> = LD <fi#1>, 0; mem:LD4[%b.addr] CPURegs:%vreg1
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %cond.end
    Predecessors according to CFG: BB#2 BB#1
	%vreg2<def> = PHI %vreg1, <BB#2>, %vreg0, <BB#1>; CPURegs:%vreg2,%vreg1,%vreg0
	%V0<def> = COPY %vreg2; CPURegs:%vreg2
	RetLR %V0<imp-use>

# End machine code for function max.


#####==========stderr_obj==========#####:
# Machine code for function max: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
Function Live Ins: %A0 in %vreg3, %A1 in %vreg4

BB#0: derived from LLVM BB %entry
    Live Ins: %A0 %A1
	%vreg4<def> = COPY %A1; CPURegs:%vreg4
	%vreg3<def> = COPY %A0; CPURegs:%vreg3
	ST %vreg3, <fi#0>, 0; mem:ST4[%a.addr] CPURegs:%vreg3
	ST %vreg4, <fi#1>, 0; mem:ST4[%b.addr] CPURegs:%vreg4
	%vreg5<def> = MovIGH %ZERO, <ga:@g2>[TF=3]; CPURegs:%vreg5
	%vreg6<def,tied1> = MovIGL %vreg5<tied0>, <ga:@g2>[TF=4]; CPURegs:%vreg6,%vreg5
	%vreg7<def> = LD %vreg6, 0; mem:LD4[@g2] CPURegs:%vreg7,%vreg6
	%vreg8<def> = ADDiu %vreg7<kill>, 1; CPURegs:%vreg8,%vreg7
	ST %vreg8<kill>, %vreg6, 0; mem:ST4[@g2] CPURegs:%vreg8,%vreg6
	%vreg9<def> = LD <fi#0>, 0; mem:LD4[%a.addr] CPURegs:%vreg9
	%vreg10<def> = LD %vreg9<kill>, 0; mem:LD4[%1] CPURegs:%vreg10,%vreg9
	%vreg11<def> = LD <fi#1>, 0; mem:LD4[%b.addr] CPURegs:%vreg11
	%vreg12<def> = LE %vreg10<kill>, %vreg11<kill>; CPURegs:%vreg12,%vreg10,%vreg11
	JC %vreg12<kill>, <BB#2>; CPURegs:%vreg12
	Jmp <BB#1>
    Successors according to CFG: BB#1(16) BB#2(16)

BB#1: derived from LLVM BB %cond.true
    Predecessors according to CFG: BB#0
	%vreg13<def> = LD <fi#0>, 0; mem:LD4[%a.addr] CPURegs:%vreg13
	%vreg0<def> = LD %vreg13<kill>, 0; mem:LD4[%4] CPURegs:%vreg0,%vreg13
	Jmp <BB#3>
    Successors according to CFG: BB#3

BB#2: derived from LLVM BB %cond.false
    Predecessors according to CFG: BB#0
	%vreg1<def> = LD <fi#1>, 0; mem:LD4[%b.addr] CPURegs:%vreg1
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %cond.end
    Predecessors according to CFG: BB#2 BB#1
	%vreg2<def> = PHI %vreg1, <BB#2>, %vreg0, <BB#1>; CPURegs:%vreg2,%vreg1,%vreg0
	%V0<def> = COPY %vreg2; CPURegs:%vreg2
	RetLR %V0<imp-use>

# End machine code for function max.

