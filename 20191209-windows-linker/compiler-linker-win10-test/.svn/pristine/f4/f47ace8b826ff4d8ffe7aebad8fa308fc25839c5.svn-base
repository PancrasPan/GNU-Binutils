	.text
	.file	"./c_standard_lib-master/MATH/LDEXP.ll"
	.globl	ldexp
	.align	2
	.type	ldexp,@function
ldexp:                                  # @ldexp
# BB#0:                                 # %entry
{
	addi	GR30, GR30, -32
}
{
	store32	GR31, GR30, 7
	load32	GR2, GR30, 10
	store32	GR5, GR30, 5
}
{
	store32	GR4, GR30, 4
	store32	GR2, GR30, 3
	addi	GR4, GR30, 16
}
{
	call	_Dtest
}
{
	nop
}
{
	nop
}
{
	eqi	 GR2, 0
}
{
	jc	 $BB0_7
}
{
	nop
}
{
	nop
}
# BB#1:                                 # %entry
{
	eqi	 GR2, 1
}
{
	jc	 $BB0_5
}
{
	nop
}
{
	nop
}
# BB#2:                                 # %entry
{
	neqi	 GR2, 2
}
{
	jc	 $BB0_4
}
{
	nop
}
{
	nop
}
# BB#3:                                 # %sw.bb
{
	movigh	GR2,%hi(errno)
}
{
	movigl	GR2,%lo(errno)
	movigl	GR3,33
}
{
	movigh	GR3,0
}
{
	jmp	$BB0_6
}
{
	nop
}
{
	nop
}
$BB0_4:                                 # %sw.default
{
	load16	GR5, GR30, 3
	addi	GR4, GR30, 16
}
{
	call	_Dscale
}
{
	nop
}
{
	nop
}
{
	movigl	GR3,0
}
{
	movigh	GR3,0
}
{
	lt	 GR2, GR3
}
{
	jc	 $BB0_7
}
{
	nop
}
{
	nop
}
$BB0_5:                                 # %if.then
{
	movigh	GR2,%hi(errno)
}
{
	movigl	GR2,%lo(errno)
	movigl	GR3,34
}
{
	movigh	GR3,0
}
$BB0_6:                                 # %sw.epilog
{
	store32	GR3, GR2, 0
}
$BB0_7:                                 # %sw.epilog
{
	load32	GR2, GR30, 4
	load32	GR3, GR30, 5
}
{
	load32	GR31, GR30, 7
	addi	GR30, GR30, 32
}
{
	ret	GR31
}
{
	nop
}
{
	nop
}
$tmp0:
	.size	ldexp, ($tmp0)-ldexp


