	.text
	.file	"./testcase_8slots/and_or_if.ll"
	.globl	main
	.align	2
	.type	main,@function
main:                                   # @main
# BB#0:                                 # %entry
{
	addi	GR30, GR30, -24
	movigl	GR2,0
}
{
	movigh	GR2,0
}
{
	store32	GR2, GR30, 5
	store32	GR2, GR30, 4
	movigl	GR2,4
}
{
	movigh	GR2,0
}
{
	store32	GR2, GR30, 3
	movigl	GR2,2
}
{
	movigh	GR2,0
}
{
	store32	GR2, GR30, 2
	movigl	GR2,3
}
{
	movigh	GR2,0
}
{
	store32	GR2, GR30, 1
	load32	GR2, GR30, 3
}
{
	nop
}
{
	load32	GR3, GR30, 4
}
{
	ge	 GR3, GR2
}
{
	jc	 $BB0_3
}
{
	nop
}
{
	nop
}
# BB#1:                                 # %land.lhs.true
{
	load32	GR2, GR30, 2
}
{
	nop
}
{
	load32	GR3, GR30, 3
}
{
	le	 GR3, GR2
}
{
	jc	 $BB0_3
}
{
	nop
}
{
	nop
}
# BB#2:                                 # %if.then
{
	load32	GR2, GR30, 4
}
{
	nop
}
{
	nop
}
{
	addi	GR2, GR2, 1
}
{
	store32	GR2, GR30, 4
	load32	GR2, GR30, 2
}
{
	nop
}
{
	nop
}
{
	addi	GR2, GR2, 1
}
{
	store32	GR2, GR30, 2
}
$BB0_3:                                 # %if.end
{
	load32	GR2, GR30, 3
}
{
	nop
}
{
	load32	GR3, GR30, 4
}
{
	lt	 GR3, GR2
}
{
	jc	 $BB0_5
}
{
	nop
}
{
	nop
}
# BB#4:                                 # %lor.lhs.false
{
	load32	GR2, GR30, 2
}
{
	nop
}
{
	load32	GR3, GR30, 3
}
{
	le	 GR3, GR2
}
{
	jc	 $BB0_6
}
{
	nop
}
{
	nop
}
$BB0_5:                                 # %if.then5
{
	load32	GR2, GR30, 4
}
{
	nop
}
{
	nop
}
{
	addi	GR2, GR2, 1
}
{
	store32	GR2, GR30, 4
	load32	GR2, GR30, 2
}
{
	nop
}
{
	nop
}
{
	addi	GR2, GR2, 1
}
{
	store32	GR2, GR30, 2
}
$BB0_6:                                 # %if.end8
{
	load32	GR2, GR30, 3
}
{
	nop
}
{
	load32	GR3, GR30, 4
}
{
	ge	 GR3, GR2
}
{
	jc	 $BB0_8
}
{
	nop
}
{
	nop
}
# BB#7:                                 # %land.lhs.true10
{
	load32	GR2, GR30, 2
}
{
	nop
}
{
	load32	GR3, GR30, 3
}
{
	gt	 GR3, GR2
}
{
	jc	 $BB0_9
}
{
	nop
}
{
	nop
}
$BB0_8:                                 # %lor.lhs.false12
{
	load32	GR2, GR30, 2
}
{
	nop
}
{
	load32	GR3, GR30, 4
}
{
	ge	 GR3, GR2
}
{
	jc	 $BB0_10
}
{
	nop
}
{
	nop
}
$BB0_9:                                 # %if.then14
{
	load32	GR2, GR30, 4
}
{
	nop
}
{
	nop
}
{
	addi	GR2, GR2, 1
}
{
	store32	GR2, GR30, 4
}
$BB0_10:                                # %if.end16
{
	load32	GR2, GR30, 3
}
{
	nop
}
{
	load32	GR3, GR30, 4
}
{
	lt	 GR3, GR2
}
{
	jc	 $BB0_12
}
{
	nop
}
{
	nop
}
# BB#11:                                # %lor.lhs.false18
{
	load32	GR2, GR30, 2
}
{
	nop
}
{
	load32	GR3, GR30, 3
}
{
	le	 GR3, GR2
}
{
	jc	 $BB0_14
}
{
	nop
}
{
	nop
}
$BB0_12:                                # %land.lhs.true20
{
	load32	GR2, GR30, 2
}
{
	nop
}
{
	load32	GR3, GR30, 4
}
{
	ge	 GR3, GR2
}
{
	jc	 $BB0_14
}
{
	nop
}
{
	nop
}
# BB#13:                                # %if.then22
{
	load32	GR2, GR30, 4
}
{
	nop
}
{
	nop
}
{
	addi	GR2, GR2, 1
}
{
	store32	GR2, GR30, 4
}
$BB0_14:                                # %if.end24
{
	load32	GR2, GR30, 3
}
{
	nop
}
{
	load32	GR3, GR30, 4
}
{
	ge	 GR3, GR2
}
{
	jc	 $BB0_16
}
{
	nop
}
{
	nop
}
# BB#15:                                # %land.lhs.true26
{
	load32	GR2, GR30, 3
}
{
	nop
}
{
	load32	GR3, GR30, 2
}
{
	lt	 GR3, GR2
}
{
	jc	 $BB0_18
}
{
	nop
}
{
	nop
}
$BB0_16:                                # %lor.lhs.false28
{
	load32	GR2, GR30, 2
}
{
	nop
}
{
	load32	GR3, GR30, 4
}
{
	ge	 GR3, GR2
}
{
	jc	 $BB0_19
}
{
	nop
}
{
	nop
}
# BB#17:                                # %land.lhs.true30
{
	load32	GR2, GR30, 1
}
{
	nop
}
{
	load32	GR3, GR30, 2
}
{
	ge	 GR3, GR2
}
{
	jc	 $BB0_19
}
{
	nop
}
{
	nop
}
$BB0_18:                                # %if.then32
{
	load32	GR2, GR30, 4
}
{
	nop
}
{
	nop
}
{
	addi	GR2, GR2, 1
}
{
	store32	GR2, GR30, 4
	load32	GR2, GR30, 2
}
{
	nop
}
{
	nop
}
{
	addi	GR2, GR2, 1
}
{
	store32	GR2, GR30, 2
}
$BB0_19:                                # %if.end35
{
	load32	GR2, GR30, 4
}
{
	nop
}
{
	load32	GR3, GR30, 3
}
{
	nop
}
{
	nop
}
{
	sub	GR2, GR3, GR2
	addi	GR30, GR30, 24
}
{
	ret	GR31
}
{
	nop
}
{
	nop
}
$tmp0:
	.size	main, ($tmp0)-main


