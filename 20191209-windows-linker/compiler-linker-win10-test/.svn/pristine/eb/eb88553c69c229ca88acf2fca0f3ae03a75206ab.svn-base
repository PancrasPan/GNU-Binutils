; ModuleID = './testcase_8slots/local_vector_return.c'
target datalayout = "e-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
target triple = "dsp"

@vla = global <4 x i32> <i32 3, i32 3, i32 3, i32 3>, align 16
@vlb = global <4 x i32> <i32 1, i32 2, i32 3, i32 4>, align 16

; Function Attrs: nounwind
define <4 x i32> @v4si_2add(<4 x i32> %a, <4 x i32> %b) #0 {
entry:
  %a.addr = alloca <4 x i32>, align 16
  %b.addr = alloca <4 x i32>, align 16
  store <4 x i32> %a, <4 x i32>* %a.addr, align 16
  store <4 x i32> %b, <4 x i32>* %b.addr, align 16
  %0 = load <4 x i32>* %a.addr, align 16
  %1 = load <4 x i32>* %b.addr, align 16
  %add = add <4 x i32> %0, %1
  ret <4 x i32> %add
}

; Function Attrs: nounwind
define <4 x i32> @v4si_3add(<4 x i32> %a, <4 x i32> %b, <4 x i32> %c) #0 {
entry:
  %a.addr = alloca <4 x i32>, align 16
  %b.addr = alloca <4 x i32>, align 16
  %c.addr = alloca <4 x i32>, align 16
  store <4 x i32> %a, <4 x i32>* %a.addr, align 16
  store <4 x i32> %b, <4 x i32>* %b.addr, align 16
  store <4 x i32> %c, <4 x i32>* %c.addr, align 16
  %0 = load <4 x i32>* %a.addr, align 16
  %1 = load <4 x i32>* %b.addr, align 16
  %add = add <4 x i32> %0, %1
  %2 = load <4 x i32>* %c.addr, align 16
  %add1 = add <4 x i32> %add, %2
  ret <4 x i32> %add1
}

; Function Attrs: nounwind
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 4
  %vlc = alloca <4 x i32>, align 16
  %vld = alloca <4 x i32>, align 16
  store i32 0, i32* %retval
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  %0 = load <4 x i32>* @vlb, align 16
  %1 = load <4 x i32>* @vla, align 16
  %add = add <4 x i32> %1, %0
  store <4 x i32> %add, <4 x i32>* @vla, align 16
  %2 = load <4 x i32>* @vla, align 16
  %3 = load <4 x i32>* @vlb, align 16
  %call = call <4 x i32> @v4si_2add(<4 x i32> %2, <4 x i32> %3)
  store <4 x i32> %call, <4 x i32>* %vlc, align 16
  %4 = load <4 x i32>* @vla, align 16
  %5 = load <4 x i32>* @vlb, align 16
  %6 = load <4 x i32>* %vlc, align 16
  %call1 = call <4 x i32> @v4si_3add(<4 x i32> %4, <4 x i32> %5, <4 x i32> %6)
  store <4 x i32> %call1, <4 x i32>* %vld, align 16
  %7 = load <4 x i32>* %vld, align 16
  %8 = load <4 x i32>* %vlc, align 16
  %add2 = add <4 x i32> %8, %7
  store <4 x i32> %add2, <4 x i32>* %vlc, align 16
  %9 = load <4 x i32>* %vld, align 16
  %10 = load <4 x i32>* @vla, align 16
  %add3 = add <4 x i32> %10, %9
  store <4 x i32> %add3, <4 x i32>* @vla, align 16
  ret i32 0
}

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5.0 (tags/RELEASE_350/final)"}
