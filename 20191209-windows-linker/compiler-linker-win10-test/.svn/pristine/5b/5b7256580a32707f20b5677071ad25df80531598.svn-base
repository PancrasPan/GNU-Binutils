
#####==========stderr_mid==========#####:
'' is not a recognized processor for this target (ignoring processor)

#####==========stderr_asm==========#####:
# Machine code for function hardwareLoop: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
Function Live Ins: %A0 in %vreg0, %A1 in %vreg1

BB#0: derived from LLVM BB %entry
    Live Ins: %A0 %A1
	%vreg1<def> = COPY %A1; CPURegs:%vreg1
	%vreg0<def> = COPY %A0; CPURegs:%vreg0
	ST %vreg0, <fi#0>, 0; mem:ST4[%a.addr] CPURegs:%vreg0
	ST %vreg1, <fi#1>, 0; mem:ST4[%j.addr] CPURegs:%vreg1
	%vreg2<def> = MovGR %ZERO, 0; CPURegs:%vreg2
	ST %vreg2, <fi#2>, 0; mem:ST4[%i] CPURegs:%vreg2
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#3
	%vreg3<def> = LD <fi#2>, 0; mem:LD4[%i] CPURegs:%vreg3
	%vreg4<def> = LTI %vreg3<kill>, 5; CPURegs:%vreg4,%vreg3
	JNC %vreg4<kill>, <BB#4>; CPURegs:%vreg4
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#4(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	%vreg5<def> = MovGR %ZERO, 3; CPURegs:%vreg5
	%vreg6<def> = LD <fi#1>, 0; mem:LD4[%j.addr] CPURegs:%vreg6
	%vreg7<def> = MUL32 %vreg6<kill>, %vreg5<kill>; CPURegs:%vreg7,%vreg6,%vreg5
	ST %vreg7, <fi#1>, 0; mem:ST4[%j.addr] CPURegs:%vreg7
	%vreg8<def> = MovGR %ZERO, 2; CPURegs:%vreg8
	%vreg9<def> = SHL %vreg7, %vreg8<kill>; CPURegs:%vreg9,%vreg7,%vreg8
	%vreg10<def> = LD <fi#0>, 0; mem:LD4[%a.addr] CPURegs:%vreg10
	%vreg11<def> = ADDu %vreg10<kill>, %vreg9<kill>; CPURegs:%vreg11,%vreg10,%vreg9
	ST %vreg2, %vreg11<kill>, 0; mem:ST4[%arrayidx] CPURegs:%vreg2,%vreg11
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#2
	%vreg13<def> = LD <fi#2>, 0; mem:LD4[%i] CPURegs:%vreg13
	%vreg14<def> = ADDiu %vreg13<kill>, 1; CPURegs:%vreg14,%vreg13
	ST %vreg14<kill>, <fi#2>, 0; mem:ST4[%i] CPURegs:%vreg14
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#4: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#1
	RetLR

# End machine code for function hardwareLoop.


#####==========stderr_obj==========#####:
# Machine code for function hardwareLoop: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
Function Live Ins: %A0 in %vreg0, %A1 in %vreg1

BB#0: derived from LLVM BB %entry
    Live Ins: %A0 %A1
	%vreg1<def> = COPY %A1; CPURegs:%vreg1
	%vreg0<def> = COPY %A0; CPURegs:%vreg0
	ST %vreg0, <fi#0>, 0; mem:ST4[%a.addr] CPURegs:%vreg0
	ST %vreg1, <fi#1>, 0; mem:ST4[%j.addr] CPURegs:%vreg1
	%vreg2<def> = MovGR %ZERO, 0; CPURegs:%vreg2
	ST %vreg2, <fi#2>, 0; mem:ST4[%i] CPURegs:%vreg2
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#3
	%vreg3<def> = LD <fi#2>, 0; mem:LD4[%i] CPURegs:%vreg3
	%vreg4<def> = LTI %vreg3<kill>, 5; CPURegs:%vreg4,%vreg3
	JNC %vreg4<kill>, <BB#4>; CPURegs:%vreg4
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#4(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	%vreg5<def> = MovGR %ZERO, 3; CPURegs:%vreg5
	%vreg6<def> = LD <fi#1>, 0; mem:LD4[%j.addr] CPURegs:%vreg6
	%vreg7<def> = MUL32 %vreg6<kill>, %vreg5<kill>; CPURegs:%vreg7,%vreg6,%vreg5
	ST %vreg7, <fi#1>, 0; mem:ST4[%j.addr] CPURegs:%vreg7
	%vreg8<def> = MovGR %ZERO, 2; CPURegs:%vreg8
	%vreg9<def> = SHL %vreg7, %vreg8<kill>; CPURegs:%vreg9,%vreg7,%vreg8
	%vreg10<def> = LD <fi#0>, 0; mem:LD4[%a.addr] CPURegs:%vreg10
	%vreg11<def> = ADDu %vreg10<kill>, %vreg9<kill>; CPURegs:%vreg11,%vreg10,%vreg9
	ST %vreg2, %vreg11<kill>, 0; mem:ST4[%arrayidx] CPURegs:%vreg2,%vreg11
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#2
	%vreg13<def> = LD <fi#2>, 0; mem:LD4[%i] CPURegs:%vreg13
	%vreg14<def> = ADDiu %vreg13<kill>, 1; CPURegs:%vreg14,%vreg13
	ST %vreg14<kill>, <fi#2>, 0; mem:ST4[%i] CPURegs:%vreg14
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#4: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#1
	RetLR

# End machine code for function hardwareLoop.

