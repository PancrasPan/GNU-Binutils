; ModuleID = './testcase_8slots/and_or_if.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

; Function Attrs: nounwind
define i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  store i32 0, i32* %retval
  store i32 0, i32* %i, align 4
  store i32 4, i32* %j, align 4
  store i32 2, i32* %k, align 4
  store i32 3, i32* %l, align 4
  %0 = load i32* %i, align 4
  %1 = load i32* %j, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i32* %j, align 4
  %3 = load i32* %k, align 4
  %cmp1 = icmp sgt i32 %2, %3
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %4 = load i32* %i, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4
  %5 = load i32* %k, align 4
  %inc2 = add nsw i32 %5, 1
  store i32 %inc2, i32* %k, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load i32* %i, align 4
  %7 = load i32* %j, align 4
  %cmp3 = icmp slt i32 %6, %7
  br i1 %cmp3, label %if.then5, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %8 = load i32* %j, align 4
  %9 = load i32* %k, align 4
  %cmp4 = icmp sgt i32 %8, %9
  br i1 %cmp4, label %if.then5, label %if.end8

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  %10 = load i32* %i, align 4
  %inc6 = add nsw i32 %10, 1
  store i32 %inc6, i32* %i, align 4
  %11 = load i32* %k, align 4
  %inc7 = add nsw i32 %11, 1
  store i32 %inc7, i32* %k, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.then5, %lor.lhs.false
  %12 = load i32* %i, align 4
  %13 = load i32* %j, align 4
  %cmp9 = icmp slt i32 %12, %13
  br i1 %cmp9, label %land.lhs.true10, label %lor.lhs.false12

land.lhs.true10:                                  ; preds = %if.end8
  %14 = load i32* %j, align 4
  %15 = load i32* %k, align 4
  %cmp11 = icmp sgt i32 %14, %15
  br i1 %cmp11, label %if.then14, label %lor.lhs.false12

lor.lhs.false12:                                  ; preds = %land.lhs.true10, %if.end8
  %16 = load i32* %i, align 4
  %17 = load i32* %k, align 4
  %cmp13 = icmp sge i32 %16, %17
  br i1 %cmp13, label %if.end16, label %if.then14

if.then14:                                        ; preds = %lor.lhs.false12, %land.lhs.true10
  %18 = load i32* %i, align 4
  %inc15 = add nsw i32 %18, 1
  store i32 %inc15, i32* %i, align 4
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %lor.lhs.false12
  %19 = load i32* %i, align 4
  %20 = load i32* %j, align 4
  %cmp17 = icmp slt i32 %19, %20
  br i1 %cmp17, label %land.lhs.true20, label %lor.lhs.false18

lor.lhs.false18:                                  ; preds = %if.end16
  %21 = load i32* %j, align 4
  %22 = load i32* %k, align 4
  %cmp19 = icmp sgt i32 %21, %22
  br i1 %cmp19, label %land.lhs.true20, label %if.end24

land.lhs.true20:                                  ; preds = %lor.lhs.false18, %if.end16
  %23 = load i32* %i, align 4
  %24 = load i32* %k, align 4
  %cmp21 = icmp sge i32 %23, %24
  br i1 %cmp21, label %if.end24, label %if.then22

if.then22:                                        ; preds = %land.lhs.true20
  %25 = load i32* %i, align 4
  %inc23 = add nsw i32 %25, 1
  store i32 %inc23, i32* %i, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %land.lhs.true20, %lor.lhs.false18
  %26 = load i32* %i, align 4
  %27 = load i32* %j, align 4
  %cmp25 = icmp slt i32 %26, %27
  br i1 %cmp25, label %land.lhs.true26, label %lor.lhs.false28

land.lhs.true26:                                  ; preds = %if.end24
  %28 = load i32* %k, align 4
  %29 = load i32* %j, align 4
  %cmp27 = icmp slt i32 %28, %29
  br i1 %cmp27, label %if.then32, label %lor.lhs.false28

lor.lhs.false28:                                  ; preds = %land.lhs.true26, %if.end24
  %30 = load i32* %i, align 4
  %31 = load i32* %k, align 4
  %cmp29 = icmp slt i32 %30, %31
  br i1 %cmp29, label %land.lhs.true30, label %if.end35

land.lhs.true30:                                  ; preds = %lor.lhs.false28
  %32 = load i32* %k, align 4
  %33 = load i32* %l, align 4
  %cmp31 = icmp slt i32 %32, %33
  br i1 %cmp31, label %if.then32, label %if.end35

if.then32:                                        ; preds = %land.lhs.true30, %land.lhs.true26
  %34 = load i32* %i, align 4
  %inc33 = add nsw i32 %34, 1
  store i32 %inc33, i32* %i, align 4
  %35 = load i32* %k, align 4
  %inc34 = add nsw i32 %35, 1
  store i32 %inc34, i32* %k, align 4
  br label %if.end35

if.end35:                                         ; preds = %if.then32, %land.lhs.true30, %lor.lhs.false28
  %36 = load i32* %j, align 4
  %37 = load i32* %i, align 4
  %sub = sub nsw i32 %36, %37
  ret i32 %sub
}

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5.0 (tags/RELEASE_350/final)"}
