
#####==========stderr_mid==========#####:
'' is not a recognized processor for this target (ignoring processor)

#####==========stderr_asm==========#####:
# Machine code for function main: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=4, align=4, at location [SP]
  fi#5: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 0; CPURegs:%vreg0
	ST %vreg0, <fi#0>, 0; mem:ST4[%retval] CPURegs:%vreg0
	ST %vreg0, <fi#3>, 0; mem:ST4[%accum] CPURegs:%vreg0
	%vreg1<def> = MovIGH %ZERO, <ga:@nSamples>[TF=3]; CPURegs:%vreg1
	%vreg2<def,tied1> = MovIGL %vreg1<tied0>, <ga:@nSamples>[TF=4]; CPURegs:%vreg2,%vreg1
	%vreg3<def> = LD %vreg2, 0; mem:LD4[@nSamples] CPURegs:%vreg3,%vreg2
	%vreg4<def> = ADDiu %vreg3<kill>, -1; CPURegs:%vreg4,%vreg3
	ST %vreg4<kill>, <fi#1>, 0; mem:ST4[%n] CPURegs:%vreg4
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %while.cond
    Predecessors according to CFG: BB#0 BB#5
	%vreg6<def> = LD <fi#1>, 0; mem:LD4[%n] CPURegs:%vreg6
	%vreg7<def> = LT %vreg6<kill>, %vreg0; CPURegs:%vreg7,%vreg6,%vreg0
	JC %vreg7<kill>, <BB#6>; CPURegs:%vreg7
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#6(4)

BB#2: derived from LLVM BB %while.body
    Predecessors according to CFG: BB#1
	ST %vreg0, <fi#2>, 0; mem:ST4[%m] CPURegs:%vreg0
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %while.cond1
    Predecessors according to CFG: BB#2 BB#4
	%vreg46<def> = MovIGH %ZERO, <ga:@nTaps>[TF=3]; CPURegs:%vreg46
	%vreg47<def,tied1> = MovIGL %vreg46<tied0>, <ga:@nTaps>[TF=4]; CPURegs:%vreg47,%vreg46
	%vreg48<def> = LD %vreg47<kill>, 0; mem:LD4[@nTaps] CPURegs:%vreg48,%vreg47
	%vreg49<def> = LD <fi#2>, 0; mem:LD4[%m] CPURegs:%vreg49
	%vreg50<def> = GE %vreg49<kill>, %vreg48<kill>; CPURegs:%vreg50,%vreg49,%vreg48
	JC %vreg50<kill>, <BB#5>; CPURegs:%vreg50
	Jmp <BB#4>
    Successors according to CFG: BB#4(124) BB#5(4)

BB#4: derived from LLVM BB %while.body3
    Predecessors according to CFG: BB#3
	%vreg62<def> = LD <fi#2>, 0; mem:LD4[%m] CPURegs:%vreg62
	%vreg63<def> = LD <fi#1>, 0; mem:LD4[%n] CPURegs:%vreg63
	%vreg64<def> = SUBu %vreg63, %vreg62; CPURegs:%vreg64,%vreg63,%vreg62
	%vreg65<def> = MovGR %ZERO, 2; CPURegs:%vreg65
	%vreg66<def> = SHL %vreg64<kill>, %vreg65; CPURegs:%vreg66,%vreg64,%vreg65
	%vreg67<def> = MovIGH %ZERO, <ga:@x>[TF=3]; CPURegs:%vreg67
	%vreg68<def,tied1> = MovIGL %vreg67<tied0>, <ga:@x>[TF=4]; CPURegs:%vreg68,%vreg67
	%vreg69<def> = ADDu %vreg68<kill>, %vreg66<kill>; CPURegs:%vreg69,%vreg68,%vreg66
	%vreg70<def> = SHL %vreg62, %vreg65; CPURegs:%vreg70,%vreg62,%vreg65
	%vreg71<def> = MovIGH %ZERO, <ga:@h>[TF=3]; CPURegs:%vreg71
	%vreg72<def,tied1> = MovIGL %vreg71<tied0>, <ga:@h>[TF=4]; CPURegs:%vreg72,%vreg71
	%vreg73<def> = ADDu %vreg72<kill>, %vreg70<kill>; CPURegs:%vreg73,%vreg72,%vreg70
	%vreg74<def> = LD %vreg73<kill>, 0; mem:LD4[%arrayidx] CPURegs:%vreg74,%vreg73
	%vreg75<def> = LD %vreg69<kill>, 0; mem:LD4[%arrayidx5] CPURegs:%vreg75,%vreg69
	%vreg76<def> = MUL32 %vreg74<kill>, %vreg75<kill>; CPURegs:%vreg76,%vreg74,%vreg75
	%vreg77<def> = SHL %vreg63, %vreg65; CPURegs:%vreg77,%vreg63,%vreg65
	%vreg78<def> = MovIGH %ZERO, <ga:@y>[TF=3]; CPURegs:%vreg78
	%vreg79<def,tied1> = MovIGL %vreg78<tied0>, <ga:@y>[TF=4]; CPURegs:%vreg79,%vreg78
	%vreg80<def> = ADDu %vreg79<kill>, %vreg77<kill>; CPURegs:%vreg80,%vreg79,%vreg77
	%vreg81<def> = LD %vreg80, 0; mem:LD4[%arrayidx6] CPURegs:%vreg81,%vreg80
	%vreg82<def> = ADDu %vreg81<kill>, %vreg76<kill>; CPURegs:%vreg82,%vreg81,%vreg76
	ST %vreg82<kill>, %vreg80, 0; mem:ST4[%arrayidx6] CPURegs:%vreg82,%vreg80
	%vreg83<def> = LD <fi#2>, 0; mem:LD4[%m] CPURegs:%vreg83
	%vreg84<def> = ADDiu %vreg83<kill>, 1; CPURegs:%vreg84,%vreg83
	ST %vreg84<kill>, <fi#2>, 0; mem:ST4[%m] CPURegs:%vreg84
	Jmp <BB#3>
    Successors according to CFG: BB#3

BB#5: derived from LLVM BB %while.end
    Predecessors according to CFG: BB#3
	%vreg51<def> = MovGR %ZERO, 2; CPURegs:%vreg51
	%vreg52<def> = LD <fi#1>, 0; mem:LD4[%n] CPURegs:%vreg52
	%vreg53<def> = SHL %vreg52<kill>, %vreg51<kill>; CPURegs:%vreg53,%vreg52,%vreg51
	%vreg54<def> = MovIGH %ZERO, <ga:@y>[TF=3]; CPURegs:%vreg54
	%vreg55<def,tied1> = MovIGL %vreg54<tied0>, <ga:@y>[TF=4]; CPURegs:%vreg55,%vreg54
	%vreg56<def> = ADDu %vreg55<kill>, %vreg53<kill>; CPURegs:%vreg56,%vreg55,%vreg53
	%vreg57<def> = LD %vreg56<kill>, 0; mem:LD4[%arrayidx7] CPURegs:%vreg57,%vreg56
	%vreg58<def> = LD <fi#3>, 0; mem:LD4[%accum] CPURegs:%vreg58
	%vreg59<def> = ADDu %vreg58<kill>, %vreg57<kill>; CPURegs:%vreg59,%vreg58,%vreg57
	ST %vreg59<kill>, <fi#3>, 0; mem:ST4[%accum] CPURegs:%vreg59
	%vreg60<def> = LD <fi#1>, 0; mem:LD4[%n] CPURegs:%vreg60
	%vreg61<def> = ADDiu %vreg60<kill>, -1; CPURegs:%vreg61,%vreg60
	ST %vreg61<kill>, <fi#1>, 0; mem:ST4[%n] CPURegs:%vreg61
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#6: derived from LLVM BB %while.end9
    Predecessors according to CFG: BB#1
	%vreg10<def> = LD %vreg2, 0; mem:LD4[@nSamples] CPURegs:%vreg10,%vreg2
	%vreg11<def> = ADDiu %vreg10<kill>, -1; CPURegs:%vreg11,%vreg10
	ST %vreg11<kill>, <fi#1>, 0; mem:ST4[%n] CPURegs:%vreg11
	%vreg12<def> = MovGR %ZERO, 2; CPURegs:%vreg12
	ST %vreg12, <fi#4>, 0; mem:ST4[%mu] CPURegs:%vreg12
	ST %vreg0, <fi#5>, 0; mem:ST4[%j] CPURegs:%vreg0
    Successors according to CFG: BB#7

BB#7: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#6 BB#9
	%vreg14<def> = MovIGH %ZERO, <ga:@nTaps>[TF=3]; CPURegs:%vreg14
	%vreg15<def,tied1> = MovIGL %vreg14<tied0>, <ga:@nTaps>[TF=4]; CPURegs:%vreg15,%vreg14
	%vreg16<def> = LD %vreg15<kill>, 0; mem:LD4[@nTaps] CPURegs:%vreg16,%vreg15
	%vreg17<def> = LD <fi#5>, 0; mem:LD4[%j] CPURegs:%vreg17
	%vreg18<def> = GE %vreg17<kill>, %vreg16<kill>; CPURegs:%vreg18,%vreg17,%vreg16
	JC %vreg18<kill>, <BB#10>; CPURegs:%vreg18
	Jmp <BB#8>
    Successors according to CFG: BB#8(124) BB#10(4)

BB#8: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#7
	%vreg20<def> = MovIGH %ZERO, <ga:@x>[TF=3]; CPURegs:%vreg20
	%vreg21<def,tied1> = MovIGL %vreg20<tied0>, <ga:@x>[TF=4]; CPURegs:%vreg21,%vreg20
	%vreg23<def> = LD <fi#1>, 0; mem:LD4[%n] CPURegs:%vreg23
	%vreg24<def> = SHL %vreg23, %vreg12; CPURegs:%vreg24,%vreg23,%vreg12
	%vreg25<def> = ADDu %vreg21, %vreg24<kill>; CPURegs:%vreg25,%vreg21,%vreg24
	%vreg26<def> = LD %vreg25<kill>, 0; mem:LD4[%arrayidx12] CPURegs:%vreg26,%vreg25
	%vreg27<def> = LD <fi#3>, 0; mem:LD4[%accum] CPURegs:%vreg27
	%vreg28<def> = SUBu %vreg26<kill>, %vreg27<kill>; CPURegs:%vreg28,%vreg26,%vreg27
	%vreg29<def> = LD <fi#4>, 0; mem:LD4[%mu] CPURegs:%vreg29
	%vreg30<def> = MUL32 %vreg29<kill>, %vreg28<kill>; CPURegs:%vreg30,%vreg29,%vreg28
	%vreg31<def> = LD <fi#5>, 0; mem:LD4[%j] CPURegs:%vreg31
	%vreg32<def> = SUBu %vreg23, %vreg31; CPURegs:%vreg32,%vreg23,%vreg31
	%vreg33<def> = SHL %vreg32<kill>, %vreg12; CPURegs:%vreg33,%vreg32,%vreg12
	%vreg34<def> = ADDu %vreg21, %vreg33<kill>; CPURegs:%vreg34,%vreg21,%vreg33
	%vreg35<def> = LD %vreg34<kill>, 0; mem:LD4[%arrayidx16] CPURegs:%vreg35,%vreg34
	%vreg36<def> = MUL32 %vreg30<kill>, %vreg35<kill>; CPURegs:%vreg36,%vreg30,%vreg35
	%vreg37<def> = SHL %vreg31, %vreg12; CPURegs:%vreg37,%vreg31,%vreg12
	%vreg38<def> = MovIGH %ZERO, <ga:@w>[TF=3]; CPURegs:%vreg38
	%vreg39<def,tied1> = MovIGL %vreg38<tied0>, <ga:@w>[TF=4]; CPURegs:%vreg39,%vreg38
	%vreg40<def> = ADDu %vreg39<kill>, %vreg37<kill>; CPURegs:%vreg40,%vreg39,%vreg37
	%vreg41<def> = LD %vreg40, 0; mem:LD4[%arrayidx18] CPURegs:%vreg41,%vreg40
	%vreg42<def> = ADDu %vreg41<kill>, %vreg36<kill>; CPURegs:%vreg42,%vreg41,%vreg36
	ST %vreg42<kill>, %vreg40, 0; mem:ST4[%arrayidx18] CPURegs:%vreg42,%vreg40
    Successors according to CFG: BB#9

BB#9: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#8
	%vreg43<def> = LD <fi#5>, 0; mem:LD4[%j] CPURegs:%vreg43
	%vreg44<def> = ADDiu %vreg43<kill>, 1; CPURegs:%vreg44,%vreg43
	ST %vreg44<kill>, <fi#5>, 0; mem:ST4[%j] CPURegs:%vreg44
	Jmp <BB#7>
    Successors according to CFG: BB#7

BB#10: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#7
	%vreg19<def> = MovGR %ZERO, 0; CPURegs:%vreg19
	%V0<def> = COPY %vreg19; CPURegs:%vreg19
	RetLR %V0<imp-use>

# End machine code for function main.


#####==========stderr_obj==========#####:
# Machine code for function main: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=4, align=4, at location [SP]
  fi#5: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 0; CPURegs:%vreg0
	ST %vreg0, <fi#0>, 0; mem:ST4[%retval] CPURegs:%vreg0
	ST %vreg0, <fi#3>, 0; mem:ST4[%accum] CPURegs:%vreg0
	%vreg1<def> = MovIGH %ZERO, <ga:@nSamples>[TF=3]; CPURegs:%vreg1
	%vreg2<def,tied1> = MovIGL %vreg1<tied0>, <ga:@nSamples>[TF=4]; CPURegs:%vreg2,%vreg1
	%vreg3<def> = LD %vreg2, 0; mem:LD4[@nSamples] CPURegs:%vreg3,%vreg2
	%vreg4<def> = ADDiu %vreg3<kill>, -1; CPURegs:%vreg4,%vreg3
	ST %vreg4<kill>, <fi#1>, 0; mem:ST4[%n] CPURegs:%vreg4
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %while.cond
    Predecessors according to CFG: BB#0 BB#5
	%vreg6<def> = LD <fi#1>, 0; mem:LD4[%n] CPURegs:%vreg6
	%vreg7<def> = LT %vreg6<kill>, %vreg0; CPURegs:%vreg7,%vreg6,%vreg0
	JC %vreg7<kill>, <BB#6>; CPURegs:%vreg7
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#6(4)

BB#2: derived from LLVM BB %while.body
    Predecessors according to CFG: BB#1
	ST %vreg0, <fi#2>, 0; mem:ST4[%m] CPURegs:%vreg0
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %while.cond1
    Predecessors according to CFG: BB#2 BB#4
	%vreg46<def> = MovIGH %ZERO, <ga:@nTaps>[TF=3]; CPURegs:%vreg46
	%vreg47<def,tied1> = MovIGL %vreg46<tied0>, <ga:@nTaps>[TF=4]; CPURegs:%vreg47,%vreg46
	%vreg48<def> = LD %vreg47<kill>, 0; mem:LD4[@nTaps] CPURegs:%vreg48,%vreg47
	%vreg49<def> = LD <fi#2>, 0; mem:LD4[%m] CPURegs:%vreg49
	%vreg50<def> = GE %vreg49<kill>, %vreg48<kill>; CPURegs:%vreg50,%vreg49,%vreg48
	JC %vreg50<kill>, <BB#5>; CPURegs:%vreg50
	Jmp <BB#4>
    Successors according to CFG: BB#4(124) BB#5(4)

BB#4: derived from LLVM BB %while.body3
    Predecessors according to CFG: BB#3
	%vreg62<def> = LD <fi#2>, 0; mem:LD4[%m] CPURegs:%vreg62
	%vreg63<def> = LD <fi#1>, 0; mem:LD4[%n] CPURegs:%vreg63
	%vreg64<def> = SUBu %vreg63, %vreg62; CPURegs:%vreg64,%vreg63,%vreg62
	%vreg65<def> = MovGR %ZERO, 2; CPURegs:%vreg65
	%vreg66<def> = SHL %vreg64<kill>, %vreg65; CPURegs:%vreg66,%vreg64,%vreg65
	%vreg67<def> = MovIGH %ZERO, <ga:@x>[TF=3]; CPURegs:%vreg67
	%vreg68<def,tied1> = MovIGL %vreg67<tied0>, <ga:@x>[TF=4]; CPURegs:%vreg68,%vreg67
	%vreg69<def> = ADDu %vreg68<kill>, %vreg66<kill>; CPURegs:%vreg69,%vreg68,%vreg66
	%vreg70<def> = SHL %vreg62, %vreg65; CPURegs:%vreg70,%vreg62,%vreg65
	%vreg71<def> = MovIGH %ZERO, <ga:@h>[TF=3]; CPURegs:%vreg71
	%vreg72<def,tied1> = MovIGL %vreg71<tied0>, <ga:@h>[TF=4]; CPURegs:%vreg72,%vreg71
	%vreg73<def> = ADDu %vreg72<kill>, %vreg70<kill>; CPURegs:%vreg73,%vreg72,%vreg70
	%vreg74<def> = LD %vreg73<kill>, 0; mem:LD4[%arrayidx] CPURegs:%vreg74,%vreg73
	%vreg75<def> = LD %vreg69<kill>, 0; mem:LD4[%arrayidx5] CPURegs:%vreg75,%vreg69
	%vreg76<def> = MUL32 %vreg74<kill>, %vreg75<kill>; CPURegs:%vreg76,%vreg74,%vreg75
	%vreg77<def> = SHL %vreg63, %vreg65; CPURegs:%vreg77,%vreg63,%vreg65
	%vreg78<def> = MovIGH %ZERO, <ga:@y>[TF=3]; CPURegs:%vreg78
	%vreg79<def,tied1> = MovIGL %vreg78<tied0>, <ga:@y>[TF=4]; CPURegs:%vreg79,%vreg78
	%vreg80<def> = ADDu %vreg79<kill>, %vreg77<kill>; CPURegs:%vreg80,%vreg79,%vreg77
	%vreg81<def> = LD %vreg80, 0; mem:LD4[%arrayidx6] CPURegs:%vreg81,%vreg80
	%vreg82<def> = ADDu %vreg81<kill>, %vreg76<kill>; CPURegs:%vreg82,%vreg81,%vreg76
	ST %vreg82<kill>, %vreg80, 0; mem:ST4[%arrayidx6] CPURegs:%vreg82,%vreg80
	%vreg83<def> = LD <fi#2>, 0; mem:LD4[%m] CPURegs:%vreg83
	%vreg84<def> = ADDiu %vreg83<kill>, 1; CPURegs:%vreg84,%vreg83
	ST %vreg84<kill>, <fi#2>, 0; mem:ST4[%m] CPURegs:%vreg84
	Jmp <BB#3>
    Successors according to CFG: BB#3

BB#5: derived from LLVM BB %while.end
    Predecessors according to CFG: BB#3
	%vreg51<def> = MovGR %ZERO, 2; CPURegs:%vreg51
	%vreg52<def> = LD <fi#1>, 0; mem:LD4[%n] CPURegs:%vreg52
	%vreg53<def> = SHL %vreg52<kill>, %vreg51<kill>; CPURegs:%vreg53,%vreg52,%vreg51
	%vreg54<def> = MovIGH %ZERO, <ga:@y>[TF=3]; CPURegs:%vreg54
	%vreg55<def,tied1> = MovIGL %vreg54<tied0>, <ga:@y>[TF=4]; CPURegs:%vreg55,%vreg54
	%vreg56<def> = ADDu %vreg55<kill>, %vreg53<kill>; CPURegs:%vreg56,%vreg55,%vreg53
	%vreg57<def> = LD %vreg56<kill>, 0; mem:LD4[%arrayidx7] CPURegs:%vreg57,%vreg56
	%vreg58<def> = LD <fi#3>, 0; mem:LD4[%accum] CPURegs:%vreg58
	%vreg59<def> = ADDu %vreg58<kill>, %vreg57<kill>; CPURegs:%vreg59,%vreg58,%vreg57
	ST %vreg59<kill>, <fi#3>, 0; mem:ST4[%accum] CPURegs:%vreg59
	%vreg60<def> = LD <fi#1>, 0; mem:LD4[%n] CPURegs:%vreg60
	%vreg61<def> = ADDiu %vreg60<kill>, -1; CPURegs:%vreg61,%vreg60
	ST %vreg61<kill>, <fi#1>, 0; mem:ST4[%n] CPURegs:%vreg61
	Jmp <BB#1>
    Successors according to CFG: BB#1

BB#6: derived from LLVM BB %while.end9
    Predecessors according to CFG: BB#1
	%vreg10<def> = LD %vreg2, 0; mem:LD4[@nSamples] CPURegs:%vreg10,%vreg2
	%vreg11<def> = ADDiu %vreg10<kill>, -1; CPURegs:%vreg11,%vreg10
	ST %vreg11<kill>, <fi#1>, 0; mem:ST4[%n] CPURegs:%vreg11
	%vreg12<def> = MovGR %ZERO, 2; CPURegs:%vreg12
	ST %vreg12, <fi#4>, 0; mem:ST4[%mu] CPURegs:%vreg12
	ST %vreg0, <fi#5>, 0; mem:ST4[%j] CPURegs:%vreg0
    Successors according to CFG: BB#7

BB#7: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#6 BB#9
	%vreg14<def> = MovIGH %ZERO, <ga:@nTaps>[TF=3]; CPURegs:%vreg14
	%vreg15<def,tied1> = MovIGL %vreg14<tied0>, <ga:@nTaps>[TF=4]; CPURegs:%vreg15,%vreg14
	%vreg16<def> = LD %vreg15<kill>, 0; mem:LD4[@nTaps] CPURegs:%vreg16,%vreg15
	%vreg17<def> = LD <fi#5>, 0; mem:LD4[%j] CPURegs:%vreg17
	%vreg18<def> = GE %vreg17<kill>, %vreg16<kill>; CPURegs:%vreg18,%vreg17,%vreg16
	JC %vreg18<kill>, <BB#10>; CPURegs:%vreg18
	Jmp <BB#8>
    Successors according to CFG: BB#8(124) BB#10(4)

BB#8: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#7
	%vreg20<def> = MovIGH %ZERO, <ga:@x>[TF=3]; CPURegs:%vreg20
	%vreg21<def,tied1> = MovIGL %vreg20<tied0>, <ga:@x>[TF=4]; CPURegs:%vreg21,%vreg20
	%vreg23<def> = LD <fi#1>, 0; mem:LD4[%n] CPURegs:%vreg23
	%vreg24<def> = SHL %vreg23, %vreg12; CPURegs:%vreg24,%vreg23,%vreg12
	%vreg25<def> = ADDu %vreg21, %vreg24<kill>; CPURegs:%vreg25,%vreg21,%vreg24
	%vreg26<def> = LD %vreg25<kill>, 0; mem:LD4[%arrayidx12] CPURegs:%vreg26,%vreg25
	%vreg27<def> = LD <fi#3>, 0; mem:LD4[%accum] CPURegs:%vreg27
	%vreg28<def> = SUBu %vreg26<kill>, %vreg27<kill>; CPURegs:%vreg28,%vreg26,%vreg27
	%vreg29<def> = LD <fi#4>, 0; mem:LD4[%mu] CPURegs:%vreg29
	%vreg30<def> = MUL32 %vreg29<kill>, %vreg28<kill>; CPURegs:%vreg30,%vreg29,%vreg28
	%vreg31<def> = LD <fi#5>, 0; mem:LD4[%j] CPURegs:%vreg31
	%vreg32<def> = SUBu %vreg23, %vreg31; CPURegs:%vreg32,%vreg23,%vreg31
	%vreg33<def> = SHL %vreg32<kill>, %vreg12; CPURegs:%vreg33,%vreg32,%vreg12
	%vreg34<def> = ADDu %vreg21, %vreg33<kill>; CPURegs:%vreg34,%vreg21,%vreg33
	%vreg35<def> = LD %vreg34<kill>, 0; mem:LD4[%arrayidx16] CPURegs:%vreg35,%vreg34
	%vreg36<def> = MUL32 %vreg30<kill>, %vreg35<kill>; CPURegs:%vreg36,%vreg30,%vreg35
	%vreg37<def> = SHL %vreg31, %vreg12; CPURegs:%vreg37,%vreg31,%vreg12
	%vreg38<def> = MovIGH %ZERO, <ga:@w>[TF=3]; CPURegs:%vreg38
	%vreg39<def,tied1> = MovIGL %vreg38<tied0>, <ga:@w>[TF=4]; CPURegs:%vreg39,%vreg38
	%vreg40<def> = ADDu %vreg39<kill>, %vreg37<kill>; CPURegs:%vreg40,%vreg39,%vreg37
	%vreg41<def> = LD %vreg40, 0; mem:LD4[%arrayidx18] CPURegs:%vreg41,%vreg40
	%vreg42<def> = ADDu %vreg41<kill>, %vreg36<kill>; CPURegs:%vreg42,%vreg41,%vreg36
	ST %vreg42<kill>, %vreg40, 0; mem:ST4[%arrayidx18] CPURegs:%vreg42,%vreg40
    Successors according to CFG: BB#9

BB#9: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#8
	%vreg43<def> = LD <fi#5>, 0; mem:LD4[%j] CPURegs:%vreg43
	%vreg44<def> = ADDiu %vreg43<kill>, 1; CPURegs:%vreg44,%vreg43
	ST %vreg44<kill>, <fi#5>, 0; mem:ST4[%j] CPURegs:%vreg44
	Jmp <BB#7>
    Successors according to CFG: BB#7

BB#10: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#7
	%vreg19<def> = MovGR %ZERO, 0; CPURegs:%vreg19
	%V0<def> = COPY %vreg19; CPURegs:%vreg19
	RetLR %V0<imp-use>

# End machine code for function main.

