
#####==========stderr_mid==========#####:
clang version 3.5.0 (tags/RELEASE_350/final)
Target: dsp
Thread model: posix
 "D:\ppp\lee_han-dsp_compiler-master\dsp_compiler_old\build-x64\Debug\bin\clang.exe" -cc1 -triple dsp -emit-llvm -disable-free -main-file-name emptyblockinO3.c -mrelocation-model static -mdisable-fp-elim -fmath-errno -no-integrated-as -mconstructor-aliases -v -dwarf-column-info -coverage-file "D:\\ppp\\Linker PPP\\20191209-windows-linker\\compiler-linker-win10-test\\./testcase_8slots/emptyblockinO3.ll" -resource-dir "D:\\ppp\\lee_han-dsp_compiler-master\\dsp_compiler_old\\build-x64\\Debug\\bin\\..\\lib\\clang\\3.5.0" -I ./include -O1 -fno-dwarf-directory-asm -fdebug-compilation-dir "D:\\ppp\\Linker PPP\\20191209-windows-linker\\compiler-linker-win10-test" -ferror-limit 19 -fmessage-length 0 -mstackrealign -fobjc-runtime=gcc -fdiagnostics-show-option -o ./testcase_8slots/emptyblockinO3.ll -x c ./testcase_8slots/emptyblockinO3.c
clang -cc1 version 3.5.0 based upon LLVM 3.5.0svn default target x86_64-pc-windows-msvc
ignoring nonexistent directory "/usr/local/include"
ignoring nonexistent directory "/usr/include"
#include "..." search starts here:
#include <...> search starts here:
 ./include
 D:\ppp\lee_han-dsp_compiler-master\dsp_compiler_old\build-x64\Debug\bin\..\lib\clang\3.5.0\include
End of search list.
'' is not a recognized processor for this target (ignoring processor)

#####==========stderr_asm==========#####:
# Machine code for function fir: SSA

BB#0: derived from LLVM BB %entry
	%vreg22<def> = MovIGH %ZERO, <ga:@nSamples>[TF=3]; CPURegs:%vreg22
	%vreg23<def,tied1> = MovIGL %vreg22<tied0>, <ga:@nSamples>[TF=4]; CPURegs:%vreg23,%vreg22
	%vreg0<def> = LD %vreg23<kill>, 0; mem:LD4[@nSamples](tbaa=<badref>) CPURegs:%vreg0,%vreg23
	%vreg24<def> = MovGR %ZERO, 1; CPURegs:%vreg24
	%vreg25<def> = LT %vreg0, %vreg24<kill>; CPURegs:%vreg25,%vreg0,%vreg24
	%vreg21<def> = IMPLICIT_DEF; CPURegs:%vreg21
	JC %vreg25<kill>, <BB#7>; CPURegs:%vreg25
	Jmp <BB#1>
    Successors according to CFG: BB#1(20) BB#7(12)

BB#1: derived from LLVM BB %while.cond1.preheader.lr.ph
    Predecessors according to CFG: BB#0
	%vreg27<def> = MovIGH %ZERO, <ga:@nTaps>[TF=3]; CPURegs:%vreg27
	%vreg28<def,tied1> = MovIGL %vreg27<tied0>, <ga:@nTaps>[TF=4]; CPURegs:%vreg28,%vreg27
	%vreg1<def> = LD %vreg28<kill>, 0; mem:LD4[@nTaps](tbaa=<badref>) CPURegs:%vreg1,%vreg28
	%vreg29<def> = MovGR %ZERO, 0; CPURegs:%vreg29
	%vreg2<def> = GT %vreg1, %vreg29<kill>; CPURegs:%vreg2,%vreg1,%vreg29
	%vreg26<def> = IMPLICIT_DEF; CPURegs:%vreg26
	Jmp <BB#4>
    Successors according to CFG: BB#4

BB#2: derived from LLVM BB %while.cond1.while.cond.loopexit_crit_edge
    Predecessors according to CFG: BB#6
	ST %vreg12, %vreg7, 0; mem:ST4[%arrayidx6](tbaa=<badref>) CPURegs:%vreg12,%vreg7
	Jmp <BB#3>
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %while.cond.loopexit
    Predecessors according to CFG: BB#4 BB#2
	%vreg3<def> = PHI %vreg5, <BB#4>, %vreg13, <BB#2>; CPURegs:%vreg3,%vreg5,%vreg13
	%vreg50<def> = MovGR %ZERO, 1; CPURegs:%vreg50
	%vreg51<def> = LT %vreg6, %vreg50<kill>; CPURegs:%vreg51,%vreg6,%vreg50
	JC %vreg51<kill>, <BB#7>; CPURegs:%vreg51
	Jmp <BB#4>
    Successors according to CFG: BB#4(124) BB#7(4)

BB#4: derived from LLVM BB %while.cond1.preheader
    Predecessors according to CFG: BB#1 BB#3
	%vreg4<def> = PHI %vreg0, <BB#1>, %vreg6, <BB#3>; CPURegs:%vreg4,%vreg0,%vreg6
	%vreg5<def> = PHI %vreg26, <BB#1>, %vreg3, <BB#3>; CPURegs:%vreg5,%vreg26,%vreg3
	%vreg6<def> = ADDiu %vreg4, -1; CPURegs:%vreg6,%vreg4
	%vreg30<def> = EQI %vreg2, 0; CPURegs:%vreg30,%vreg2
	JC %vreg30<kill>, <BB#3>; CPURegs:%vreg30
	Jmp <BB#5>
    Successors according to CFG: BB#5(20) BB#3(12)

BB#5: derived from LLVM BB %while.body3.lr.ph
    Predecessors according to CFG: BB#4
	%vreg32<def> = MovGR %ZERO, 2; CPURegs:%vreg32
	%vreg33<def> = SHL %vreg6, %vreg32<kill>; CPURegs:%vreg33,%vreg6,%vreg32
	%vreg34<def> = MovIGH %ZERO, <ga:@y>[TF=3]; CPURegs:%vreg34
	%vreg35<def,tied1> = MovIGL %vreg34<tied0>, <ga:@y>[TF=4]; CPURegs:%vreg35,%vreg34
	%vreg7<def> = ADDu %vreg35<kill>, %vreg33<kill>; CPURegs:%vreg7,%vreg35,%vreg33
	%vreg31<def> = MovGR %ZERO, 0; CPURegs:%vreg31
	%vreg8<def> = LD %vreg7, 0; mem:LD4[%arrayidx6](tbaa=<badref>) CPURegs:%vreg8,%vreg7
	Jmp <BB#6>
    Successors according to CFG: BB#6

BB#6: derived from LLVM BB %while.body3
    Predecessors according to CFG: BB#5 BB#6
	%vreg9<def> = PHI %vreg8, <BB#5>, %vreg12, <BB#6>; CPURegs:%vreg9,%vreg8,%vreg12
	%vreg10<def> = PHI %vreg5, <BB#5>, %vreg13, <BB#6>; CPURegs:%vreg10,%vreg5,%vreg13
	%vreg11<def> = PHI %vreg31, <BB#5>, %vreg14, <BB#6>; CPURegs:%vreg11,%vreg31,%vreg14
	%vreg36<def> = SUBu %vreg6, %vreg11; CPURegs:%vreg36,%vreg6,%vreg11
	%vreg37<def> = MovGR %ZERO, 2; CPURegs:%vreg37
	%vreg38<def> = SHL %vreg36<kill>, %vreg37; CPURegs:%vreg38,%vreg36,%vreg37
	%vreg39<def> = MovIGH %ZERO, <ga:@x>[TF=3]; CPURegs:%vreg39
	%vreg40<def,tied1> = MovIGL %vreg39<tied0>, <ga:@x>[TF=4]; CPURegs:%vreg40,%vreg39
	%vreg41<def> = ADDu %vreg40<kill>, %vreg38<kill>; CPURegs:%vreg41,%vreg40,%vreg38
	%vreg42<def> = SHL %vreg11, %vreg37; CPURegs:%vreg42,%vreg11,%vreg37
	%vreg43<def> = MovIGH %ZERO, <ga:@h>[TF=3]; CPURegs:%vreg43
	%vreg44<def,tied1> = MovIGL %vreg43<tied0>, <ga:@h>[TF=4]; CPURegs:%vreg44,%vreg43
	%vreg45<def> = ADDu %vreg44<kill>, %vreg42<kill>; CPURegs:%vreg45,%vreg44,%vreg42
	%vreg46<def> = LD %vreg45<kill>, 0; mem:LD4[%arrayidx](tbaa=<badref>) CPURegs:%vreg46,%vreg45
	%vreg47<def> = LD %vreg41<kill>, 0; mem:LD4[%arrayidx5](tbaa=<badref>) CPURegs:%vreg47,%vreg41
	%vreg48<def> = MUL32 %vreg47<kill>, %vreg46<kill>; CPURegs:%vreg48,%vreg47,%vreg46
	%vreg12<def> = ADDu %vreg9, %vreg48<kill>; CPURegs:%vreg12,%vreg9,%vreg48
	%vreg14<def> = ADDiu %vreg11, 1; CPURegs:%vreg14,%vreg11
	%vreg49<def> = EQ %vreg14, %vreg1; CPURegs:%vreg49,%vreg14,%vreg1
	%vreg13<def> = ADDu %vreg12, %vreg10; CPURegs:%vreg13,%vreg12,%vreg10
	JC %vreg49<kill>, <BB#2>; CPURegs:%vreg49
	Jmp <BB#6>
    Successors according to CFG: BB#2(4) BB#6(124)

BB#7: derived from LLVM BB %while.end9
    Predecessors according to CFG: BB#0 BB#3
	%vreg15<def> = PHI %vreg21, <BB#0>, %vreg3, <BB#3>; CPURegs:%vreg15,%vreg21,%vreg3
	%vreg52<def> = MovIGH %ZERO, <ga:@nTaps>[TF=3]; CPURegs:%vreg52
	%vreg53<def,tied1> = MovIGL %vreg52<tied0>, <ga:@nTaps>[TF=4]; CPURegs:%vreg53,%vreg52
	%vreg54<def> = LD %vreg53<kill>, 0; mem:LD4[@nTaps](tbaa=<badref>) CPURegs:%vreg54,%vreg53
	%vreg55<def> = MovGR %ZERO, 1; CPURegs:%vreg55
	%vreg56<def> = LT %vreg54<kill>, %vreg55<kill>; CPURegs:%vreg56,%vreg54,%vreg55
	%vreg57<def> = MovIGH %ZERO, <ga:@nSamples>[TF=3]; CPURegs:%vreg57
	%vreg58<def,tied1> = MovIGL %vreg57<tied0>, <ga:@nSamples>[TF=4]; CPURegs:%vreg58,%vreg57
	%vreg59<def> = LD %vreg58<kill>, 0; mem:LD4[@nSamples](tbaa=<badref>) CPURegs:%vreg59,%vreg58
	%vreg16<def> = ADDiu %vreg59<kill>, -1; CPURegs:%vreg16,%vreg59
	JC %vreg56<kill>, <BB#10>; CPURegs:%vreg56
	Jmp <BB#8>
    Successors according to CFG: BB#8(20) BB#10(12)

BB#8: derived from LLVM BB %for.body.lr.ph
    Predecessors according to CFG: BB#7
	%vreg61<def> = MovGR %ZERO, 2; CPURegs:%vreg61
	%vreg62<def> = SHL %vreg16, %vreg61<kill>; CPURegs:%vreg62,%vreg16,%vreg61
	%vreg63<def> = MovIGH %ZERO, <ga:@x>[TF=3]; CPURegs:%vreg63
	%vreg64<def,tied1> = MovIGL %vreg63<tied0>, <ga:@x>[TF=4]; CPURegs:%vreg64,%vreg63
	%vreg65<def> = ADDu %vreg64<kill>, %vreg62<kill>; CPURegs:%vreg65,%vreg64,%vreg62
	%vreg66<def> = LD %vreg65<kill>, 0; mem:LD4[%arrayidx12](tbaa=<badref>) CPURegs:%vreg66,%vreg65
	%vreg67<def> = SUBu %vreg66<kill>, %vreg15; CPURegs:%vreg67,%vreg66,%vreg15
	%vreg68<def> = MovGR %ZERO, 1; CPURegs:%vreg68
	%vreg17<def> = SHL %vreg67<kill>, %vreg68<kill>; CPURegs:%vreg17,%vreg67,%vreg68
	%vreg60<def> = MovGR %ZERO, 0; CPURegs:%vreg60
	%vreg69<def> = MovIGH %ZERO, <ga:@nTaps>[TF=3]; CPURegs:%vreg69
	%vreg70<def,tied1> = MovIGL %vreg69<tied0>, <ga:@nTaps>[TF=4]; CPURegs:%vreg70,%vreg69
	%vreg18<def> = LD %vreg70<kill>, 0; mem:LD4[@nTaps](tbaa=<badref>) CPURegs:%vreg18,%vreg70
	Jmp <BB#9>
    Successors according to CFG: BB#9

BB#9: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#8 BB#9
	%vreg19<def> = PHI %vreg60, <BB#8>, %vreg20, <BB#9>; CPURegs:%vreg19,%vreg60,%vreg20
	%vreg71<def> = SUBu %vreg16, %vreg19; CPURegs:%vreg71,%vreg16,%vreg19
	%vreg72<def> = MovGR %ZERO, 2; CPURegs:%vreg72
	%vreg73<def> = SHL %vreg71<kill>, %vreg72; CPURegs:%vreg73,%vreg71,%vreg72
	%vreg74<def> = MovIGH %ZERO, <ga:@x>[TF=3]; CPURegs:%vreg74
	%vreg75<def,tied1> = MovIGL %vreg74<tied0>, <ga:@x>[TF=4]; CPURegs:%vreg75,%vreg74
	%vreg76<def> = ADDu %vreg75<kill>, %vreg73<kill>; CPURegs:%vreg76,%vreg75,%vreg73
	%vreg77<def> = LD %vreg76<kill>, 0; mem:LD4[%arrayidx16](tbaa=<badref>) CPURegs:%vreg77,%vreg76
	%vreg78<def> = MUL32 %vreg17, %vreg77<kill>; CPURegs:%vreg78,%vreg17,%vreg77
	%vreg79<def> = SHL %vreg19, %vreg72; CPURegs:%vreg79,%vreg19,%vreg72
	%vreg80<def> = MovIGH %ZERO, <ga:@w>[TF=3]; CPURegs:%vreg80
	%vreg81<def,tied1> = MovIGL %vreg80<tied0>, <ga:@w>[TF=4]; CPURegs:%vreg81,%vreg80
	%vreg82<def> = ADDu %vreg81<kill>, %vreg79<kill>; CPURegs:%vreg82,%vreg81,%vreg79
	%vreg83<def> = LD %vreg82, 0; mem:LD4[%arrayidx18](tbaa=<badref>) CPURegs:%vreg83,%vreg82
	%vreg84<def> = ADDu %vreg78<kill>, %vreg83<kill>; CPURegs:%vreg84,%vreg78,%vreg83
	ST %vreg84<kill>, %vreg82, 0; mem:ST4[%arrayidx18](tbaa=<badref>) CPURegs:%vreg84,%vreg82
	%vreg20<def> = ADDiu %vreg19, 1; CPURegs:%vreg20,%vreg19
	%vreg85<def> = LT %vreg20, %vreg18; CPURegs:%vreg85,%vreg20,%vreg18
	JC %vreg85<kill>, <BB#9>; CPURegs:%vreg85
	Jmp <BB#10>
    Successors according to CFG: BB#9(124) BB#10(4)

BB#10: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#7 BB#9
	RetLR

# End machine code for function fir.


#####==========stderr_obj==========#####:
# Machine code for function fir: SSA

BB#0: derived from LLVM BB %entry
	%vreg22<def> = MovIGH %ZERO, <ga:@nSamples>[TF=3]; CPURegs:%vreg22
	%vreg23<def,tied1> = MovIGL %vreg22<tied0>, <ga:@nSamples>[TF=4]; CPURegs:%vreg23,%vreg22
	%vreg0<def> = LD %vreg23<kill>, 0; mem:LD4[@nSamples](tbaa=<badref>) CPURegs:%vreg0,%vreg23
	%vreg24<def> = MovGR %ZERO, 1; CPURegs:%vreg24
	%vreg25<def> = LT %vreg0, %vreg24<kill>; CPURegs:%vreg25,%vreg0,%vreg24
	%vreg21<def> = IMPLICIT_DEF; CPURegs:%vreg21
	JC %vreg25<kill>, <BB#7>; CPURegs:%vreg25
	Jmp <BB#1>
    Successors according to CFG: BB#1(20) BB#7(12)

BB#1: derived from LLVM BB %while.cond1.preheader.lr.ph
    Predecessors according to CFG: BB#0
	%vreg27<def> = MovIGH %ZERO, <ga:@nTaps>[TF=3]; CPURegs:%vreg27
	%vreg28<def,tied1> = MovIGL %vreg27<tied0>, <ga:@nTaps>[TF=4]; CPURegs:%vreg28,%vreg27
	%vreg1<def> = LD %vreg28<kill>, 0; mem:LD4[@nTaps](tbaa=<badref>) CPURegs:%vreg1,%vreg28
	%vreg29<def> = MovGR %ZERO, 0; CPURegs:%vreg29
	%vreg2<def> = GT %vreg1, %vreg29<kill>; CPURegs:%vreg2,%vreg1,%vreg29
	%vreg26<def> = IMPLICIT_DEF; CPURegs:%vreg26
	Jmp <BB#4>
    Successors according to CFG: BB#4

BB#2: derived from LLVM BB %while.cond1.while.cond.loopexit_crit_edge
    Predecessors according to CFG: BB#6
	ST %vreg12, %vreg7, 0; mem:ST4[%arrayidx6](tbaa=<badref>) CPURegs:%vreg12,%vreg7
	Jmp <BB#3>
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %while.cond.loopexit
    Predecessors according to CFG: BB#4 BB#2
	%vreg3<def> = PHI %vreg5, <BB#4>, %vreg13, <BB#2>; CPURegs:%vreg3,%vreg5,%vreg13
	%vreg50<def> = MovGR %ZERO, 1; CPURegs:%vreg50
	%vreg51<def> = LT %vreg6, %vreg50<kill>; CPURegs:%vreg51,%vreg6,%vreg50
	JC %vreg51<kill>, <BB#7>; CPURegs:%vreg51
	Jmp <BB#4>
    Successors according to CFG: BB#4(124) BB#7(4)

BB#4: derived from LLVM BB %while.cond1.preheader
    Predecessors according to CFG: BB#1 BB#3
	%vreg4<def> = PHI %vreg0, <BB#1>, %vreg6, <BB#3>; CPURegs:%vreg4,%vreg0,%vreg6
	%vreg5<def> = PHI %vreg26, <BB#1>, %vreg3, <BB#3>; CPURegs:%vreg5,%vreg26,%vreg3
	%vreg6<def> = ADDiu %vreg4, -1; CPURegs:%vreg6,%vreg4
	%vreg30<def> = EQI %vreg2, 0; CPURegs:%vreg30,%vreg2
	JC %vreg30<kill>, <BB#3>; CPURegs:%vreg30
	Jmp <BB#5>
    Successors according to CFG: BB#5(20) BB#3(12)

BB#5: derived from LLVM BB %while.body3.lr.ph
    Predecessors according to CFG: BB#4
	%vreg32<def> = MovGR %ZERO, 2; CPURegs:%vreg32
	%vreg33<def> = SHL %vreg6, %vreg32<kill>; CPURegs:%vreg33,%vreg6,%vreg32
	%vreg34<def> = MovIGH %ZERO, <ga:@y>[TF=3]; CPURegs:%vreg34
	%vreg35<def,tied1> = MovIGL %vreg34<tied0>, <ga:@y>[TF=4]; CPURegs:%vreg35,%vreg34
	%vreg7<def> = ADDu %vreg35<kill>, %vreg33<kill>; CPURegs:%vreg7,%vreg35,%vreg33
	%vreg31<def> = MovGR %ZERO, 0; CPURegs:%vreg31
	%vreg8<def> = LD %vreg7, 0; mem:LD4[%arrayidx6](tbaa=<badref>) CPURegs:%vreg8,%vreg7
	Jmp <BB#6>
    Successors according to CFG: BB#6

BB#6: derived from LLVM BB %while.body3
    Predecessors according to CFG: BB#5 BB#6
	%vreg9<def> = PHI %vreg8, <BB#5>, %vreg12, <BB#6>; CPURegs:%vreg9,%vreg8,%vreg12
	%vreg10<def> = PHI %vreg5, <BB#5>, %vreg13, <BB#6>; CPURegs:%vreg10,%vreg5,%vreg13
	%vreg11<def> = PHI %vreg31, <BB#5>, %vreg14, <BB#6>; CPURegs:%vreg11,%vreg31,%vreg14
	%vreg36<def> = SUBu %vreg6, %vreg11; CPURegs:%vreg36,%vreg6,%vreg11
	%vreg37<def> = MovGR %ZERO, 2; CPURegs:%vreg37
	%vreg38<def> = SHL %vreg36<kill>, %vreg37; CPURegs:%vreg38,%vreg36,%vreg37
	%vreg39<def> = MovIGH %ZERO, <ga:@x>[TF=3]; CPURegs:%vreg39
	%vreg40<def,tied1> = MovIGL %vreg39<tied0>, <ga:@x>[TF=4]; CPURegs:%vreg40,%vreg39
	%vreg41<def> = ADDu %vreg40<kill>, %vreg38<kill>; CPURegs:%vreg41,%vreg40,%vreg38
	%vreg42<def> = SHL %vreg11, %vreg37; CPURegs:%vreg42,%vreg11,%vreg37
	%vreg43<def> = MovIGH %ZERO, <ga:@h>[TF=3]; CPURegs:%vreg43
	%vreg44<def,tied1> = MovIGL %vreg43<tied0>, <ga:@h>[TF=4]; CPURegs:%vreg44,%vreg43
	%vreg45<def> = ADDu %vreg44<kill>, %vreg42<kill>; CPURegs:%vreg45,%vreg44,%vreg42
	%vreg46<def> = LD %vreg45<kill>, 0; mem:LD4[%arrayidx](tbaa=<badref>) CPURegs:%vreg46,%vreg45
	%vreg47<def> = LD %vreg41<kill>, 0; mem:LD4[%arrayidx5](tbaa=<badref>) CPURegs:%vreg47,%vreg41
	%vreg48<def> = MUL32 %vreg47<kill>, %vreg46<kill>; CPURegs:%vreg48,%vreg47,%vreg46
	%vreg12<def> = ADDu %vreg9, %vreg48<kill>; CPURegs:%vreg12,%vreg9,%vreg48
	%vreg14<def> = ADDiu %vreg11, 1; CPURegs:%vreg14,%vreg11
	%vreg49<def> = EQ %vreg14, %vreg1; CPURegs:%vreg49,%vreg14,%vreg1
	%vreg13<def> = ADDu %vreg12, %vreg10; CPURegs:%vreg13,%vreg12,%vreg10
	JC %vreg49<kill>, <BB#2>; CPURegs:%vreg49
	Jmp <BB#6>
    Successors according to CFG: BB#2(4) BB#6(124)

BB#7: derived from LLVM BB %while.end9
    Predecessors according to CFG: BB#0 BB#3
	%vreg15<def> = PHI %vreg21, <BB#0>, %vreg3, <BB#3>; CPURegs:%vreg15,%vreg21,%vreg3
	%vreg52<def> = MovIGH %ZERO, <ga:@nTaps>[TF=3]; CPURegs:%vreg52
	%vreg53<def,tied1> = MovIGL %vreg52<tied0>, <ga:@nTaps>[TF=4]; CPURegs:%vreg53,%vreg52
	%vreg54<def> = LD %vreg53<kill>, 0; mem:LD4[@nTaps](tbaa=<badref>) CPURegs:%vreg54,%vreg53
	%vreg55<def> = MovGR %ZERO, 1; CPURegs:%vreg55
	%vreg56<def> = LT %vreg54<kill>, %vreg55<kill>; CPURegs:%vreg56,%vreg54,%vreg55
	%vreg57<def> = MovIGH %ZERO, <ga:@nSamples>[TF=3]; CPURegs:%vreg57
	%vreg58<def,tied1> = MovIGL %vreg57<tied0>, <ga:@nSamples>[TF=4]; CPURegs:%vreg58,%vreg57
	%vreg59<def> = LD %vreg58<kill>, 0; mem:LD4[@nSamples](tbaa=<badref>) CPURegs:%vreg59,%vreg58
	%vreg16<def> = ADDiu %vreg59<kill>, -1; CPURegs:%vreg16,%vreg59
	JC %vreg56<kill>, <BB#10>; CPURegs:%vreg56
	Jmp <BB#8>
    Successors according to CFG: BB#8(20) BB#10(12)

BB#8: derived from LLVM BB %for.body.lr.ph
    Predecessors according to CFG: BB#7
	%vreg61<def> = MovGR %ZERO, 2; CPURegs:%vreg61
	%vreg62<def> = SHL %vreg16, %vreg61<kill>; CPURegs:%vreg62,%vreg16,%vreg61
	%vreg63<def> = MovIGH %ZERO, <ga:@x>[TF=3]; CPURegs:%vreg63
	%vreg64<def,tied1> = MovIGL %vreg63<tied0>, <ga:@x>[TF=4]; CPURegs:%vreg64,%vreg63
	%vreg65<def> = ADDu %vreg64<kill>, %vreg62<kill>; CPURegs:%vreg65,%vreg64,%vreg62
	%vreg66<def> = LD %vreg65<kill>, 0; mem:LD4[%arrayidx12](tbaa=<badref>) CPURegs:%vreg66,%vreg65
	%vreg67<def> = SUBu %vreg66<kill>, %vreg15; CPURegs:%vreg67,%vreg66,%vreg15
	%vreg68<def> = MovGR %ZERO, 1; CPURegs:%vreg68
	%vreg17<def> = SHL %vreg67<kill>, %vreg68<kill>; CPURegs:%vreg17,%vreg67,%vreg68
	%vreg60<def> = MovGR %ZERO, 0; CPURegs:%vreg60
	%vreg69<def> = MovIGH %ZERO, <ga:@nTaps>[TF=3]; CPURegs:%vreg69
	%vreg70<def,tied1> = MovIGL %vreg69<tied0>, <ga:@nTaps>[TF=4]; CPURegs:%vreg70,%vreg69
	%vreg18<def> = LD %vreg70<kill>, 0; mem:LD4[@nTaps](tbaa=<badref>) CPURegs:%vreg18,%vreg70
	Jmp <BB#9>
    Successors according to CFG: BB#9

BB#9: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#8 BB#9
	%vreg19<def> = PHI %vreg60, <BB#8>, %vreg20, <BB#9>; CPURegs:%vreg19,%vreg60,%vreg20
	%vreg71<def> = SUBu %vreg16, %vreg19; CPURegs:%vreg71,%vreg16,%vreg19
	%vreg72<def> = MovGR %ZERO, 2; CPURegs:%vreg72
	%vreg73<def> = SHL %vreg71<kill>, %vreg72; CPURegs:%vreg73,%vreg71,%vreg72
	%vreg74<def> = MovIGH %ZERO, <ga:@x>[TF=3]; CPURegs:%vreg74
	%vreg75<def,tied1> = MovIGL %vreg74<tied0>, <ga:@x>[TF=4]; CPURegs:%vreg75,%vreg74
	%vreg76<def> = ADDu %vreg75<kill>, %vreg73<kill>; CPURegs:%vreg76,%vreg75,%vreg73
	%vreg77<def> = LD %vreg76<kill>, 0; mem:LD4[%arrayidx16](tbaa=<badref>) CPURegs:%vreg77,%vreg76
	%vreg78<def> = MUL32 %vreg17, %vreg77<kill>; CPURegs:%vreg78,%vreg17,%vreg77
	%vreg79<def> = SHL %vreg19, %vreg72; CPURegs:%vreg79,%vreg19,%vreg72
	%vreg80<def> = MovIGH %ZERO, <ga:@w>[TF=3]; CPURegs:%vreg80
	%vreg81<def,tied1> = MovIGL %vreg80<tied0>, <ga:@w>[TF=4]; CPURegs:%vreg81,%vreg80
	%vreg82<def> = ADDu %vreg81<kill>, %vreg79<kill>; CPURegs:%vreg82,%vreg81,%vreg79
	%vreg83<def> = LD %vreg82, 0; mem:LD4[%arrayidx18](tbaa=<badref>) CPURegs:%vreg83,%vreg82
	%vreg84<def> = ADDu %vreg78<kill>, %vreg83<kill>; CPURegs:%vreg84,%vreg78,%vreg83
	ST %vreg84<kill>, %vreg82, 0; mem:ST4[%arrayidx18](tbaa=<badref>) CPURegs:%vreg84,%vreg82
	%vreg20<def> = ADDiu %vreg19, 1; CPURegs:%vreg20,%vreg19
	%vreg85<def> = LT %vreg20, %vreg18; CPURegs:%vreg85,%vreg20,%vreg18
	JC %vreg85<kill>, <BB#9>; CPURegs:%vreg85
	Jmp <BB#10>
    Successors according to CFG: BB#9(124) BB#10(4)

BB#10: derived from LLVM BB %for.end
    Predecessors according to CFG: BB#7 BB#9
	RetLR

# End machine code for function fir.

