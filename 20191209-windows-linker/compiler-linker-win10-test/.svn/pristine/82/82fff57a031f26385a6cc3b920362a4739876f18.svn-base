
#####==========stderr_mid==========#####:
'' is not a recognized processor for this target (ignoring processor)

#####==========stderr_asm==========#####:
# Machine code for function main: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 0; CPURegs:%vreg0
	ST %vreg0, <fi#0>, 0; mem:ST4[%retval] CPURegs:%vreg0
	ST %vreg0, <fi#1>, 0; mem:ST4[%i] CPURegs:%vreg0
	%vreg1<def> = MovGR %ZERO, 4; CPURegs:%vreg1
	ST %vreg1<kill>, <fi#2>, 0; mem:ST4[%j] CPURegs:%vreg1
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %while.cond
    Predecessors according to CFG: BB#0 BB#2
	%vreg2<def> = LD <fi#2>, 0; mem:LD4[%j] CPURegs:%vreg2
	%vreg3<def> = LD <fi#1>, 0; mem:LD4[%i] CPURegs:%vreg3
	%vreg4<def> = GE %vreg3<kill>, %vreg2<kill>; CPURegs:%vreg4,%vreg3,%vreg2
	JC %vreg4<kill>, <BB#4>; CPURegs:%vreg4
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#4(4)

BB#2: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#1 BB#3
	%vreg8<def> = LD <fi#2>, 0; mem:LD4[%j] CPURegs:%vreg8
	%vreg9<def> = LD <fi#1>, 0; mem:LD4[%i] CPURegs:%vreg9
	%vreg10<def> = EQ %vreg9<kill>, %vreg8<kill>; CPURegs:%vreg10,%vreg9,%vreg8
	JC %vreg10<kill>, <BB#1>; CPURegs:%vreg10
	Jmp <BB#3>
    Successors according to CFG: BB#1(4) BB#3(124)

BB#3: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#2
	%vreg11<def> = LD <fi#1>, 0; mem:LD4[%i] CPURegs:%vreg11
	%vreg12<def> = ADDiu %vreg11<kill>, 1; CPURegs:%vreg12,%vreg11
	ST %vreg12<kill>, <fi#1>, 0; mem:ST4[%i] CPURegs:%vreg12
	Jmp <BB#2>
    Successors according to CFG: BB#2

BB#4: derived from LLVM BB %while.end
    Predecessors according to CFG: BB#1
	%vreg5<def> = LD <fi#1>, 0; mem:LD4[%i] CPURegs:%vreg5
	%vreg6<def> = LD <fi#2>, 0; mem:LD4[%j] CPURegs:%vreg6
	%vreg7<def> = SUBu %vreg6<kill>, %vreg5<kill>; CPURegs:%vreg7,%vreg6,%vreg5
	%V0<def> = COPY %vreg7; CPURegs:%vreg7
	RetLR %V0<imp-use>

# End machine code for function main.


#####==========stderr_obj==========#####:
# Machine code for function main: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovGR %ZERO, 0; CPURegs:%vreg0
	ST %vreg0, <fi#0>, 0; mem:ST4[%retval] CPURegs:%vreg0
	ST %vreg0, <fi#1>, 0; mem:ST4[%i] CPURegs:%vreg0
	%vreg1<def> = MovGR %ZERO, 4; CPURegs:%vreg1
	ST %vreg1<kill>, <fi#2>, 0; mem:ST4[%j] CPURegs:%vreg1
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %while.cond
    Predecessors according to CFG: BB#0 BB#2
	%vreg2<def> = LD <fi#2>, 0; mem:LD4[%j] CPURegs:%vreg2
	%vreg3<def> = LD <fi#1>, 0; mem:LD4[%i] CPURegs:%vreg3
	%vreg4<def> = GE %vreg3<kill>, %vreg2<kill>; CPURegs:%vreg4,%vreg3,%vreg2
	JC %vreg4<kill>, <BB#4>; CPURegs:%vreg4
	Jmp <BB#2>
    Successors according to CFG: BB#2(124) BB#4(4)

BB#2: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#1 BB#3
	%vreg8<def> = LD <fi#2>, 0; mem:LD4[%j] CPURegs:%vreg8
	%vreg9<def> = LD <fi#1>, 0; mem:LD4[%i] CPURegs:%vreg9
	%vreg10<def> = EQ %vreg9<kill>, %vreg8<kill>; CPURegs:%vreg10,%vreg9,%vreg8
	JC %vreg10<kill>, <BB#1>; CPURegs:%vreg10
	Jmp <BB#3>
    Successors according to CFG: BB#1(4) BB#3(124)

BB#3: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#2
	%vreg11<def> = LD <fi#1>, 0; mem:LD4[%i] CPURegs:%vreg11
	%vreg12<def> = ADDiu %vreg11<kill>, 1; CPURegs:%vreg12,%vreg11
	ST %vreg12<kill>, <fi#1>, 0; mem:ST4[%i] CPURegs:%vreg12
	Jmp <BB#2>
    Successors according to CFG: BB#2

BB#4: derived from LLVM BB %while.end
    Predecessors according to CFG: BB#1
	%vreg5<def> = LD <fi#1>, 0; mem:LD4[%i] CPURegs:%vreg5
	%vreg6<def> = LD <fi#2>, 0; mem:LD4[%j] CPURegs:%vreg6
	%vreg7<def> = SUBu %vreg6<kill>, %vreg5<kill>; CPURegs:%vreg7,%vreg6,%vreg5
	%V0<def> = COPY %vreg7; CPURegs:%vreg7
	RetLR %V0<imp-use>

# End machine code for function main.

