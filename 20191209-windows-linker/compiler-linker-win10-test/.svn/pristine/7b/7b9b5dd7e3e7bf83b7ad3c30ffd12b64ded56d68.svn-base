
#####==========stderr_mid==========#####:
clang version 3.5.0 (tags/RELEASE_350/final)
Target: dsp
Thread model: posix
 "D:\ppp\lee_han-dsp_compiler-master\dsp_compiler_old\build-x64\Debug\bin\clang.exe" -cc1 -triple dsp -emit-llvm -disable-free -main-file-name ch6_1p.c -mrelocation-model static -mdisable-fp-elim -fmath-errno -no-integrated-as -mconstructor-aliases -v -dwarf-column-info -coverage-file "D:\\ppp\\Linker PPP\\20191209-windows-linker\\compiler-linker-win10-test\\./testcase_8slots/ch6_1p.ll" -resource-dir "D:\\ppp\\lee_han-dsp_compiler-master\\dsp_compiler_old\\build-x64\\Debug\\bin\\..\\lib\\clang\\3.5.0" -I ./include -O1 -fno-dwarf-directory-asm -fdebug-compilation-dir "D:\\ppp\\Linker PPP\\20191209-windows-linker\\compiler-linker-win10-test" -ferror-limit 19 -fmessage-length 0 -mstackrealign -fobjc-runtime=gcc -fdiagnostics-show-option -o ./testcase_8slots/ch6_1p.ll -x c ./testcase_8slots/ch6_1p.c
clang -cc1 version 3.5.0 based upon LLVM 3.5.0svn default target x86_64-pc-windows-msvc
ignoring nonexistent directory "/usr/local/include"
ignoring nonexistent directory "/usr/include"
#include "..." search starts here:
#include <...> search starts here:
 ./include
 D:\ppp\lee_han-dsp_compiler-master\dsp_compiler_old\build-x64\Debug\bin\..\lib\clang\3.5.0\include
End of search list.
'' is not a recognized processor for this target (ignoring processor)

#####==========stderr_asm==========#####:
# Machine code for function main: SSA

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovIGH %ZERO, <ga:@gI2>[TF=3]; CPURegs:%vreg0
	%vreg1<def,tied1> = MovIGL %vreg0<tied0>, <ga:@gI2>[TF=4]; CPURegs:%vreg1,%vreg0
	%vreg2<def> = LD %vreg1<kill>, 0; mem:LD4[@gI2](tbaa=<badref>) CPURegs:%vreg2,%vreg1
	%vreg3<def> = MovIGH %ZERO, <ga:@gI>[TF=3]; CPURegs:%vreg3
	%vreg4<def,tied1> = MovIGL %vreg3<tied0>, <ga:@gI>[TF=4]; CPURegs:%vreg4,%vreg3
	%vreg5<def> = LD %vreg4<kill>, 0; mem:LD4[@gI](tbaa=<badref>) CPURegs:%vreg5,%vreg4
	%vreg6<def> = ADDu %vreg5<kill>, %vreg2<kill>; CPURegs:%vreg6,%vreg5,%vreg2
	%vreg7<def> = MovIGH %ZERO, <ga:@gI3>[TF=3]; CPURegs:%vreg7
	%vreg8<def,tied1> = MovIGL %vreg7<tied0>, <ga:@gI3>[TF=4]; CPURegs:%vreg8,%vreg7
	%vreg9<def> = LD %vreg8<kill>, 0; mem:LD4[@gI3](tbaa=<badref>) CPURegs:%vreg9,%vreg8
	%vreg10<def> = ADDu %vreg6<kill>, %vreg9<kill>; CPURegs:%vreg10,%vreg6,%vreg9
	%vreg11<def> = MovIGH %ZERO, <ga:@gI4>[TF=3]; CPURegs:%vreg11
	%vreg12<def,tied1> = MovIGL %vreg11<tied0>, <ga:@gI4>[TF=4]; CPURegs:%vreg12,%vreg11
	%vreg13<def> = LD %vreg12<kill>, 0; mem:LD4[@gI4](tbaa=<badref>) CPURegs:%vreg13,%vreg12
	%vreg14<def> = ADDu %vreg10<kill>, %vreg13<kill>; CPURegs:%vreg14,%vreg10,%vreg13
	%vreg15<def> = MovIGH %ZERO, <ga:@gI5>[TF=3]; CPURegs:%vreg15
	%vreg16<def,tied1> = MovIGL %vreg15<tied0>, <ga:@gI5>[TF=4]; CPURegs:%vreg16,%vreg15
	%vreg17<def> = LD %vreg16<kill>, 0; mem:LD4[@gI5](tbaa=<badref>) CPURegs:%vreg17,%vreg16
	%vreg18<def> = ADDu %vreg14<kill>, %vreg17<kill>; CPURegs:%vreg18,%vreg14,%vreg17
	%vreg19<def> = ADDiu %vreg18<kill>, 2; CPURegs:%vreg19,%vreg18
	%V0<def> = COPY %vreg19; CPURegs:%vreg19
	RetLR %V0<imp-use>

# End machine code for function main.


#####==========stderr_obj==========#####:
# Machine code for function main: SSA

BB#0: derived from LLVM BB %entry
	%vreg0<def> = MovIGH %ZERO, <ga:@gI2>[TF=3]; CPURegs:%vreg0
	%vreg1<def,tied1> = MovIGL %vreg0<tied0>, <ga:@gI2>[TF=4]; CPURegs:%vreg1,%vreg0
	%vreg2<def> = LD %vreg1<kill>, 0; mem:LD4[@gI2](tbaa=<badref>) CPURegs:%vreg2,%vreg1
	%vreg3<def> = MovIGH %ZERO, <ga:@gI>[TF=3]; CPURegs:%vreg3
	%vreg4<def,tied1> = MovIGL %vreg3<tied0>, <ga:@gI>[TF=4]; CPURegs:%vreg4,%vreg3
	%vreg5<def> = LD %vreg4<kill>, 0; mem:LD4[@gI](tbaa=<badref>) CPURegs:%vreg5,%vreg4
	%vreg6<def> = ADDu %vreg5<kill>, %vreg2<kill>; CPURegs:%vreg6,%vreg5,%vreg2
	%vreg7<def> = MovIGH %ZERO, <ga:@gI3>[TF=3]; CPURegs:%vreg7
	%vreg8<def,tied1> = MovIGL %vreg7<tied0>, <ga:@gI3>[TF=4]; CPURegs:%vreg8,%vreg7
	%vreg9<def> = LD %vreg8<kill>, 0; mem:LD4[@gI3](tbaa=<badref>) CPURegs:%vreg9,%vreg8
	%vreg10<def> = ADDu %vreg6<kill>, %vreg9<kill>; CPURegs:%vreg10,%vreg6,%vreg9
	%vreg11<def> = MovIGH %ZERO, <ga:@gI4>[TF=3]; CPURegs:%vreg11
	%vreg12<def,tied1> = MovIGL %vreg11<tied0>, <ga:@gI4>[TF=4]; CPURegs:%vreg12,%vreg11
	%vreg13<def> = LD %vreg12<kill>, 0; mem:LD4[@gI4](tbaa=<badref>) CPURegs:%vreg13,%vreg12
	%vreg14<def> = ADDu %vreg10<kill>, %vreg13<kill>; CPURegs:%vreg14,%vreg10,%vreg13
	%vreg15<def> = MovIGH %ZERO, <ga:@gI5>[TF=3]; CPURegs:%vreg15
	%vreg16<def,tied1> = MovIGL %vreg15<tied0>, <ga:@gI5>[TF=4]; CPURegs:%vreg16,%vreg15
	%vreg17<def> = LD %vreg16<kill>, 0; mem:LD4[@gI5](tbaa=<badref>) CPURegs:%vreg17,%vreg16
	%vreg18<def> = ADDu %vreg14<kill>, %vreg17<kill>; CPURegs:%vreg18,%vreg14,%vreg17
	%vreg19<def> = ADDiu %vreg18<kill>, 2; CPURegs:%vreg19,%vreg18
	%V0<def> = COPY %vreg19; CPURegs:%vreg19
	RetLR %V0<imp-use>

# End machine code for function main.

